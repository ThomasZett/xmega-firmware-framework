DMA_TEMP   = (0x0106)
DMA_CH0_TRFCNT   = (0x0114)
DMA_CH1_TRFCNT   = (0x0124)
DMA_CH2_TRFCNT   = (0x0134)
DMA_CH3_TRFCNT   = (0x0144)
ADCA_CAL   = (0x020C)
ADCA_CH0RES   = (0x0210)
ADCA_CH1RES   = (0x0212)
ADCA_CH2RES   = (0x0214)
ADCA_CH3RES   = (0x0216)
ADCA_CMP   = (0x0218)
ADCA_CH0_RES   = (0x0224)
ADCA_CH1_RES   = (0x022C)
ADCA_CH2_RES   = (0x0234)
ADCA_CH3_RES   = (0x023C)
DACB_CH0DATA   = (0x0338)
DACB_CH1DATA   = (0x033A)
RTC_CNT   = (0x0408)
RTC_PER   = (0x040A)
RTC_COMP   = (0x040C)
USB_EPPTR   = (0x04C6)
TCC0_CNT   = (0x0820)
TCC0_PER   = (0x0826)
TCC0_CCA   = (0x0828)
TCC0_CCB   = (0x082A)
TCC0_CCC   = (0x082C)
TCC0_CCD   = (0x082E)
TCC0_PERBUF   = (0x0836)
TCC0_CCABUF   = (0x0838)
TCC0_CCBBUF   = (0x083A)
TCC0_CCCBUF   = (0x083C)
TCC0_CCDBUF   = (0x083E)
TCC1_CNT   = (0x0860)
TCC1_PER   = (0x0866)
TCC1_CCA   = (0x0868)
TCC1_CCB   = (0x086A)
TCC1_PERBUF   = (0x0876)
TCC1_CCABUF   = (0x0878)
TCC1_CCBBUF   = (0x087A)
TCD0_CNT   = (0x0920)
TCD0_PER   = (0x0926)
TCD0_CCA   = (0x0928)
TCD0_CCB   = (0x092A)
TCD0_CCC   = (0x092C)
TCD0_CCD   = (0x092E)
TCD0_PERBUF   = (0x0936)
TCD0_CCABUF   = (0x0938)
TCD0_CCBBUF   = (0x093A)
TCD0_CCCBUF   = (0x093C)
TCD0_CCDBUF   = (0x093E)
TCD1_CNT   = (0x0960)
TCD1_PER   = (0x0966)
TCD1_CCA   = (0x0968)
TCD1_CCB   = (0x096A)
TCD1_PERBUF   = (0x0976)
TCD1_CCABUF   = (0x0978)
TCD1_CCBBUF   = (0x097A)
TCE0_CNT   = (0x0A20)
TCE0_PER   = (0x0A26)
TCE0_CCA   = (0x0A28)
TCE0_CCB   = (0x0A2A)
TCE0_CCC   = (0x0A2C)
TCE0_CCD   = (0x0A2E)
TCE0_PERBUF   = (0x0A36)
TCE0_CCABUF   = (0x0A38)
TCE0_CCBBUF   = (0x0A3A)
TCE0_CCCBUF   = (0x0A3C)
TCE0_CCDBUF   = (0x0A3E)
GPIOR0   = (0x0000)  # General Purpose IO Register 0 */
GPIOR1   = (0x0001)  # General Purpose IO Register 1 */
GPIOR2   = (0x0002)  # General Purpose IO Register 2 */
GPIOR3   = (0x0003)  # General Purpose IO Register 3 */
GPIOR4   = (0x0004)  # General Purpose IO Register 4 */
GPIOR5   = (0x0005)  # General Purpose IO Register 5 */
GPIOR6   = (0x0006)  # General Purpose IO Register 6 */
GPIOR7   = (0x0007)  # General Purpose IO Register 7 */
GPIOR8   = (0x0008)  # General Purpose IO Register 8 */
GPIOR9   = (0x0009)  # General Purpose IO Register 9 */
GPIORA   = (0x000A)  # General Purpose IO Register 10 */
GPIORB   = (0x000B)  # General Purpose IO Register 11 */
GPIORC   = (0x000C)  # General Purpose IO Register 12 */
GPIORD   = (0x000D)  # General Purpose IO Register 13 */
GPIORE   = (0x000E)  # General Purpose IO Register 14 */
GPIORF   = (0x000F)  # General Purpose IO Register 15 */
GPIO0   = (0x0000)  # General Purpose IO Register 0 */
GPIO1   = (0x0001)  # General Purpose IO Register 1 */
GPIO2   = (0x0002)  # General Purpose IO Register 2 */
GPIO3   = (0x0003)  # General Purpose IO Register 3 */
GPIO4   = (0x0004)  # General Purpose IO Register 4 */
GPIO5   = (0x0005)  # General Purpose IO Register 5 */
GPIO6   = (0x0006)  # General Purpose IO Register 6 */
GPIO7   = (0x0007)  # General Purpose IO Register 7 */
GPIO8   = (0x0008)  # General Purpose IO Register 8 */
GPIO9   = (0x0009)  # General Purpose IO Register 9 */
GPIOA   = (0x000A)  # General Purpose IO Register 10 */
GPIOB   = (0x000B)  # General Purpose IO Register 11 */
GPIOC   = (0x000C)  # General Purpose IO Register 12 */
GPIOD   = (0x000D)  # General Purpose IO Register 13 */
GPIOE   = (0x000E)  # General Purpose IO Register 14 */
GPIOF   = (0x000F)  # General Purpose IO Register 15 */
CCP   = (0x0034)  # Configuration Change Protection */
RAMPD   = (0x0038)  # Ramp D */
RAMPX   = (0x0039)  # Ramp X */
RAMPY   = (0x003A)  # Ramp Y */
RAMPZ   = (0x003B)  # Ramp Z */
EIND   = (0x003C)  # Extended Indirect Jump */
SPL   = (0x003D)  # Stack Pointer Low */
SPH   = (0x003E)  # Stack Pointer High */
SREG   = (0x003F)  # Status Register */
GPIO_GPIOR0   = (0x0000)
GPIO_GPIOR1   = (0x0001)
GPIO_GPIOR2   = (0x0002)
GPIO_GPIOR3   = (0x0003)
GPIO_GPIOR4   = (0x0004)
GPIO_GPIOR5   = (0x0005)
GPIO_GPIOR6   = (0x0006)
GPIO_GPIOR7   = (0x0007)
GPIO_GPIOR8   = (0x0008)
GPIO_GPIOR9   = (0x0009)
GPIO_GPIORA   = (0x000A)
GPIO_GPIORB   = (0x000B)
GPIO_GPIORC   = (0x000C)
GPIO_GPIORD   = (0x000D)
GPIO_GPIORE   = (0x000E)
GPIO_GPIORF   = (0x000F)
GPIO_GPIO0   = (0x0000)
GPIO_GPIO1   = (0x0001)
GPIO_GPIO2   = (0x0002)
GPIO_GPIO3   = (0x0003)
GPIO_GPIO4   = (0x0004)
GPIO_GPIO5   = (0x0005)
GPIO_GPIO6   = (0x0006)
GPIO_GPIO7   = (0x0007)
GPIO_GPIO8   = (0x0008)
GPIO_GPIO9   = (0x0009)
GPIO_GPIOA   = (0x000A)
GPIO_GPIOB   = (0x000B)
GPIO_GPIOC   = (0x000C)
GPIO_GPIOD   = (0x000D)
GPIO_GPIOE   = (0x000E)
GPIO_GPIOF   = (0x000F)
FUSE_FUSEBYTE1   = (0x0001)
FUSE_FUSEBYTE2   = (0x0002)
FUSE_FUSEBYTE4   = (0x0004)
FUSE_FUSEBYTE5   = (0x0005)
LOCKBIT_LOCKBITS   = (0x0000)
PRODSIGNATURES_RCOSC2M   = (0x0000)
PRODSIGNATURES_RCOSC2MA   = (0x0001)
PRODSIGNATURES_RCOSC32K   = (0x0002)
PRODSIGNATURES_RCOSC32M   = (0x0003)
PRODSIGNATURES_RCOSC32MA   = (0x0004)
PRODSIGNATURES_LOTNUM0   = (0x0008)
PRODSIGNATURES_LOTNUM1   = (0x0009)
PRODSIGNATURES_LOTNUM2   = (0x000A)
PRODSIGNATURES_LOTNUM3   = (0x000B)
PRODSIGNATURES_LOTNUM4   = (0x000C)
PRODSIGNATURES_LOTNUM5   = (0x000D)
PRODSIGNATURES_WAFNUM   = (0x0010)
PRODSIGNATURES_COORDX0   = (0x0012)
PRODSIGNATURES_COORDX1   = (0x0013)
PRODSIGNATURES_COORDY0   = (0x0014)
PRODSIGNATURES_COORDY1   = (0x0015)
PRODSIGNATURES_USBCAL0   = (0x001A)
PRODSIGNATURES_USBCAL1   = (0x001B)
PRODSIGNATURES_USBRCOSC   = (0x001C)
PRODSIGNATURES_USBRCOSCA   = (0x001D)
PRODSIGNATURES_ADCACAL0   = (0x0020)
PRODSIGNATURES_ADCACAL1   = (0x0021)
PRODSIGNATURES_ADCBCAL0   = (0x0024)
PRODSIGNATURES_ADCBCAL1   = (0x0025)
PRODSIGNATURES_TEMPSENSE0   = (0x002E)
PRODSIGNATURES_TEMPSENSE1   = (0x002F)
PRODSIGNATURES_DACA0OFFCAL   = (0x0030)
PRODSIGNATURES_DACA0GAINCAL   = (0x0031)
PRODSIGNATURES_DACB0OFFCAL   = (0x0032)
PRODSIGNATURES_DACB0GAINCAL   = (0x0033)
PRODSIGNATURES_DACA1OFFCAL   = (0x0034)
PRODSIGNATURES_DACA1GAINCAL   = (0x0035)
PRODSIGNATURES_DACB1OFFCAL   = (0x0036)
PRODSIGNATURES_DACB1GAINCAL   = (0x0037)
VPORT0_DIR   = (0x0010)
VPORT0_OUT   = (0x0011)
VPORT0_IN   = (0x0012)
VPORT0_INTFLAGS   = (0x0013)
VPORT1_DIR   = (0x0014)
VPORT1_OUT   = (0x0015)
VPORT1_IN   = (0x0016)
VPORT1_INTFLAGS   = (0x0017)
VPORT2_DIR   = (0x0018)
VPORT2_OUT   = (0x0019)
VPORT2_IN   = (0x001A)
VPORT2_INTFLAGS   = (0x001B)
VPORT3_DIR   = (0x001C)
VPORT3_OUT   = (0x001D)
VPORT3_IN   = (0x001E)
VPORT3_INTFLAGS   = (0x001F)
OCD_OCDR0   = (0x002E)
OCD_OCDR1   = (0x002F)
CPU_CCP   = (0x0034)
CPU_RAMPD   = (0x0038)
CPU_RAMPX   = (0x0039)
CPU_RAMPY   = (0x003A)
CPU_RAMPZ   = (0x003B)
CPU_EIND   = (0x003C)
CPU_SPL   = (0x003D)
CPU_SPH   = (0x003E)
CPU_SREG   = (0x003F)
CLK_CTRL   = (0x0040)
CLK_PSCTRL   = (0x0041)
CLK_LOCK   = (0x0042)
CLK_RTCCTRL   = (0x0043)
CLK_USBCTRL   = (0x0044)
SLEEP_CTRL   = (0x0048)
OSC_CTRL   = (0x0050)
OSC_STATUS   = (0x0051)
OSC_XOSCCTRL   = (0x0052)
OSC_XOSCFAIL   = (0x0053)
OSC_RC32KCAL   = (0x0054)
OSC_PLLCTRL   = (0x0055)
OSC_DFLLCTRL   = (0x0056)
DFLLRC32M_CTRL   = (0x0060)
DFLLRC32M_CALA   = (0x0062)
DFLLRC32M_CALB   = (0x0063)
DFLLRC32M_COMP0   = (0x0064)
DFLLRC32M_COMP1   = (0x0065)
DFLLRC32M_COMP2   = (0x0066)
DFLLRC2M_CTRL   = (0x0068)
DFLLRC2M_CALA   = (0x006A)
DFLLRC2M_CALB   = (0x006B)
DFLLRC2M_COMP0   = (0x006C)
DFLLRC2M_COMP1   = (0x006D)
DFLLRC2M_COMP2   = (0x006E)
PR_PRGEN   = (0x0070)
PR_PRPA   = (0x0071)
PR_PRPB   = (0x0072)
PR_PRPC   = (0x0073)
PR_PRPD   = (0x0074)
PR_PRPE   = (0x0075)
PR_PRPF   = (0x0076)
RST_STATUS   = (0x0078)
RST_CTRL   = (0x0079)
WDT_CTRL   = (0x0080)
WDT_WINCTRL   = (0x0081)
WDT_STATUS   = (0x0082)
MCU_DEVID0   = (0x0090)
MCU_DEVID1   = (0x0091)
MCU_DEVID2   = (0x0092)
MCU_REVID   = (0x0093)
MCU_JTAGUID   = (0x0094)
MCU_MCUCR   = (0x0096)
MCU_ANAINIT   = (0x0097)
MCU_EVSYSLOCK   = (0x0098)
MCU_AWEXLOCK   = (0x0099)
PMIC_STATUS   = (0x00A0)
PMIC_INTPRI   = (0x00A1)
PMIC_CTRL   = (0x00A2)
PORTCFG_MPCMASK   = (0x00B0)
PORTCFG_VPCTRLA   = (0x00B2)
PORTCFG_VPCTRLB   = (0x00B3)
PORTCFG_CLKEVOUT   = (0x00B4)
PORTCFG_EVOUTSEL   = (0x00B6)
AES_CTRL   = (0x00C0)
AES_STATUS   = (0x00C1)
AES_STATE   = (0x00C2)
AES_KEY   = (0x00C3)
AES_INTCTRL   = (0x00C4)
CRC_CTRL   = (0x00D0)
CRC_STATUS   = (0x00D1)
CRC_DATAIN   = (0x00D3)
CRC_CHECKSUM0   = (0x00D4)
CRC_CHECKSUM1   = (0x00D5)
CRC_CHECKSUM2   = (0x00D6)
CRC_CHECKSUM3   = (0x00D7)
DMA_CTRL   = (0x0100)
DMA_INTFLAGS   = (0x0103)
DMA_STATUS   = (0x0104)
DMA_CH0_CTRLA   = (0x0110)
DMA_CH0_CTRLB   = (0x0111)
DMA_CH0_ADDRCTRL   = (0x0112)
DMA_CH0_TRIGSRC   = (0x0113)
DMA_CH0_REPCNT   = (0x0116)
DMA_CH0_SRCADDR0   = (0x0118)
DMA_CH0_SRCADDR1   = (0x0119)
DMA_CH0_SRCADDR2   = (0x011A)
DMA_CH0_DESTADDR0   = (0x011C)
DMA_CH0_DESTADDR1   = (0x011D)
DMA_CH0_DESTADDR2   = (0x011E)
DMA_CH1_CTRLA   = (0x0120)
DMA_CH1_CTRLB   = (0x0121)
DMA_CH1_ADDRCTRL   = (0x0122)
DMA_CH1_TRIGSRC   = (0x0123)
DMA_CH1_REPCNT   = (0x0126)
DMA_CH1_SRCADDR0   = (0x0128)
DMA_CH1_SRCADDR1   = (0x0129)
DMA_CH1_SRCADDR2   = (0x012A)
DMA_CH1_DESTADDR0   = (0x012C)
DMA_CH1_DESTADDR1   = (0x012D)
DMA_CH1_DESTADDR2   = (0x012E)
DMA_CH2_CTRLA   = (0x0130)
DMA_CH2_CTRLB   = (0x0131)
DMA_CH2_ADDRCTRL   = (0x0132)
DMA_CH2_TRIGSRC   = (0x0133)
DMA_CH2_REPCNT   = (0x0136)
DMA_CH2_SRCADDR0   = (0x0138)
DMA_CH2_SRCADDR1   = (0x0139)
DMA_CH2_SRCADDR2   = (0x013A)
DMA_CH2_DESTADDR0   = (0x013C)
DMA_CH2_DESTADDR1   = (0x013D)
DMA_CH2_DESTADDR2   = (0x013E)
DMA_CH3_CTRLA   = (0x0140)
DMA_CH3_CTRLB   = (0x0141)
DMA_CH3_ADDRCTRL   = (0x0142)
DMA_CH3_TRIGSRC   = (0x0143)
DMA_CH3_REPCNT   = (0x0146)
DMA_CH3_SRCADDR0   = (0x0148)
DMA_CH3_SRCADDR1   = (0x0149)
DMA_CH3_SRCADDR2   = (0x014A)
DMA_CH3_DESTADDR0   = (0x014C)
DMA_CH3_DESTADDR1   = (0x014D)
DMA_CH3_DESTADDR2   = (0x014E)
EVSYS_CH0MUX   = (0x0180)
EVSYS_CH1MUX   = (0x0181)
EVSYS_CH2MUX   = (0x0182)
EVSYS_CH3MUX   = (0x0183)
EVSYS_CH4MUX   = (0x0184)
EVSYS_CH5MUX   = (0x0185)
EVSYS_CH6MUX   = (0x0186)
EVSYS_CH7MUX   = (0x0187)
EVSYS_CH0CTRL   = (0x0188)
EVSYS_CH1CTRL   = (0x0189)
EVSYS_CH2CTRL   = (0x018A)
EVSYS_CH3CTRL   = (0x018B)
EVSYS_CH4CTRL   = (0x018C)
EVSYS_CH5CTRL   = (0x018D)
EVSYS_CH6CTRL   = (0x018E)
EVSYS_CH7CTRL   = (0x018F)
EVSYS_STROBE   = (0x0190)
EVSYS_DATA   = (0x0191)
NVM_ADDR0   = (0x01C0)
NVM_ADDR1   = (0x01C1)
NVM_ADDR2   = (0x01C2)
NVM_DATA0   = (0x01C4)
NVM_DATA1   = (0x01C5)
NVM_DATA2   = (0x01C6)
NVM_CMD   = (0x01CA)
NVM_CTRLA   = (0x01CB)
NVM_CTRLB   = (0x01CC)
NVM_INTCTRL   = (0x01CD)
NVM_STATUS   = (0x01CF)
NVM_LOCKBITS   = (0x01D0)
ADCA_CTRLA   = (0x0200)
ADCA_CTRLB   = (0x0201)
ADCA_REFCTRL   = (0x0202)
ADCA_EVCTRL   = (0x0203)
ADCA_PRESCALER   = (0x0204)
ADCA_INTFLAGS   = (0x0206)
ADCA_TEMP   = (0x0207)
ADCA_CH0_CTRL   = (0x0220)
ADCA_CH0_MUXCTRL   = (0x0221)
ADCA_CH0_INTCTRL   = (0x0222)
ADCA_CH0_INTFLAGS   = (0x0223)
ADCA_CH0_SCAN   = (0x0226)
ADCA_CH1_CTRL   = (0x0228)
ADCA_CH1_MUXCTRL   = (0x0229)
ADCA_CH1_INTCTRL   = (0x022A)
ADCA_CH1_INTFLAGS   = (0x022B)
ADCA_CH1_SCAN   = (0x022E)
ADCA_CH2_CTRL   = (0x0230)
ADCA_CH2_MUXCTRL   = (0x0231)
ADCA_CH2_INTCTRL   = (0x0232)
ADCA_CH2_INTFLAGS   = (0x0233)
ADCA_CH2_SCAN   = (0x0236)
ADCA_CH3_CTRL   = (0x0238)
ADCA_CH3_MUXCTRL   = (0x0239)
ADCA_CH3_INTCTRL   = (0x023A)
ADCA_CH3_INTFLAGS   = (0x023B)
ADCA_CH3_SCAN   = (0x023E)
DACB_CTRLA   = (0x0320)
DACB_CTRLB   = (0x0321)
DACB_CTRLC   = (0x0322)
DACB_EVCTRL   = (0x0323)
DACB_TIMCTRL   = (0x0324)
DACB_STATUS   = (0x0325)
DACB_CH0GAINCAL   = (0x0328)
DACB_CH0OFFSETCAL   = (0x0329)
DACB_CH1GAINCAL   = (0x032A)
DACB_CH1OFFSETCAL   = (0x032B)
ACA_AC0CTRL   = (0x0380)
ACA_AC1CTRL   = (0x0381)
ACA_AC0MUXCTRL   = (0x0382)
ACA_AC1MUXCTRL   = (0x0383)
ACA_CTRLA   = (0x0384)
ACA_CTRLB   = (0x0385)
ACA_WINCTRL   = (0x0386)
ACA_STATUS   = (0x0387)
RTC_CTRL   = (0x0400)
RTC_STATUS   = (0x0401)
RTC_INTCTRL   = (0x0402)
RTC_INTFLAGS   = (0x0403)
RTC_TEMP   = (0x0404)
TWIC_CTRL   = (0x0480)
TWIC_MASTER_CTRLA   = (0x0481)
TWIC_MASTER_CTRLB   = (0x0482)
TWIC_MASTER_CTRLC   = (0x0483)
TWIC_MASTER_STATUS   = (0x0484)
TWIC_MASTER_BAUD   = (0x0485)
TWIC_MASTER_ADDR   = (0x0486)
TWIC_MASTER_DATA   = (0x0487)
TWIC_SLAVE_CTRLA   = (0x0488)
TWIC_SLAVE_CTRLB   = (0x0489)
TWIC_SLAVE_STATUS   = (0x048A)
TWIC_SLAVE_ADDR   = (0x048B)
TWIC_SLAVE_DATA   = (0x048C)
TWIC_SLAVE_ADDRMASK   = (0x048D)
TWIE_CTRL   = (0x04A0)
TWIE_MASTER_CTRLA   = (0x04A1)
TWIE_MASTER_CTRLB   = (0x04A2)
TWIE_MASTER_CTRLC   = (0x04A3)
TWIE_MASTER_STATUS   = (0x04A4)
TWIE_MASTER_BAUD   = (0x04A5)
TWIE_MASTER_ADDR   = (0x04A6)
TWIE_MASTER_DATA   = (0x04A7)
TWIE_SLAVE_CTRLA   = (0x04A8)
TWIE_SLAVE_CTRLB   = (0x04A9)
TWIE_SLAVE_STATUS   = (0x04AA)
TWIE_SLAVE_ADDR   = (0x04AB)
TWIE_SLAVE_DATA   = (0x04AC)
TWIE_SLAVE_ADDRMASK   = (0x04AD)
USB_CTRLA   = (0x04C0)
USB_CTRLB   = (0x04C1)
USB_STATUS   = (0x04C2)
USB_ADDR   = (0x04C3)
USB_FIFOWP   = (0x04C4)
USB_FIFORP   = (0x04C5)
USB_INTCTRLA   = (0x04C8)
USB_INTCTRLB   = (0x04C9)
USB_INTFLAGSACLR   = (0x04CA)
USB_INTFLAGSASET   = (0x04CB)
USB_INTFLAGSBCLR   = (0x04CC)
USB_INTFLAGSBSET   = (0x04CD)
USB_CAL0   = (0x04FA)
USB_CAL1   = (0x04FB)
PORTA_DIR   = (0x0600)
PORTA_DIRSET   = (0x0601)
PORTA_DIRCLR   = (0x0602)
PORTA_DIRTGL   = (0x0603)
PORTA_OUT   = (0x0604)
PORTA_OUTSET   = (0x0605)
PORTA_OUTCLR   = (0x0606)
PORTA_OUTTGL   = (0x0607)
PORTA_IN   = (0x0608)
PORTA_INTCTRL   = (0x0609)
PORTA_INT0MASK   = (0x060A)
PORTA_INT1MASK   = (0x060B)
PORTA_INTFLAGS   = (0x060C)
PORTA_REMAP   = (0x060E)
PORTA_PIN0CTRL   = (0x0610)
PORTA_PIN1CTRL   = (0x0611)
PORTA_PIN2CTRL   = (0x0612)
PORTA_PIN3CTRL   = (0x0613)
PORTA_PIN4CTRL   = (0x0614)
PORTA_PIN5CTRL   = (0x0615)
PORTA_PIN6CTRL   = (0x0616)
PORTA_PIN7CTRL   = (0x0617)
PORTB_DIR   = (0x0620)
PORTB_DIRSET   = (0x0621)
PORTB_DIRCLR   = (0x0622)
PORTB_DIRTGL   = (0x0623)
PORTB_OUT   = (0x0624)
PORTB_OUTSET   = (0x0625)
PORTB_OUTCLR   = (0x0626)
PORTB_OUTTGL   = (0x0627)
PORTB_IN   = (0x0628)
PORTB_INTCTRL   = (0x0629)
PORTB_INT0MASK   = (0x062A)
PORTB_INT1MASK   = (0x062B)
PORTB_INTFLAGS   = (0x062C)
PORTB_REMAP   = (0x062E)
PORTB_PIN0CTRL   = (0x0630)
PORTB_PIN1CTRL   = (0x0631)
PORTB_PIN2CTRL   = (0x0632)
PORTB_PIN3CTRL   = (0x0633)
PORTB_PIN4CTRL   = (0x0634)
PORTB_PIN5CTRL   = (0x0635)
PORTB_PIN6CTRL   = (0x0636)
PORTB_PIN7CTRL   = (0x0637)
PORTC_DIR   = (0x0640)
PORTC_DIRSET   = (0x0641)
PORTC_DIRCLR   = (0x0642)
PORTC_DIRTGL   = (0x0643)
PORTC_OUT   = (0x0644)
PORTC_OUTSET   = (0x0645)
PORTC_OUTCLR   = (0x0646)
PORTC_OUTTGL   = (0x0647)
PORTC_IN   = (0x0648)
PORTC_INTCTRL   = (0x0649)
PORTC_INT0MASK   = (0x064A)
PORTC_INT1MASK   = (0x064B)
PORTC_INTFLAGS   = (0x064C)
PORTC_REMAP   = (0x064E)
PORTC_PIN0CTRL   = (0x0650)
PORTC_PIN1CTRL   = (0x0651)
PORTC_PIN2CTRL   = (0x0652)
PORTC_PIN3CTRL   = (0x0653)
PORTC_PIN4CTRL   = (0x0654)
PORTC_PIN5CTRL   = (0x0655)
PORTC_PIN6CTRL   = (0x0656)
PORTC_PIN7CTRL   = (0x0657)
PORTD_DIR   = (0x0660)
PORTD_DIRSET   = (0x0661)
PORTD_DIRCLR   = (0x0662)
PORTD_DIRTGL   = (0x0663)
PORTD_OUT   = (0x0664)
PORTD_OUTSET   = (0x0665)
PORTD_OUTCLR   = (0x0666)
PORTD_OUTTGL   = (0x0667)
PORTD_IN   = (0x0668)
PORTD_INTCTRL   = (0x0669)
PORTD_INT0MASK   = (0x066A)
PORTD_INT1MASK   = (0x066B)
PORTD_INTFLAGS   = (0x066C)
PORTD_REMAP   = (0x066E)
PORTD_PIN0CTRL   = (0x0670)
PORTD_PIN1CTRL   = (0x0671)
PORTD_PIN2CTRL   = (0x0672)
PORTD_PIN3CTRL   = (0x0673)
PORTD_PIN4CTRL   = (0x0674)
PORTD_PIN5CTRL   = (0x0675)
PORTD_PIN6CTRL   = (0x0676)
PORTD_PIN7CTRL   = (0x0677)
PORTE_DIR   = (0x0680)
PORTE_DIRSET   = (0x0681)
PORTE_DIRCLR   = (0x0682)
PORTE_DIRTGL   = (0x0683)
PORTE_OUT   = (0x0684)
PORTE_OUTSET   = (0x0685)
PORTE_OUTCLR   = (0x0686)
PORTE_OUTTGL   = (0x0687)
PORTE_IN   = (0x0688)
PORTE_INTCTRL   = (0x0689)
PORTE_INT0MASK   = (0x068A)
PORTE_INT1MASK   = (0x068B)
PORTE_INTFLAGS   = (0x068C)
PORTE_REMAP   = (0x068E)
PORTE_PIN0CTRL   = (0x0690)
PORTE_PIN1CTRL   = (0x0691)
PORTE_PIN2CTRL   = (0x0692)
PORTE_PIN3CTRL   = (0x0693)
PORTE_PIN4CTRL   = (0x0694)
PORTE_PIN5CTRL   = (0x0695)
PORTE_PIN6CTRL   = (0x0696)
PORTE_PIN7CTRL   = (0x0697)
PORTR_DIR   = (0x07E0)
PORTR_DIRSET   = (0x07E1)
PORTR_DIRCLR   = (0x07E2)
PORTR_DIRTGL   = (0x07E3)
PORTR_OUT   = (0x07E4)
PORTR_OUTSET   = (0x07E5)
PORTR_OUTCLR   = (0x07E6)
PORTR_OUTTGL   = (0x07E7)
PORTR_IN   = (0x07E8)
PORTR_INTCTRL   = (0x07E9)
PORTR_INT0MASK   = (0x07EA)
PORTR_INT1MASK   = (0x07EB)
PORTR_INTFLAGS   = (0x07EC)
PORTR_REMAP   = (0x07EE)
PORTR_PIN0CTRL   = (0x07F0)
PORTR_PIN1CTRL   = (0x07F1)
PORTR_PIN2CTRL   = (0x07F2)
PORTR_PIN3CTRL   = (0x07F3)
PORTR_PIN4CTRL   = (0x07F4)
PORTR_PIN5CTRL   = (0x07F5)
PORTR_PIN6CTRL   = (0x07F6)
PORTR_PIN7CTRL   = (0x07F7)
TCC0_CTRLA   = (0x0800)
TCC0_CTRLB   = (0x0801)
TCC0_CTRLC   = (0x0802)
TCC0_CTRLD   = (0x0803)
TCC0_CTRLE   = (0x0804)
TCC0_INTCTRLA   = (0x0806)
TCC0_INTCTRLB   = (0x0807)
TCC0_CTRLFCLR   = (0x0808)
TCC0_CTRLFSET   = (0x0809)
TCC0_CTRLGCLR   = (0x080A)
TCC0_CTRLGSET   = (0x080B)
TCC0_INTFLAGS   = (0x080C)
TCC0_TEMP   = (0x080F)
TCC2_CTRLA   = (0x0800)
TCC2_CTRLB   = (0x0801)
TCC2_CTRLC   = (0x0802)
TCC2_CTRLE   = (0x0804)
TCC2_INTCTRLA   = (0x0806)
TCC2_INTCTRLB   = (0x0807)
TCC2_CTRLF   = (0x0809)
TCC2_INTFLAGS   = (0x080C)
TCC2_LCNT   = (0x0820)
TCC2_HCNT   = (0x0821)
TCC2_LPER   = (0x0826)
TCC2_HPER   = (0x0827)
TCC2_LCMPA   = (0x0828)
TCC2_HCMPA   = (0x0829)
TCC2_LCMPB   = (0x082A)
TCC2_HCMPB   = (0x082B)
TCC2_LCMPC   = (0x082C)
TCC2_HCMPC   = (0x082D)
TCC2_LCMPD   = (0x082E)
TCC2_HCMPD   = (0x082F)
TCC1_CTRLA   = (0x0840)
TCC1_CTRLB   = (0x0841)
TCC1_CTRLC   = (0x0842)
TCC1_CTRLD   = (0x0843)
TCC1_CTRLE   = (0x0844)
TCC1_INTCTRLA   = (0x0846)
TCC1_INTCTRLB   = (0x0847)
TCC1_CTRLFCLR   = (0x0848)
TCC1_CTRLFSET   = (0x0849)
TCC1_CTRLGCLR   = (0x084A)
TCC1_CTRLGSET   = (0x084B)
TCC1_INTFLAGS   = (0x084C)
TCC1_TEMP   = (0x084F)
AWEXC_CTRL   = (0x0880)
AWEXC_FDEMASK   = (0x0882)
AWEXC_FDCTRL   = (0x0883)
AWEXC_STATUS   = (0x0884)
AWEXC_STATUSSET   = (0x0885)
AWEXC_DTBOTH   = (0x0886)
AWEXC_DTBOTHBUF   = (0x0887)
AWEXC_DTLS   = (0x0888)
AWEXC_DTHS   = (0x0889)
AWEXC_DTLSBUF   = (0x088A)
AWEXC_DTHSBUF   = (0x088B)
AWEXC_OUTOVEN   = (0x088C)
HIRESC_CTRLA   = (0x0890)
USARTC0_DATA   = (0x08A0)
USARTC0_STATUS   = (0x08A1)
USARTC0_CTRLA   = (0x08A3)
USARTC0_CTRLB   = (0x08A4)
USARTC0_CTRLC   = (0x08A5)
USARTC0_BAUDCTRLA   = (0x08A6)
USARTC0_BAUDCTRLB   = (0x08A7)
USARTC1_DATA   = (0x08B0)
USARTC1_STATUS   = (0x08B1)
USARTC1_CTRLA   = (0x08B3)
USARTC1_CTRLB   = (0x08B4)
USARTC1_CTRLC   = (0x08B5)
USARTC1_BAUDCTRLA   = (0x08B6)
USARTC1_BAUDCTRLB   = (0x08B7)
SPIC_CTRL   = (0x08C0)
SPIC_INTCTRL   = (0x08C1)
SPIC_STATUS   = (0x08C2)
SPIC_DATA   = (0x08C3)
IRCOM_CTRL   = (0x08F8)
IRCOM_TXPLCTRL   = (0x08F9)
IRCOM_RXPLCTRL   = (0x08FA)
TCD0_CTRLA   = (0x0900)
TCD0_CTRLB   = (0x0901)
TCD0_CTRLC   = (0x0902)
TCD0_CTRLD   = (0x0903)
TCD0_CTRLE   = (0x0904)
TCD0_INTCTRLA   = (0x0906)
TCD0_INTCTRLB   = (0x0907)
TCD0_CTRLFCLR   = (0x0908)
TCD0_CTRLFSET   = (0x0909)
TCD0_CTRLGCLR   = (0x090A)
TCD0_CTRLGSET   = (0x090B)
TCD0_INTFLAGS   = (0x090C)
TCD0_TEMP   = (0x090F)
TCD2_CTRLA   = (0x0900)
TCD2_CTRLB   = (0x0901)
TCD2_CTRLC   = (0x0902)
TCD2_CTRLE   = (0x0904)
TCD2_INTCTRLA   = (0x0906)
TCD2_INTCTRLB   = (0x0907)
TCD2_CTRLF   = (0x0909)
TCD2_INTFLAGS   = (0x090C)
TCD2_LCNT   = (0x0920)
TCD2_HCNT   = (0x0921)
TCD2_LPER   = (0x0926)
TCD2_HPER   = (0x0927)
TCD2_LCMPA   = (0x0928)
TCD2_HCMPA   = (0x0929)
TCD2_LCMPB   = (0x092A)
TCD2_HCMPB   = (0x092B)
TCD2_LCMPC   = (0x092C)
TCD2_HCMPC   = (0x092D)
TCD2_LCMPD   = (0x092E)
TCD2_HCMPD   = (0x092F)
TCD1_CTRLA   = (0x0940)
TCD1_CTRLB   = (0x0941)
TCD1_CTRLC   = (0x0942)
TCD1_CTRLD   = (0x0943)
TCD1_CTRLE   = (0x0944)
TCD1_INTCTRLA   = (0x0946)
TCD1_INTCTRLB   = (0x0947)
TCD1_CTRLFCLR   = (0x0948)
TCD1_CTRLFSET   = (0x0949)
TCD1_CTRLGCLR   = (0x094A)
TCD1_CTRLGSET   = (0x094B)
TCD1_INTFLAGS   = (0x094C)
TCD1_TEMP   = (0x094F)
HIRESD_CTRLA   = (0x0990)
USARTD0_DATA   = (0x09A0)
USARTD0_STATUS   = (0x09A1)
USARTD0_CTRLA   = (0x09A3)
USARTD0_CTRLB   = (0x09A4)
USARTD0_CTRLC   = (0x09A5)
USARTD0_BAUDCTRLA   = (0x09A6)
USARTD0_BAUDCTRLB   = (0x09A7)
USARTD1_DATA   = (0x09B0)
USARTD1_STATUS   = (0x09B1)
USARTD1_CTRLA   = (0x09B3)
USARTD1_CTRLB   = (0x09B4)
USARTD1_CTRLC   = (0x09B5)
USARTD1_BAUDCTRLA   = (0x09B6)
USARTD1_BAUDCTRLB   = (0x09B7)
SPID_CTRL   = (0x09C0)
SPID_INTCTRL   = (0x09C1)
SPID_STATUS   = (0x09C2)
SPID_DATA   = (0x09C3)
TCE0_CTRLA   = (0x0A00)
TCE0_CTRLB   = (0x0A01)
TCE0_CTRLC   = (0x0A02)
TCE0_CTRLD   = (0x0A03)
TCE0_CTRLE   = (0x0A04)
TCE0_INTCTRLA   = (0x0A06)
TCE0_INTCTRLB   = (0x0A07)
TCE0_CTRLFCLR   = (0x0A08)
TCE0_CTRLFSET   = (0x0A09)
TCE0_CTRLGCLR   = (0x0A0A)
TCE0_CTRLGSET   = (0x0A0B)
TCE0_INTFLAGS   = (0x0A0C)
TCE0_TEMP   = (0x0A0F)
HIRESE_CTRLA   = (0x0A90)
USARTE0_DATA   = (0x0AA0)
USARTE0_STATUS   = (0x0AA1)
USARTE0_CTRLA   = (0x0AA3)
USARTE0_CTRLB   = (0x0AA4)
USARTE0_CTRLC   = (0x0AA5)
USARTE0_BAUDCTRLA   = (0x0AA6)
USARTE0_BAUDCTRLB   = (0x0AA7)
VPORT_INT1IF_bm = 0x02  # Port Interrupt 1 Flag bit mask. */
VPORT_INT0IF_bm = 0x01  # Port Interrupt 0 Flag bit mask. */
OCD_OCDRD_bm = 0x01  # OCDR Dirty bit mask. */
CPU_CCP0_bm = (1<<0)  # CCP signature bit 0 mask. */
CPU_CCP1_bm = (1<<1)  # CCP signature bit 1 mask. */
CPU_CCP2_bm = (1<<2)  # CCP signature bit 2 mask. */
CPU_CCP3_bm = (1<<3)  # CCP signature bit 3 mask. */
CPU_CCP4_bm = (1<<4)  # CCP signature bit 4 mask. */
CPU_CCP5_bm = (1<<5)  # CCP signature bit 5 mask. */
CPU_CCP6_bm = (1<<6)  # CCP signature bit 6 mask. */
CPU_CCP7_bm = (1<<7)  # CCP signature bit 7 mask. */
CPU_I_bm = 0x80  # Global Interrupt Enable Flag bit mask. */
CPU_T_bm = 0x40  # Transfer Bit bit mask. */
CPU_H_bm = 0x20  # Half Carry Flag bit mask. */
CPU_S_bm = 0x10  # N Exclusive Or V Flag bit mask. */
CPU_V_bm = 0x08  # Two's Complement Overflow Flag bit mask. */
CPU_N_bm = 0x04  # Negative Flag bit mask. */
CPU_Z_bm = 0x02  # Zero Flag bit mask. */
CPU_C_bm = 0x01  # Carry Flag bit mask. */
CLK_SCLKSEL0_bm = (1<<0)  # System Clock Selection bit 0 mask. */
CLK_SCLKSEL1_bm = (1<<1)  # System Clock Selection bit 1 mask. */
CLK_SCLKSEL2_bm = (1<<2)  # System Clock Selection bit 2 mask. */
CLK_PSADIV0_bm = (1<<2)  # Prescaler A Division Factor bit 0 mask. */
CLK_PSADIV1_bm = (1<<3)  # Prescaler A Division Factor bit 1 mask. */
CLK_PSADIV2_bm = (1<<4)  # Prescaler A Division Factor bit 2 mask. */
CLK_PSADIV3_bm = (1<<5)  # Prescaler A Division Factor bit 3 mask. */
CLK_PSADIV4_bm = (1<<6)  # Prescaler A Division Factor bit 4 mask. */
CLK_PSBCDIV0_bm = (1<<0)  # Prescaler B and C Division factor bit 0 mask. */
CLK_PSBCDIV1_bm = (1<<1)  # Prescaler B and C Division factor bit 1 mask. */
CLK_LOCK_bm = 0x01  # Clock System Lock bit mask. */
CLK_RTCSRC0_bm = (1<<1)  # Clock Source bit 0 mask. */
CLK_RTCSRC1_bm = (1<<2)  # Clock Source bit 1 mask. */
CLK_RTCSRC2_bm = (1<<3)  # Clock Source bit 2 mask. */
CLK_RTCEN_bm = 0x01  # Clock Source Enable bit mask. */
CLK_USBPSDIV0_bm = (1<<3)  # Prescaler Division Factor bit 0 mask. */
CLK_USBPSDIV1_bm = (1<<4)  # Prescaler Division Factor bit 1 mask. */
CLK_USBPSDIV2_bm = (1<<5)  # Prescaler Division Factor bit 2 mask. */
CLK_USBSRC0_bm = (1<<1)  # Clock Source bit 0 mask. */
CLK_USBSRC1_bm = (1<<2)  # Clock Source bit 1 mask. */
CLK_USBSEN_bm = 0x01  # Clock Source Enable bit mask. */
PR_USB_bm = 0x40  # USB bit mask. */
PR_AES_bm = 0x10  # AES bit mask. */
PR_EBI_bm = 0x08  # External Bus Interface bit mask. */
PR_RTC_bm = 0x04  # Real-time Counter bit mask. */
PR_EVSYS_bm = 0x02  # Event System bit mask. */
PR_DMA_bm = 0x01  # DMA-Controller bit mask. */
PR_DAC_bm = 0x04  # Port A DAC bit mask. */
PR_ADC_bm = 0x02  # Port A ADC bit mask. */
PR_AC_bm = 0x01  # Port A Analog Comparator bit mask. */
PR_TWI_bm = 0x40  # Port C Two-wire Interface bit mask. */
PR_USART1_bm = 0x20  # Port C USART1 bit mask. */
PR_USART0_bm = 0x10  # Port C USART0 bit mask. */
PR_SPI_bm = 0x08  # Port C SPI bit mask. */
PR_HIRES_bm = 0x04  # Port C AWEX bit mask. */
PR_TC1_bm = 0x02  # Port C Timer/Counter1 bit mask. */
PR_TC0_bm = 0x01  # Port C Timer/Counter0 bit mask. */
SLEEP_SMODE0_bm = (1<<1)  # Sleep Mode bit 0 mask. */
SLEEP_SMODE1_bm = (1<<2)  # Sleep Mode bit 1 mask. */
SLEEP_SMODE2_bm = (1<<3)  # Sleep Mode bit 2 mask. */
SLEEP_SEN_bm = 0x01  # Sleep Enable bit mask. */
OSC_PLLEN_bm = 0x10  # PLL Enable bit mask. */
OSC_XOSCEN_bm = 0x08  # External Oscillator Enable bit mask. */
OSC_RC32KEN_bm = 0x04  # Internal 32.768 kHz RC Oscillator Enable bit mask. */
OSC_RC32MEN_bm = 0x02  # Internal 32 MHz RC Oscillator Enable bit mask. */
OSC_RC2MEN_bm = 0x01  # Internal 2 MHz RC Oscillator Enable bit mask. */
OSC_PLLRDY_bm = 0x10  # PLL Ready bit mask. */
OSC_XOSCRDY_bm = 0x08  # External Oscillator Ready bit mask. */
OSC_RC32KRDY_bm = 0x04  # Internal 32.768 kHz RC Oscillator Ready bit mask. */
OSC_RC32MRDY_bm = 0x02  # Internal 32 MHz RC Oscillator Ready bit mask. */
OSC_RC2MRDY_bm = 0x01  # Internal 2 MHz RC Oscillator Ready bit mask. */
OSC_FRQRANGE0_bm = (1<<6)  # Frequency Range bit 0 mask. */
OSC_FRQRANGE1_bm = (1<<7)  # Frequency Range bit 1 mask. */
OSC_X32KLPM_bm = 0x20  # 32.768 kHz XTAL OSC Low-power Mode bit mask. */
OSC_XOSCPWR_bm = 0x10  # 16 MHz Crystal Oscillator High Power mode bit mask. */
OSC_XOSCSEL0_bm = (1<<0)  # External Oscillator Selection and Startup Time bit 0 mask. */
OSC_XOSCSEL1_bm = (1<<1)  # External Oscillator Selection and Startup Time bit 1 mask. */
OSC_XOSCSEL2_bm = (1<<2)  # External Oscillator Selection and Startup Time bit 2 mask. */
OSC_XOSCSEL3_bm = (1<<3)  # External Oscillator Selection and Startup Time bit 3 mask. */
OSC_PLLFDIF_bm = 0x08  # PLL Failure Detection Interrupt Flag bit mask. */
OSC_PLLFDEN_bm = 0x04  # PLL Failure Detection Enable bit mask. */
OSC_XOSCFDIF_bm = 0x02  # XOSC Failure Detection Interrupt Flag bit mask. */
OSC_XOSCFDEN_bm = 0x01  # XOSC Failure Detection Enable bit mask. */
OSC_PLLSRC0_bm = (1<<6)  # Clock Source bit 0 mask. */
OSC_PLLSRC1_bm = (1<<7)  # Clock Source bit 1 mask. */
OSC_PLLDIV_bm = 0x20  # Divide by 2 bit mask. */
OSC_PLLFAC0_bm = (1<<0)  # Multiplication Factor bit 0 mask. */
OSC_PLLFAC1_bm = (1<<1)  # Multiplication Factor bit 1 mask. */
OSC_PLLFAC2_bm = (1<<2)  # Multiplication Factor bit 2 mask. */
OSC_PLLFAC3_bm = (1<<3)  # Multiplication Factor bit 3 mask. */
OSC_PLLFAC4_bm = (1<<4)  # Multiplication Factor bit 4 mask. */
OSC_RC32MCREF0_bm = (1<<1)  # 32 MHz DFLL Calibration Reference bit 0 mask. */
OSC_RC32MCREF1_bm = (1<<2)  # 32 MHz DFLL Calibration Reference bit 1 mask. */
OSC_RC2MCREF_bm = 0x01  # 2 MHz DFLL Calibration Reference bit mask. */
DFLL_ENABLE_bm = 0x01  # DFLL Enable bit mask. */
DFLL_CALL0_bm = (1<<0)  # DFLL Calibration Value A bit 0 mask. */
DFLL_CALL1_bm = (1<<1)  # DFLL Calibration Value A bit 1 mask. */
DFLL_CALL2_bm = (1<<2)  # DFLL Calibration Value A bit 2 mask. */
DFLL_CALL3_bm = (1<<3)  # DFLL Calibration Value A bit 3 mask. */
DFLL_CALL4_bm = (1<<4)  # DFLL Calibration Value A bit 4 mask. */
DFLL_CALL5_bm = (1<<5)  # DFLL Calibration Value A bit 5 mask. */
DFLL_CALL6_bm = (1<<6)  # DFLL Calibration Value A bit 6 mask. */
DFLL_CALH0_bm = (1<<0)  # DFLL Calibration Value B bit 0 mask. */
DFLL_CALH1_bm = (1<<1)  # DFLL Calibration Value B bit 1 mask. */
DFLL_CALH2_bm = (1<<2)  # DFLL Calibration Value B bit 2 mask. */
DFLL_CALH3_bm = (1<<3)  # DFLL Calibration Value B bit 3 mask. */
DFLL_CALH4_bm = (1<<4)  # DFLL Calibration Value B bit 4 mask. */
DFLL_CALH5_bm = (1<<5)  # DFLL Calibration Value B bit 5 mask. */
RST_SDRF_bm = 0x40  # Spike Detection Reset Flag bit mask. */
RST_SRF_bm = 0x20  # Software Reset Flag bit mask. */
RST_PDIRF_bm = 0x10  # Programming and Debug Interface Interface Reset Flag bit mask. */
RST_WDRF_bm = 0x08  # Watchdog Reset Flag bit mask. */
RST_BORF_bm = 0x04  # Brown-out Reset Flag bit mask. */
RST_EXTRF_bm = 0x02  # External Reset Flag bit mask. */
RST_PORF_bm = 0x01  # Power-on Reset Flag bit mask. */
RST_SWRST_bm = 0x01  # Software Reset bit mask. */
WDT_PER0_bm = (1<<2)  # Period bit 0 mask. */
WDT_PER1_bm = (1<<3)  # Period bit 1 mask. */
WDT_PER2_bm = (1<<4)  # Period bit 2 mask. */
WDT_PER3_bm = (1<<5)  # Period bit 3 mask. */
WDT_ENABLE_bm = 0x02  # Enable bit mask. */
WDT_CEN_bm = 0x01  # Change Enable bit mask. */
WDT_WPER0_bm = (1<<2)  # Windowed Mode Period bit 0 mask. */
WDT_WPER1_bm = (1<<3)  # Windowed Mode Period bit 1 mask. */
WDT_WPER2_bm = (1<<4)  # Windowed Mode Period bit 2 mask. */
WDT_WPER3_bm = (1<<5)  # Windowed Mode Period bit 3 mask. */
WDT_WEN_bm = 0x02  # Windowed Mode Enable bit mask. */
WDT_WCEN_bm = 0x01  # Windowed Mode Change Enable bit mask. */
WDT_SYNCBUSY_bm = 0x01  # Syncronization busy bit mask. */
MCU_JTAGD_bm = 0x01  # JTAG Disable bit mask. */
MCU_STARTUPDLYB0_bm = (1<<2)  # Analog startup delay Port B bit 0 mask. */
MCU_STARTUPDLYB1_bm = (1<<3)  # Analog startup delay Port B bit 1 mask. */
MCU_STARTUPDLYA0_bm = (1<<0)  # Analog startup delay Port A bit 0 mask. */
MCU_STARTUPDLYA1_bm = (1<<1)  # Analog startup delay Port A bit 1 mask. */
MCU_EVSYS1LOCK_bm = 0x10  # Event Channel 4-7 Lock bit mask. */
MCU_EVSYS0LOCK_bm = 0x01  # Event Channel 0-3 Lock bit mask. */
MCU_AWEXFLOCK_bm = 0x08  # AWeX on T/C F0 Lock bit mask. */
MCU_AWEXELOCK_bm = 0x04  # AWeX on T/C E0 Lock bit mask. */
MCU_AWEXDLOCK_bm = 0x02  # AWeX on T/C D0 Lock bit mask. */
MCU_AWEXCLOCK_bm = 0x01  # AWeX on T/C C0 Lock bit mask. */
PMIC_NMIEX_bm = 0x80  # Non-maskable Interrupt Executing bit mask. */
PMIC_HILVLEX_bm = 0x04  # High Level Interrupt Executing bit mask. */
PMIC_MEDLVLEX_bm = 0x02  # Medium Level Interrupt Executing bit mask. */
PMIC_LOLVLEX_bm = 0x01  # Low Level Interrupt Executing bit mask. */
PMIC_RREN_bm = 0x80  # Round-Robin Priority Enable bit mask. */
PMIC_IVSEL_bm = 0x40  # Interrupt Vector Select bit mask. */
PMIC_HILVLEN_bm = 0x04  # High Level Enable bit mask. */
PMIC_MEDLVLEN_bm = 0x02  # Medium Level Enable bit mask. */
PMIC_LOLVLEN_bm = 0x01  # Low Level Enable bit mask. */
PORTCFG_VP1MAP0_bm = (1<<4)  # Virtual Port 1 Mapping bit 0 mask. */
PORTCFG_VP1MAP1_bm = (1<<5)  # Virtual Port 1 Mapping bit 1 mask. */
PORTCFG_VP1MAP2_bm = (1<<6)  # Virtual Port 1 Mapping bit 2 mask. */
PORTCFG_VP1MAP3_bm = (1<<7)  # Virtual Port 1 Mapping bit 3 mask. */
PORTCFG_VP0MAP0_bm = (1<<0)  # Virtual Port 0 Mapping bit 0 mask. */
PORTCFG_VP0MAP1_bm = (1<<1)  # Virtual Port 0 Mapping bit 1 mask. */
PORTCFG_VP0MAP2_bm = (1<<2)  # Virtual Port 0 Mapping bit 2 mask. */
PORTCFG_VP0MAP3_bm = (1<<3)  # Virtual Port 0 Mapping bit 3 mask. */
PORTCFG_VP3MAP0_bm = (1<<4)  # Virtual Port 3 Mapping bit 0 mask. */
PORTCFG_VP3MAP1_bm = (1<<5)  # Virtual Port 3 Mapping bit 1 mask. */
PORTCFG_VP3MAP2_bm = (1<<6)  # Virtual Port 3 Mapping bit 2 mask. */
PORTCFG_VP3MAP3_bm = (1<<7)  # Virtual Port 3 Mapping bit 3 mask. */
PORTCFG_VP2MAP0_bm = (1<<0)  # Virtual Port 2 Mapping bit 0 mask. */
PORTCFG_VP2MAP1_bm = (1<<1)  # Virtual Port 2 Mapping bit 1 mask. */
PORTCFG_VP2MAP2_bm = (1<<2)  # Virtual Port 2 Mapping bit 2 mask. */
PORTCFG_VP2MAP3_bm = (1<<3)  # Virtual Port 2 Mapping bit 3 mask. */
PORTCFG_CLKOUT0_bm = (1<<0)  # Peripheral Clock Output Port bit 0 mask. */
PORTCFG_CLKOUT1_bm = (1<<1)  # Peripheral Clock Output Port bit 1 mask. */
PORTCFG_CLKOUTSEL0_bm = (1<<2)  # Peripheral Clock Output Select bit 0 mask. */
PORTCFG_CLKOUTSEL1_bm = (1<<3)  # Peripheral Clock Output Select bit 1 mask. */
PORTCFG_EVOUT0_bm = (1<<4)  # Event Output Port bit 0 mask. */
PORTCFG_EVOUT1_bm = (1<<5)  # Event Output Port bit 1 mask. */
PORTCFG_RTCOUT_bm = 0x40  # RTC Clock Output bit mask. */
PORTCFG_CLKEVPIN_bm = 0x80  # Peripheral Clock and Event Output pin Select bit mask. */
PORTCFG_EVOUTSEL0_bm = (1<<0)  # Event Output Select bit 0 mask. */
PORTCFG_EVOUTSEL1_bm = (1<<1)  # Event Output Select bit 1 mask. */
PORTCFG_EVOUTSEL2_bm = (1<<2)  # Event Output Select bit 2 mask. */
AES_START_bm = 0x80  # Start/Run bit mask. */
AES_AUTO_bm = 0x40  # Auto Start Trigger bit mask. */
AES_RESET_bm = 0x20  # AES Software Reset bit mask. */
AES_DECRYPT_bm = 0x10  # Decryption / Direction bit mask. */
AES_XOR_bm = 0x04  # State XOR Load Enable bit mask. */
AES_ERROR_bm = 0x80  # AES Error bit mask. */
AES_SRIF_bm = 0x01  # State Ready Interrupt Flag bit mask. */
AES_INTLVL0_bm = (1<<0)  # Interrupt level bit 0 mask. */
AES_INTLVL1_bm = (1<<1)  # Interrupt level bit 1 mask. */
CRC_RESET0_bm = (1<<6)  # Reset bit 0 mask. */
CRC_RESET1_bm = (1<<7)  # Reset bit 1 mask. */
CRC_CRC32_bm = 0x20  # CRC Mode bit mask. */
CRC_SOURCE0_bm = (1<<0)  # Input Source bit 0 mask. */
CRC_SOURCE1_bm = (1<<1)  # Input Source bit 1 mask. */
CRC_SOURCE2_bm = (1<<2)  # Input Source bit 2 mask. */
CRC_SOURCE3_bm = (1<<3)  # Input Source bit 3 mask. */
CRC_ZERO_bm = 0x02  # Zero detection bit mask. */
CRC_BUSY_bm = 0x01  # Busy bit mask. */
DMA_CH_ENABLE_bm = 0x80  # Channel Enable bit mask. */
DMA_CH_RESET_bm = 0x40  # Channel Software Reset bit mask. */
DMA_CH_REPEAT_bm = 0x20  # Channel Repeat Mode bit mask. */
DMA_CH_TRFREQ_bm = 0x10  # Channel Transfer Request bit mask. */
DMA_CH_SINGLE_bm = 0x04  # Channel Single Shot Data Transfer bit mask. */
DMA_CH_BURSTLEN0_bm = (1<<0)  # Channel Transfer Mode bit 0 mask. */
DMA_CH_BURSTLEN1_bm = (1<<1)  # Channel Transfer Mode bit 1 mask. */
DMA_CH_CHBUSY_bm = 0x80  # Block Transfer Busy bit mask. */
DMA_CH_CHPEND_bm = 0x40  # Block Transfer Pending bit mask. */
DMA_CH_ERRIF_bm = 0x20  # Block Transfer Error Interrupt Flag bit mask. */
DMA_CH_TRNIF_bm = 0x10  # Transaction Complete Interrup Flag bit mask. */
DMA_CH_ERRINTLVL0_bm = (1<<2)  # Transfer Error Interrupt Level bit 0 mask. */
DMA_CH_ERRINTLVL1_bm = (1<<3)  # Transfer Error Interrupt Level bit 1 mask. */
DMA_CH_TRNINTLVL0_bm = (1<<0)  # Transaction Complete Interrupt Level bit 0 mask. */
DMA_CH_TRNINTLVL1_bm = (1<<1)  # Transaction Complete Interrupt Level bit 1 mask. */
DMA_CH_SRCRELOAD0_bm = (1<<6)  # Channel Source Address Reload bit 0 mask. */
DMA_CH_SRCRELOAD1_bm = (1<<7)  # Channel Source Address Reload bit 1 mask. */
DMA_CH_SRCDIR0_bm = (1<<4)  # Channel Source Address Mode bit 0 mask. */
DMA_CH_SRCDIR1_bm = (1<<5)  # Channel Source Address Mode bit 1 mask. */
DMA_CH_DESTRELOAD0_bm = (1<<2)  # Channel Destination Address Reload bit 0 mask. */
DMA_CH_DESTRELOAD1_bm = (1<<3)  # Channel Destination Address Reload bit 1 mask. */
DMA_CH_DESTDIR0_bm = (1<<0)  # Channel Destination Address Mode bit 0 mask. */
DMA_CH_DESTDIR1_bm = (1<<1)  # Channel Destination Address Mode bit 1 mask. */
DMA_CH_TRIGSRC0_bm = (1<<0)  # Channel Trigger Source bit 0 mask. */
DMA_CH_TRIGSRC1_bm = (1<<1)  # Channel Trigger Source bit 1 mask. */
DMA_CH_TRIGSRC2_bm = (1<<2)  # Channel Trigger Source bit 2 mask. */
DMA_CH_TRIGSRC3_bm = (1<<3)  # Channel Trigger Source bit 3 mask. */
DMA_CH_TRIGSRC4_bm = (1<<4)  # Channel Trigger Source bit 4 mask. */
DMA_CH_TRIGSRC5_bm = (1<<5)  # Channel Trigger Source bit 5 mask. */
DMA_CH_TRIGSRC6_bm = (1<<6)  # Channel Trigger Source bit 6 mask. */
DMA_CH_TRIGSRC7_bm = (1<<7)  # Channel Trigger Source bit 7 mask. */
DMA_ENABLE_bm = 0x80  # Enable bit mask. */
DMA_RESET_bm = 0x40  # Software Reset bit mask. */
DMA_DBUFMODE0_bm = (1<<2)  # Double Buffering Mode bit 0 mask. */
DMA_DBUFMODE1_bm = (1<<3)  # Double Buffering Mode bit 1 mask. */
DMA_PRIMODE0_bm = (1<<0)  # Channel Priority Mode bit 0 mask. */
DMA_PRIMODE1_bm = (1<<1)  # Channel Priority Mode bit 1 mask. */
DMA_CH3ERRIF_bm = 0x80  # Channel 3 Block Transfer Error Interrupt Flag bit mask. */
DMA_CH2ERRIF_bm = 0x40  # Channel 2 Block Transfer Error Interrupt Flag bit mask. */
DMA_CH1ERRIF_bm = 0x20  # Channel 1 Block Transfer Error Interrupt Flag bit mask. */
DMA_CH0ERRIF_bm = 0x10  # Channel 0 Block Transfer Error Interrupt Flag bit mask. */
DMA_CH3TRNIF_bm = 0x08  # Channel 3 Transaction Complete Interrupt Flag bit mask. */
DMA_CH2TRNIF_bm = 0x04  # Channel 2 Transaction Complete Interrupt Flag bit mask. */
DMA_CH1TRNIF_bm = 0x02  # Channel 1 Transaction Complete Interrupt Flag bit mask. */
DMA_CH0TRNIF_bm = 0x01  # Channel 0 Transaction Complete Interrupt Flag bit mask. */
DMA_CH3BUSY_bm = 0x80  # Channel 3 Block Transfer Busy bit mask. */
DMA_CH2BUSY_bm = 0x40  # Channel 2 Block Transfer Busy bit mask. */
DMA_CH1BUSY_bm = 0x20  # Channel 1 Block Transfer Busy bit mask. */
DMA_CH0BUSY_bm = 0x10  # Channel 0 Block Transfer Busy bit mask. */
DMA_CH3PEND_bm = 0x08  # Channel 3 Block Transfer Pending bit mask. */
DMA_CH2PEND_bm = 0x04  # Channel 2 Block Transfer Pending bit mask. */
DMA_CH1PEND_bm = 0x02  # Channel 1 Block Transfer Pending bit mask. */
DMA_CH0PEND_bm = 0x01  # Channel 0 Block Transfer Pending bit mask. */
EVSYS_CHMUX0_bm = (1<<0)  # Event Channel 0 Multiplexer bit 0 mask. */
EVSYS_CHMUX1_bm = (1<<1)  # Event Channel 0 Multiplexer bit 1 mask. */
EVSYS_CHMUX2_bm = (1<<2)  # Event Channel 0 Multiplexer bit 2 mask. */
EVSYS_CHMUX3_bm = (1<<3)  # Event Channel 0 Multiplexer bit 3 mask. */
EVSYS_CHMUX4_bm = (1<<4)  # Event Channel 0 Multiplexer bit 4 mask. */
EVSYS_CHMUX5_bm = (1<<5)  # Event Channel 0 Multiplexer bit 5 mask. */
EVSYS_CHMUX6_bm = (1<<6)  # Event Channel 0 Multiplexer bit 6 mask. */
EVSYS_CHMUX7_bm = (1<<7)  # Event Channel 0 Multiplexer bit 7 mask. */
EVSYS_QDIRM0_bm = (1<<5)  # Quadrature Decoder Index Recognition Mode bit 0 mask. */
EVSYS_QDIRM1_bm = (1<<6)  # Quadrature Decoder Index Recognition Mode bit 1 mask. */
EVSYS_QDIEN_bm = 0x10  # Quadrature Decoder Index Enable bit mask. */
EVSYS_QDEN_bm = 0x08  # Quadrature Decoder Enable bit mask. */
EVSYS_DIGFILT0_bm = (1<<0)  # Digital Filter bit 0 mask. */
EVSYS_DIGFILT1_bm = (1<<1)  # Digital Filter bit 1 mask. */
EVSYS_DIGFILT2_bm = (1<<2)  # Digital Filter bit 2 mask. */
NVM_CMD0_bm = (1<<0)  # Command bit 0 mask. */
NVM_CMD1_bm = (1<<1)  # Command bit 1 mask. */
NVM_CMD2_bm = (1<<2)  # Command bit 2 mask. */
NVM_CMD3_bm = (1<<3)  # Command bit 3 mask. */
NVM_CMD4_bm = (1<<4)  # Command bit 4 mask. */
NVM_CMD5_bm = (1<<5)  # Command bit 5 mask. */
NVM_CMD6_bm = (1<<6)  # Command bit 6 mask. */
NVM_CMDEX_bm = 0x01  # Command Execute bit mask. */
NVM_EEMAPEN_bm = 0x08  # EEPROM Mapping Enable bit mask. */
NVM_FPRM_bm = 0x04  # Flash Power Reduction Enable bit mask. */
NVM_EPRM_bm = 0x02  # EEPROM Power Reduction Enable bit mask. */
NVM_SPMLOCK_bm = 0x01  # SPM Lock bit mask. */
NVM_SPMLVL0_bm = (1<<2)  # SPM Interrupt Level bit 0 mask. */
NVM_SPMLVL1_bm = (1<<3)  # SPM Interrupt Level bit 1 mask. */
NVM_EELVL0_bm = (1<<0)  # EEPROM Interrupt Level bit 0 mask. */
NVM_EELVL1_bm = (1<<1)  # EEPROM Interrupt Level bit 1 mask. */
NVM_NVMBUSY_bm = 0x80  # Non-volatile Memory Busy bit mask. */
NVM_FBUSY_bm = 0x40  # Flash Memory Busy bit mask. */
NVM_EELOAD_bm = 0x02  # EEPROM Page Buffer Active Loading bit mask. */
NVM_FLOAD_bm = 0x01  # Flash Page Buffer Active Loading bit mask. */
NVM_BLBB0_bm = (1<<6)  # Boot Lock Bits - Boot Section bit 0 mask. */
NVM_BLBB1_bm = (1<<7)  # Boot Lock Bits - Boot Section bit 1 mask. */
NVM_BLBA0_bm = (1<<4)  # Boot Lock Bits - Application Section bit 0 mask. */
NVM_BLBA1_bm = (1<<5)  # Boot Lock Bits - Application Section bit 1 mask. */
NVM_BLBAT0_bm = (1<<2)  # Boot Lock Bits - Application Table bit 0 mask. */
NVM_BLBAT1_bm = (1<<3)  # Boot Lock Bits - Application Table bit 1 mask. */
NVM_LB0_bm = (1<<0)  # Lock Bits bit 0 mask. */
NVM_LB1_bm = (1<<1)  # Lock Bits bit 1 mask. */
ADC_CH_START_bm = 0x80  # Channel Start Conversion bit mask. */
ADC_CH_GAIN0_bm = (1<<2)  # Gain Factor bit 0 mask. */
ADC_CH_GAIN1_bm = (1<<3)  # Gain Factor bit 1 mask. */
ADC_CH_GAIN2_bm = (1<<4)  # Gain Factor bit 2 mask. */
ADC_CH_INPUTMODE0_bm = (1<<0)  # Input Mode Select bit 0 mask. */
ADC_CH_INPUTMODE1_bm = (1<<1)  # Input Mode Select bit 1 mask. */
ADC_CH_MUXPOS0_bm = (1<<3)  # MUX selection on Positive ADC input bit 0 mask. */
ADC_CH_MUXPOS1_bm = (1<<4)  # MUX selection on Positive ADC input bit 1 mask. */
ADC_CH_MUXPOS2_bm = (1<<5)  # MUX selection on Positive ADC input bit 2 mask. */
ADC_CH_MUXPOS3_bm = (1<<6)  # MUX selection on Positive ADC input bit 3 mask. */
ADC_CH_MUXINT0_bm = (1<<3)  # MUX selection on Internal ADC input bit 0 mask. */
ADC_CH_MUXINT1_bm = (1<<4)  # MUX selection on Internal ADC input bit 1 mask. */
ADC_CH_MUXINT2_bm = (1<<5)  # MUX selection on Internal ADC input bit 2 mask. */
ADC_CH_MUXINT3_bm = (1<<6)  # MUX selection on Internal ADC input bit 3 mask. */
ADC_CH_MUXNEG0_bm = (1<<0)  # MUX selection on Negative ADC input bit 0 mask. */
ADC_CH_MUXNEG1_bm = (1<<1)  # MUX selection on Negative ADC input bit 1 mask. */
ADC_CH_INTMODE0_bm = (1<<2)  # Interrupt Mode bit 0 mask. */
ADC_CH_INTMODE1_bm = (1<<3)  # Interrupt Mode bit 1 mask. */
ADC_CH_INTLVL0_bm = (1<<0)  # Interrupt Level bit 0 mask. */
ADC_CH_INTLVL1_bm = (1<<1)  # Interrupt Level bit 1 mask. */
ADC_CH_CHIF_bm = 0x01  # Channel Interrupt Flag bit mask. */
ADC_CH_OFFSET0_bm = (1<<4)  # Positive MUX setting offset bit 0 mask. */
ADC_CH_OFFSET1_bm = (1<<5)  # Positive MUX setting offset bit 1 mask. */
ADC_CH_OFFSET2_bm = (1<<6)  # Positive MUX setting offset bit 2 mask. */
ADC_CH_OFFSET3_bm = (1<<7)  # Positive MUX setting offset bit 3 mask. */
ADC_CH_SCANNUM0_bm = (1<<0)  # Number of Channels included in scan bit 0 mask. */
ADC_CH_SCANNUM1_bm = (1<<1)  # Number of Channels included in scan bit 1 mask. */
ADC_CH_SCANNUM2_bm = (1<<2)  # Number of Channels included in scan bit 2 mask. */
ADC_CH_SCANNUM3_bm = (1<<3)  # Number of Channels included in scan bit 3 mask. */
ADC_DMASEL0_bm = (1<<6)  # DMA Selection bit 0 mask. */
ADC_DMASEL1_bm = (1<<7)  # DMA Selection bit 1 mask. */
ADC_CH3START_bm = 0x20  # Channel 3 Start Conversion bit mask. */
ADC_CH2START_bm = 0x10  # Channel 2 Start Conversion bit mask. */
ADC_CH1START_bm = 0x08  # Channel 1 Start Conversion bit mask. */
ADC_CH0START_bm = 0x04  # Channel 0 Start Conversion bit mask. */
ADC_FLUSH_bm = 0x02  # Flush Pipeline bit mask. */
ADC_ENABLE_bm = 0x01  # Enable ADC bit mask. */
ADC_IMPMODE_bm = 0x80  # Gain Stage Impedance Mode bit mask. */
ADC_CURRLIMIT0_bm = (1<<5)  # Current Limitation bit 0 mask. */
ADC_CURRLIMIT1_bm = (1<<6)  # Current Limitation bit 1 mask. */
ADC_CONMODE_bm = 0x10  # Conversion Mode bit mask. */
ADC_FREERUN_bm = 0x08  # Free Running Mode Enable bit mask. */
ADC_RESOLUTION0_bm = (1<<1)  # Result Resolution bit 0 mask. */
ADC_RESOLUTION1_bm = (1<<2)  # Result Resolution bit 1 mask. */
ADC_REFSEL0_bm = (1<<4)  # Reference Selection bit 0 mask. */
ADC_REFSEL1_bm = (1<<5)  # Reference Selection bit 1 mask. */
ADC_REFSEL2_bm = (1<<6)  # Reference Selection bit 2 mask. */
ADC_BANDGAP_bm = 0x02  # Bandgap enable bit mask. */
ADC_TEMPREF_bm = 0x01  # Temperature Reference Enable bit mask. */
ADC_SWEEP0_bm = (1<<6)  # Channel Sweep Selection bit 0 mask. */
ADC_SWEEP1_bm = (1<<7)  # Channel Sweep Selection bit 1 mask. */
ADC_EVSEL0_bm = (1<<3)  # Event Input Select bit 0 mask. */
ADC_EVSEL1_bm = (1<<4)  # Event Input Select bit 1 mask. */
ADC_EVSEL2_bm = (1<<5)  # Event Input Select bit 2 mask. */
ADC_EVACT0_bm = (1<<0)  # Event Action Select bit 0 mask. */
ADC_EVACT1_bm = (1<<1)  # Event Action Select bit 1 mask. */
ADC_EVACT2_bm = (1<<2)  # Event Action Select bit 2 mask. */
ADC_PRESCALER0_bm = (1<<0)  # Clock Prescaler Selection bit 0 mask. */
ADC_PRESCALER1_bm = (1<<1)  # Clock Prescaler Selection bit 1 mask. */
ADC_PRESCALER2_bm = (1<<2)  # Clock Prescaler Selection bit 2 mask. */
ADC_CH3IF_bm = 0x08  # Channel 3 Interrupt Flag bit mask. */
ADC_CH2IF_bm = 0x04  # Channel 2 Interrupt Flag bit mask. */
ADC_CH1IF_bm = 0x02  # Channel 1 Interrupt Flag bit mask. */
ADC_CH0IF_bm = 0x01  # Channel 0 Interrupt Flag bit mask. */
DAC_IDOEN_bm = 0x10  # Internal Output Enable bit mask. */
DAC_CH1EN_bm = 0x08  # Channel 1 Output Enable bit mask. */
DAC_CH0EN_bm = 0x04  # Channel 0 Output Enable bit mask. */
DAC_LPMODE_bm = 0x02  # Low Power Mode bit mask. */
DAC_ENABLE_bm = 0x01  # Enable bit mask. */
DAC_CHSEL0_bm = (1<<5)  # Channel Select bit 0 mask. */
DAC_CHSEL1_bm = (1<<6)  # Channel Select bit 1 mask. */
DAC_CH1TRIG_bm = 0x02  # Channel 1 Event Trig Enable bit mask. */
DAC_CH0TRIG_bm = 0x01  # Channel 0 Event Trig Enable bit mask. */
DAC_REFSEL0_bm = (1<<3)  # Reference Select bit 0 mask. */
DAC_REFSEL1_bm = (1<<4)  # Reference Select bit 1 mask. */
DAC_LEFTADJ_bm = 0x01  # Left-adjust Result bit mask. */
DAC_EVSPLIT_bm = 0x08  # Separate Event Channel Input for Channel 1 bit mask. */
DAC_EVSEL0_bm = (1<<0)  # Event Input Selection bit 0 mask. */
DAC_EVSEL1_bm = (1<<1)  # Event Input Selection bit 1 mask. */
DAC_EVSEL2_bm = (1<<2)  # Event Input Selection bit 2 mask. */
DAC_CONINTVAL0_bm = (1<<4)  # Conversion Intercal bit 0 mask. */
DAC_CONINTVAL1_bm = (1<<5)  # Conversion Intercal bit 1 mask. */
DAC_CONINTVAL2_bm = (1<<6)  # Conversion Intercal bit 2 mask. */
DAC_REFRESH0_bm = (1<<0)  # Refresh Timing Control bit 0 mask. */
DAC_REFRESH1_bm = (1<<1)  # Refresh Timing Control bit 1 mask. */
DAC_REFRESH2_bm = (1<<2)  # Refresh Timing Control bit 2 mask. */
DAC_REFRESH3_bm = (1<<3)  # Refresh Timing Control bit 3 mask. */
DAC_CH1DRE_bm = 0x02  # Channel 1 Data Register Empty bit mask. */
DAC_CH0DRE_bm = 0x01  # Channel 0 Data Register Empty bit mask. */
DAC_CH0GAINCAL0_bm = (1<<0)  # Gain Calibration bit 0 mask. */
DAC_CH0GAINCAL1_bm = (1<<1)  # Gain Calibration bit 1 mask. */
DAC_CH0GAINCAL2_bm = (1<<2)  # Gain Calibration bit 2 mask. */
DAC_CH0GAINCAL3_bm = (1<<3)  # Gain Calibration bit 3 mask. */
DAC_CH0GAINCAL4_bm = (1<<4)  # Gain Calibration bit 4 mask. */
DAC_CH0GAINCAL5_bm = (1<<5)  # Gain Calibration bit 5 mask. */
DAC_CH0GAINCAL6_bm = (1<<6)  # Gain Calibration bit 6 mask. */
DAC_CH0OFFSETCAL0_bm = (1<<0)  # Offset Calibration bit 0 mask. */
DAC_CH0OFFSETCAL1_bm = (1<<1)  # Offset Calibration bit 1 mask. */
DAC_CH0OFFSETCAL2_bm = (1<<2)  # Offset Calibration bit 2 mask. */
DAC_CH0OFFSETCAL3_bm = (1<<3)  # Offset Calibration bit 3 mask. */
DAC_CH0OFFSETCAL4_bm = (1<<4)  # Offset Calibration bit 4 mask. */
DAC_CH0OFFSETCAL5_bm = (1<<5)  # Offset Calibration bit 5 mask. */
DAC_CH0OFFSETCAL6_bm = (1<<6)  # Offset Calibration bit 6 mask. */
DAC_CH1GAINCAL0_bm = (1<<0)  # Gain Calibration bit 0 mask. */
DAC_CH1GAINCAL1_bm = (1<<1)  # Gain Calibration bit 1 mask. */
DAC_CH1GAINCAL2_bm = (1<<2)  # Gain Calibration bit 2 mask. */
DAC_CH1GAINCAL3_bm = (1<<3)  # Gain Calibration bit 3 mask. */
DAC_CH1GAINCAL4_bm = (1<<4)  # Gain Calibration bit 4 mask. */
DAC_CH1GAINCAL5_bm = (1<<5)  # Gain Calibration bit 5 mask. */
DAC_CH1GAINCAL6_bm = (1<<6)  # Gain Calibration bit 6 mask. */
DAC_CH1OFFSETCAL0_bm = (1<<0)  # Offset Calibration bit 0 mask. */
DAC_CH1OFFSETCAL1_bm = (1<<1)  # Offset Calibration bit 1 mask. */
DAC_CH1OFFSETCAL2_bm = (1<<2)  # Offset Calibration bit 2 mask. */
DAC_CH1OFFSETCAL3_bm = (1<<3)  # Offset Calibration bit 3 mask. */
DAC_CH1OFFSETCAL4_bm = (1<<4)  # Offset Calibration bit 4 mask. */
DAC_CH1OFFSETCAL5_bm = (1<<5)  # Offset Calibration bit 5 mask. */
DAC_CH1OFFSETCAL6_bm = (1<<6)  # Offset Calibration bit 6 mask. */
AC_INTMODE0_bm = (1<<6)  # Interrupt Mode bit 0 mask. */
AC_INTMODE1_bm = (1<<7)  # Interrupt Mode bit 1 mask. */
AC_INTLVL0_bm = (1<<4)  # Interrupt Level bit 0 mask. */
AC_INTLVL1_bm = (1<<5)  # Interrupt Level bit 1 mask. */
AC_HSMODE_bm = 0x08  # High-speed Mode bit mask. */
AC_HYSMODE0_bm = (1<<1)  # Hysteresis Mode bit 0 mask. */
AC_HYSMODE1_bm = (1<<2)  # Hysteresis Mode bit 1 mask. */
AC_ENABLE_bm = 0x01  # Enable bit mask. */
AC_MUXPOS0_bm = (1<<3)  # MUX Positive Input bit 0 mask. */
AC_MUXPOS1_bm = (1<<4)  # MUX Positive Input bit 1 mask. */
AC_MUXPOS2_bm = (1<<5)  # MUX Positive Input bit 2 mask. */
AC_MUXNEG0_bm = (1<<0)  # MUX Negative Input bit 0 mask. */
AC_MUXNEG1_bm = (1<<1)  # MUX Negative Input bit 1 mask. */
AC_MUXNEG2_bm = (1<<2)  # MUX Negative Input bit 2 mask. */
AC_AC1OUT_bm = 0x02  # Analog Comparator 1 Output Enable bit mask. */
AC_AC0OUT_bm = 0x01  # Analog Comparator 0 Output Enable bit mask. */
AC_SCALEFAC0_bm = (1<<0)  # VCC Voltage Scaler Factor bit 0 mask. */
AC_SCALEFAC1_bm = (1<<1)  # VCC Voltage Scaler Factor bit 1 mask. */
AC_SCALEFAC2_bm = (1<<2)  # VCC Voltage Scaler Factor bit 2 mask. */
AC_SCALEFAC3_bm = (1<<3)  # VCC Voltage Scaler Factor bit 3 mask. */
AC_SCALEFAC4_bm = (1<<4)  # VCC Voltage Scaler Factor bit 4 mask. */
AC_SCALEFAC5_bm = (1<<5)  # VCC Voltage Scaler Factor bit 5 mask. */
AC_WEN_bm = 0x10  # Window Mode Enable bit mask. */
AC_WINTMODE0_bm = (1<<2)  # Window Interrupt Mode bit 0 mask. */
AC_WINTMODE1_bm = (1<<3)  # Window Interrupt Mode bit 1 mask. */
AC_WINTLVL0_bm = (1<<0)  # Window Interrupt Level bit 0 mask. */
AC_WINTLVL1_bm = (1<<1)  # Window Interrupt Level bit 1 mask. */
AC_WSTATE0_bm = (1<<6)  # Window Mode State bit 0 mask. */
AC_WSTATE1_bm = (1<<7)  # Window Mode State bit 1 mask. */
AC_AC1STATE_bm = 0x20  # Analog Comparator 1 State bit mask. */
AC_AC0STATE_bm = 0x10  # Analog Comparator 0 State bit mask. */
AC_WIF_bm = 0x04  # Window Mode Interrupt Flag bit mask. */
AC_AC1IF_bm = 0x02  # Analog Comparator 1 Interrupt Flag bit mask. */
AC_AC0IF_bm = 0x01  # Analog Comparator 0 Interrupt Flag bit mask. */
RTC_PRESCALER0_bm = (1<<0)  # Prescaling Factor bit 0 mask. */
RTC_PRESCALER1_bm = (1<<1)  # Prescaling Factor bit 1 mask. */
RTC_PRESCALER2_bm = (1<<2)  # Prescaling Factor bit 2 mask. */
RTC_SYNCBUSY_bm = 0x01  # Synchronization Busy Flag bit mask. */
RTC_COMPINTLVL0_bm = (1<<2)  # Compare Match Interrupt Level bit 0 mask. */
RTC_COMPINTLVL1_bm = (1<<3)  # Compare Match Interrupt Level bit 1 mask. */
RTC_OVFINTLVL0_bm = (1<<0)  # Overflow Interrupt Level bit 0 mask. */
RTC_OVFINTLVL1_bm = (1<<1)  # Overflow Interrupt Level bit 1 mask. */
RTC_COMPIF_bm = 0x02  # Compare Match Interrupt Flag bit mask. */
RTC_OVFIF_bm = 0x01  # Overflow Interrupt Flag bit mask. */
TWI_MASTER_INTLVL0_bm = (1<<6)  # Interrupt Level bit 0 mask. */
TWI_MASTER_INTLVL1_bm = (1<<7)  # Interrupt Level bit 1 mask. */
TWI_MASTER_RIEN_bm = 0x20  # Read Interrupt Enable bit mask. */
TWI_MASTER_WIEN_bm = 0x10  # Write Interrupt Enable bit mask. */
TWI_MASTER_ENABLE_bm = 0x08  # Enable TWI Master bit mask. */
TWI_MASTER_TIMEOUT0_bm = (1<<2)  # Inactive Bus Timeout bit 0 mask. */
TWI_MASTER_TIMEOUT1_bm = (1<<3)  # Inactive Bus Timeout bit 1 mask. */
TWI_MASTER_QCEN_bm = 0x02  # Quick Command Enable bit mask. */
TWI_MASTER_SMEN_bm = 0x01  # Smart Mode Enable bit mask. */
TWI_MASTER_ACKACT_bm = 0x04  # Acknowledge Action bit mask. */
TWI_MASTER_CMD0_bm = (1<<0)  # Command bit 0 mask. */
TWI_MASTER_CMD1_bm = (1<<1)  # Command bit 1 mask. */
TWI_MASTER_RIF_bm = 0x80  # Read Interrupt Flag bit mask. */
TWI_MASTER_WIF_bm = 0x40  # Write Interrupt Flag bit mask. */
TWI_MASTER_CLKHOLD_bm = 0x20  # Clock Hold bit mask. */
TWI_MASTER_RXACK_bm = 0x10  # Received Acknowledge bit mask. */
TWI_MASTER_ARBLOST_bm = 0x08  # Arbitration Lost bit mask. */
TWI_MASTER_BUSERR_bm = 0x04  # Bus Error bit mask. */
TWI_MASTER_BUSSTATE0_bm = (1<<0)  # Bus State bit 0 mask. */
TWI_MASTER_BUSSTATE1_bm = (1<<1)  # Bus State bit 1 mask. */
TWI_SLAVE_INTLVL0_bm = (1<<6)  # Interrupt Level bit 0 mask. */
TWI_SLAVE_INTLVL1_bm = (1<<7)  # Interrupt Level bit 1 mask. */
TWI_SLAVE_DIEN_bm = 0x20  # Data Interrupt Enable bit mask. */
TWI_SLAVE_APIEN_bm = 0x10  # Address/Stop Interrupt Enable bit mask. */
TWI_SLAVE_ENABLE_bm = 0x08  # Enable TWI Slave bit mask. */
TWI_SLAVE_PIEN_bm = 0x04  # Stop Interrupt Enable bit mask. */
TWI_SLAVE_PMEN_bm = 0x02  # Promiscuous Mode Enable bit mask. */
TWI_SLAVE_SMEN_bm = 0x01  # Smart Mode Enable bit mask. */
TWI_SLAVE_ACKACT_bm = 0x04  # Acknowledge Action bit mask. */
TWI_SLAVE_CMD0_bm = (1<<0)  # Command bit 0 mask. */
TWI_SLAVE_CMD1_bm = (1<<1)  # Command bit 1 mask. */
TWI_SLAVE_DIF_bm = 0x80  # Data Interrupt Flag bit mask. */
TWI_SLAVE_APIF_bm = 0x40  # Address/Stop Interrupt Flag bit mask. */
TWI_SLAVE_CLKHOLD_bm = 0x20  # Clock Hold bit mask. */
TWI_SLAVE_RXACK_bm = 0x10  # Received Acknowledge bit mask. */
TWI_SLAVE_COLL_bm = 0x08  # Collision bit mask. */
TWI_SLAVE_BUSERR_bm = 0x04  # Bus Error bit mask. */
TWI_SLAVE_DIR_bm = 0x02  # Read/Write Direction bit mask. */
TWI_SLAVE_AP_bm = 0x01  # Slave Address or Stop bit mask. */
TWI_SLAVE_ADDRMASK0_bm = (1<<1)  # Address Mask bit 0 mask. */
TWI_SLAVE_ADDRMASK1_bm = (1<<2)  # Address Mask bit 1 mask. */
TWI_SLAVE_ADDRMASK2_bm = (1<<3)  # Address Mask bit 2 mask. */
TWI_SLAVE_ADDRMASK3_bm = (1<<4)  # Address Mask bit 3 mask. */
TWI_SLAVE_ADDRMASK4_bm = (1<<5)  # Address Mask bit 4 mask. */
TWI_SLAVE_ADDRMASK5_bm = (1<<6)  # Address Mask bit 5 mask. */
TWI_SLAVE_ADDRMASK6_bm = (1<<7)  # Address Mask bit 6 mask. */
TWI_SLAVE_ADDREN_bm = 0x01  # Address Enable bit mask. */
TWI_SDAHOLD0_bm = (1<<1)  # SDA Hold Time Enable bit 0 mask. */
TWI_SDAHOLD1_bm = (1<<2)  # SDA Hold Time Enable bit 1 mask. */
TWI_EDIEN_bm = 0x01  # External Driver Interface Enable bit mask. */
USB_EP_STALLF_bm = 0x80  # Endpoint Stall Flag bit mask. */
USB_EP_CRC_bm = 0x80  # CRC Error Flag bit mask. */
USB_EP_UNF_bm = 0x40  # Underflow Enpoint FLag bit mask. */
USB_EP_OVF_bm = 0x40  # Overflow Enpoint Flag for Output Endpoints bit mask. */
USB_EP_TRNCOMPL0_bm = 0x20  # Transaction Complete 0 Flag bit mask. */
USB_EP_TRNCOMPL1_bm = 0x10  # Transaction Complete 1 Flag bit mask. */
USB_EP_SETUP_bm = 0x10  # SETUP Transaction Complete Flag bit mask. */
USB_EP_BANK_bm = 0x08  # Bank Select bit mask. */
USB_EP_BUSNACK1_bm = 0x04  # Data Buffer 1 Not Acknowledge bit mask. */
USB_EP_BUSNACK0_bm = 0x02  # Data Buffer 0 Not Acknowledge bit mask. */
USB_EP_TOGGLE_bm = 0x01  # Data Toggle bit mask. */
USB_EP_TYPE0_bm = (1<<6)  # Endpoint Type bit 0 mask. */
USB_EP_TYPE1_bm = (1<<7)  # Endpoint Type bit 1 mask. */
USB_EP_MULTIPKT_bm = 0x20  # Multi Packet Transfer Enable bit mask. */
USB_EP_PINGPONG_bm = 0x10  # Ping-Pong Enable bit mask. */
USB_EP_INTDSBL_bm = 0x08  # Interrupt Disable bit mask. */
USB_EP_STALL_bm = 0x04  # Data Stall bit mask. */
USB_EP_BUFSIZE0_bm = (1<<0)  # Data Buffer Size bit 0 mask. */
USB_EP_BUFSIZE1_bm = (1<<1)  # Data Buffer Size bit 1 mask. */
USB_EP_BUFSIZE2_bm = (1<<2)  # Data Buffer Size bit 2 mask. */
USB_EP_ZLP_bm = 0x8000  # Zero Length Packet bit mask. */
USB_ENABLE_bm = 0x80  # USB Enable bit mask. */
USB_SPEED_bm = 0x40  # Speed Select bit mask. */
USB_FIFOEN_bm = 0x20  # USB FIFO Enable bit mask. */
USB_STFRNUM_bm = 0x10  # Store Frame Number Enable bit mask. */
USB_MAXEP0_bm = (1<<0)  # Maximum Endpoint Addresses bit 0 mask. */
USB_MAXEP1_bm = (1<<1)  # Maximum Endpoint Addresses bit 1 mask. */
USB_MAXEP2_bm = (1<<2)  # Maximum Endpoint Addresses bit 2 mask. */
USB_MAXEP3_bm = (1<<3)  # Maximum Endpoint Addresses bit 3 mask. */
USB_PULLRST_bm = 0x10  # Pull during Reset bit mask. */
USB_RWAKEUP_bm = 0x04  # Remote Wake-up bit mask. */
USB_GNACK_bm = 0x02  # Global NACK bit mask. */
USB_ATTACH_bm = 0x01  # Attach bit mask. */
USB_URESUME_bm = 0x08  # Upstream Resume bit mask. */
USB_RESUME_bm = 0x04  # Resume bit mask. */
USB_SUSPEND_bm = 0x02  # Bus Suspended bit mask. */
USB_BUSRST_bm = 0x01  # Bus Reset bit mask. */
USB_ADDR0_bm = (1<<0)  # Device Address bit 0 mask. */
USB_ADDR1_bm = (1<<1)  # Device Address bit 1 mask. */
USB_ADDR2_bm = (1<<2)  # Device Address bit 2 mask. */
USB_ADDR3_bm = (1<<3)  # Device Address bit 3 mask. */
USB_ADDR4_bm = (1<<4)  # Device Address bit 4 mask. */
USB_ADDR5_bm = (1<<5)  # Device Address bit 5 mask. */
USB_ADDR6_bm = (1<<6)  # Device Address bit 6 mask. */
USB_FIFOWP0_bm = (1<<0)  # FIFO Write Pointer bit 0 mask. */
USB_FIFOWP1_bm = (1<<1)  # FIFO Write Pointer bit 1 mask. */
USB_FIFOWP2_bm = (1<<2)  # FIFO Write Pointer bit 2 mask. */
USB_FIFOWP3_bm = (1<<3)  # FIFO Write Pointer bit 3 mask. */
USB_FIFOWP4_bm = (1<<4)  # FIFO Write Pointer bit 4 mask. */
USB_FIFORP0_bm = (1<<0)  # FIFO Read Pointer bit 0 mask. */
USB_FIFORP1_bm = (1<<1)  # FIFO Read Pointer bit 1 mask. */
USB_FIFORP2_bm = (1<<2)  # FIFO Read Pointer bit 2 mask. */
USB_FIFORP3_bm = (1<<3)  # FIFO Read Pointer bit 3 mask. */
USB_FIFORP4_bm = (1<<4)  # FIFO Read Pointer bit 4 mask. */
USB_SOFIE_bm = 0x80  # Start Of Frame Interrupt Enable bit mask. */
USB_BUSEVIE_bm = 0x40  # Bus Event Interrupt Enable bit mask. */
USB_BUSERRIE_bm = 0x20  # Bus Error Interrupt Enable bit mask. */
USB_STALLIE_bm = 0x10  # STALL Interrupt Enable bit mask. */
USB_INTLVL0_bm = (1<<0)  # Interrupt Level bit 0 mask. */
USB_INTLVL1_bm = (1<<1)  # Interrupt Level bit 1 mask. */
USB_TRNIE_bm = 0x02  # Transaction Complete Interrupt Enable bit mask. */
USB_SETUPIE_bm = 0x01  # SETUP Transaction Complete Interrupt Enable bit mask. */
USB_SOFIF_bm = 0x80  # Start Of Frame Interrupt Flag bit mask. */
USB_SUSPENDIF_bm = 0x40  # Suspend Interrupt Flag bit mask. */
USB_RESUMEIF_bm = 0x20  # Resume Interrupt Flag bit mask. */
USB_RSTIF_bm = 0x10  # Reset Interrupt Flag bit mask. */
USB_CRCIF_bm = 0x08  # Isochronous CRC Error Interrupt Flag bit mask. */
USB_UNFIF_bm = 0x04  # Underflow Interrupt Flag bit mask. */
USB_OVFIF_bm = 0x02  # Overflow Interrupt Flag bit mask. */
USB_STALLIF_bm = 0x01  # STALL Interrupt Flag bit mask. */
USB_TRNIF_bm = 0x02  # Transaction Complete Interrupt Flag bit mask. */
USB_SETUPIF_bm = 0x01  # SETUP Transaction Complete Interrupt Flag bit mask. */
PORT_INT1LVL0_bm = (1<<2)  # Port Interrupt 1 Level bit 0 mask. */
PORT_INT1LVL1_bm = (1<<3)  # Port Interrupt 1 Level bit 1 mask. */
PORT_INT0LVL0_bm = (1<<0)  # Port Interrupt 0 Level bit 0 mask. */
PORT_INT0LVL1_bm = (1<<1)  # Port Interrupt 0 Level bit 1 mask. */
PORT_INT1IF_bm = 0x02  # Port Interrupt 1 Flag bit mask. */
PORT_INT0IF_bm = 0x01  # Port Interrupt 0 Flag bit mask. */
PORT_SPI_bm = 0x20  # SPI bit mask. */
PORT_USART0_bm = 0x10  # USART0 bit mask. */
PORT_TC0D_bm = 0x08  # Timer/Counter 0 Output Compare D bit mask. */
PORT_TC0C_bm = 0x04  # Timer/Counter 0 Output Compare C bit mask. */
PORT_TC0B_bm = 0x02  # Timer/Counter 0 Output Compare B bit mask. */
PORT_TC0A_bm = 0x01  # Timer/Counter 0 Output Compare A bit mask. */
PORT_SRLEN_bm = 0x80  # Slew Rate Enable bit mask. */
PORT_INVEN_bm = 0x40  # Inverted I/O Enable bit mask. */
PORT_OPC0_bm = (1<<3)  # Output/Pull Configuration bit 0 mask. */
PORT_OPC1_bm = (1<<4)  # Output/Pull Configuration bit 1 mask. */
PORT_OPC2_bm = (1<<5)  # Output/Pull Configuration bit 2 mask. */
PORT_ISC0_bm = (1<<0)  # Input/Sense Configuration bit 0 mask. */
PORT_ISC1_bm = (1<<1)  # Input/Sense Configuration bit 1 mask. */
PORT_ISC2_bm = (1<<2)  # Input/Sense Configuration bit 2 mask. */
TC0_CLKSEL0_bm = (1<<0)  # Clock Selection bit 0 mask. */
TC0_CLKSEL1_bm = (1<<1)  # Clock Selection bit 1 mask. */
TC0_CLKSEL2_bm = (1<<2)  # Clock Selection bit 2 mask. */
TC0_CLKSEL3_bm = (1<<3)  # Clock Selection bit 3 mask. */
TC0_CCDEN_bm = 0x80  # Compare or Capture D Enable bit mask. */
TC0_CCCEN_bm = 0x40  # Compare or Capture C Enable bit mask. */
TC0_CCBEN_bm = 0x20  # Compare or Capture B Enable bit mask. */
TC0_CCAEN_bm = 0x10  # Compare or Capture A Enable bit mask. */
TC0_WGMODE0_bm = (1<<0)  # Waveform generation mode bit 0 mask. */
TC0_WGMODE1_bm = (1<<1)  # Waveform generation mode bit 1 mask. */
TC0_WGMODE2_bm = (1<<2)  # Waveform generation mode bit 2 mask. */
TC0_CMPD_bm = 0x08  # Compare D Output Value bit mask. */
TC0_CMPC_bm = 0x04  # Compare C Output Value bit mask. */
TC0_CMPB_bm = 0x02  # Compare B Output Value bit mask. */
TC0_CMPA_bm = 0x01  # Compare A Output Value bit mask. */
TC0_EVACT0_bm = (1<<5)  # Event Action bit 0 mask. */
TC0_EVACT1_bm = (1<<6)  # Event Action bit 1 mask. */
TC0_EVACT2_bm = (1<<7)  # Event Action bit 2 mask. */
TC0_EVDLY_bm = 0x10  # Event Delay bit mask. */
TC0_EVSEL0_bm = (1<<0)  # Event Source Select bit 0 mask. */
TC0_EVSEL1_bm = (1<<1)  # Event Source Select bit 1 mask. */
TC0_EVSEL2_bm = (1<<2)  # Event Source Select bit 2 mask. */
TC0_EVSEL3_bm = (1<<3)  # Event Source Select bit 3 mask. */
TC0_BYTEM0_bm = (1<<0)  # Byte Mode bit 0 mask. */
TC0_BYTEM1_bm = (1<<1)  # Byte Mode bit 1 mask. */
TC0_ERRINTLVL0_bm = (1<<2)  # Error Interrupt Level bit 0 mask. */
TC0_ERRINTLVL1_bm = (1<<3)  # Error Interrupt Level bit 1 mask. */
TC0_OVFINTLVL0_bm = (1<<0)  # Overflow interrupt level bit 0 mask. */
TC0_OVFINTLVL1_bm = (1<<1)  # Overflow interrupt level bit 1 mask. */
TC0_CCDINTLVL0_bm = (1<<6)  # Compare or Capture D Interrupt Level bit 0 mask. */
TC0_CCDINTLVL1_bm = (1<<7)  # Compare or Capture D Interrupt Level bit 1 mask. */
TC0_CCCINTLVL0_bm = (1<<4)  # Compare or Capture C Interrupt Level bit 0 mask. */
TC0_CCCINTLVL1_bm = (1<<5)  # Compare or Capture C Interrupt Level bit 1 mask. */
TC0_CCBINTLVL0_bm = (1<<2)  # Compare or Capture B Interrupt Level bit 0 mask. */
TC0_CCBINTLVL1_bm = (1<<3)  # Compare or Capture B Interrupt Level bit 1 mask. */
TC0_CCAINTLVL0_bm = (1<<0)  # Compare or Capture A Interrupt Level bit 0 mask. */
TC0_CCAINTLVL1_bm = (1<<1)  # Compare or Capture A Interrupt Level bit 1 mask. */
TC0_CMD0_bm = (1<<2)  # Command bit 0 mask. */
TC0_CMD1_bm = (1<<3)  # Command bit 1 mask. */
TC0_LUPD_bm = 0x02  # Lock Update bit mask. */
TC0_DIR_bm = 0x01  # Direction bit mask. */
TC0_CCDBV_bm = 0x10  # Compare or Capture D Buffer Valid bit mask. */
TC0_CCCBV_bm = 0x08  # Compare or Capture C Buffer Valid bit mask. */
TC0_CCBBV_bm = 0x04  # Compare or Capture B Buffer Valid bit mask. */
TC0_CCABV_bm = 0x02  # Compare or Capture A Buffer Valid bit mask. */
TC0_PERBV_bm = 0x01  # Period Buffer Valid bit mask. */
TC0_CCDIF_bm = 0x80  # Compare or Capture D Interrupt Flag bit mask. */
TC0_CCCIF_bm = 0x40  # Compare or Capture C Interrupt Flag bit mask. */
TC0_CCBIF_bm = 0x20  # Compare or Capture B Interrupt Flag bit mask. */
TC0_CCAIF_bm = 0x10  # Compare or Capture A Interrupt Flag bit mask. */
TC0_ERRIF_bm = 0x02  # Error Interrupt Flag bit mask. */
TC0_OVFIF_bm = 0x01  # Overflow Interrupt Flag bit mask. */
TC1_CLKSEL0_bm = (1<<0)  # Clock Selection bit 0 mask. */
TC1_CLKSEL1_bm = (1<<1)  # Clock Selection bit 1 mask. */
TC1_CLKSEL2_bm = (1<<2)  # Clock Selection bit 2 mask. */
TC1_CLKSEL3_bm = (1<<3)  # Clock Selection bit 3 mask. */
TC1_CCBEN_bm = 0x20  # Compare or Capture B Enable bit mask. */
TC1_CCAEN_bm = 0x10  # Compare or Capture A Enable bit mask. */
TC1_WGMODE0_bm = (1<<0)  # Waveform generation mode bit 0 mask. */
TC1_WGMODE1_bm = (1<<1)  # Waveform generation mode bit 1 mask. */
TC1_WGMODE2_bm = (1<<2)  # Waveform generation mode bit 2 mask. */
TC1_CMPB_bm = 0x02  # Compare B Output Value bit mask. */
TC1_CMPA_bm = 0x01  # Compare A Output Value bit mask. */
TC1_EVACT0_bm = (1<<5)  # Event Action bit 0 mask. */
TC1_EVACT1_bm = (1<<6)  # Event Action bit 1 mask. */
TC1_EVACT2_bm = (1<<7)  # Event Action bit 2 mask. */
TC1_EVDLY_bm = 0x10  # Event Delay bit mask. */
TC1_EVSEL0_bm = (1<<0)  # Event Source Select bit 0 mask. */
TC1_EVSEL1_bm = (1<<1)  # Event Source Select bit 1 mask. */
TC1_EVSEL2_bm = (1<<2)  # Event Source Select bit 2 mask. */
TC1_EVSEL3_bm = (1<<3)  # Event Source Select bit 3 mask. */
TC1_BYTEM_bm = 0x01  # Byte Mode bit mask. */
TC1_ERRINTLVL0_bm = (1<<2)  # Error Interrupt Level bit 0 mask. */
TC1_ERRINTLVL1_bm = (1<<3)  # Error Interrupt Level bit 1 mask. */
TC1_OVFINTLVL0_bm = (1<<0)  # Overflow interrupt level bit 0 mask. */
TC1_OVFINTLVL1_bm = (1<<1)  # Overflow interrupt level bit 1 mask. */
TC1_CCBINTLVL0_bm = (1<<2)  # Compare or Capture B Interrupt Level bit 0 mask. */
TC1_CCBINTLVL1_bm = (1<<3)  # Compare or Capture B Interrupt Level bit 1 mask. */
TC1_CCAINTLVL0_bm = (1<<0)  # Compare or Capture A Interrupt Level bit 0 mask. */
TC1_CCAINTLVL1_bm = (1<<1)  # Compare or Capture A Interrupt Level bit 1 mask. */
TC1_CMD0_bm = (1<<2)  # Command bit 0 mask. */
TC1_CMD1_bm = (1<<3)  # Command bit 1 mask. */
TC1_LUPD_bm = 0x02  # Lock Update bit mask. */
TC1_DIR_bm = 0x01  # Direction bit mask. */
TC1_CCBBV_bm = 0x04  # Compare or Capture B Buffer Valid bit mask. */
TC1_CCABV_bm = 0x02  # Compare or Capture A Buffer Valid bit mask. */
TC1_PERBV_bm = 0x01  # Period Buffer Valid bit mask. */
TC1_CCBIF_bm = 0x20  # Compare or Capture B Interrupt Flag bit mask. */
TC1_CCAIF_bm = 0x10  # Compare or Capture A Interrupt Flag bit mask. */
TC1_ERRIF_bm = 0x02  # Error Interrupt Flag bit mask. */
TC1_OVFIF_bm = 0x01  # Overflow Interrupt Flag bit mask. */
TC2_CLKSEL0_bm = (1<<0)  # Clock Selection bit 0 mask. */
TC2_CLKSEL1_bm = (1<<1)  # Clock Selection bit 1 mask. */
TC2_CLKSEL2_bm = (1<<2)  # Clock Selection bit 2 mask. */
TC2_CLKSEL3_bm = (1<<3)  # Clock Selection bit 3 mask. */
TC2_HCMPDEN_bm = 0x80  # High Byte Compare D Enable bit mask. */
TC2_HCMPCEN_bm = 0x40  # High Byte Compare C Enable bit mask. */
TC2_HCMPBEN_bm = 0x20  # High Byte Compare B Enable bit mask. */
TC2_HCMPAEN_bm = 0x10  # High Byte Compare A Enable bit mask. */
TC2_LCMPDEN_bm = 0x08  # Low Byte Compare D Enable bit mask. */
TC2_LCMPCEN_bm = 0x04  # Low Byte Compare C Enable bit mask. */
TC2_LCMPBEN_bm = 0x02  # Low Byte Compare B Enable bit mask. */
TC2_LCMPAEN_bm = 0x01  # Low Byte Compare A Enable bit mask. */
TC2_HCMPD_bm = 0x80  # High Byte Compare D Output Value bit mask. */
TC2_HCMPC_bm = 0x40  # High Byte Compare C Output Value bit mask. */
TC2_HCMPB_bm = 0x20  # High Byte Compare B Output Value bit mask. */
TC2_HCMPA_bm = 0x10  # High Byte Compare A Output Value bit mask. */
TC2_LCMPD_bm = 0x08  # Low Byte Compare D Output Value bit mask. */
TC2_LCMPC_bm = 0x04  # Low Byte Compare C Output Value bit mask. */
TC2_LCMPB_bm = 0x02  # Low Byte Compare B Output Value bit mask. */
TC2_LCMPA_bm = 0x01  # Low Byte Compare A Output Value bit mask. */
TC2_BYTEM0_bm = (1<<0)  # Byte Mode bit 0 mask. */
TC2_BYTEM1_bm = (1<<1)  # Byte Mode bit 1 mask. */
TC2_HUNFINTLVL0_bm = (1<<2)  # High Byte Underflow Interrupt Level bit 0 mask. */
TC2_HUNFINTLVL1_bm = (1<<3)  # High Byte Underflow Interrupt Level bit 1 mask. */
TC2_LUNFINTLVL0_bm = (1<<0)  # Low Byte Underflow interrupt level bit 0 mask. */
TC2_LUNFINTLVL1_bm = (1<<1)  # Low Byte Underflow interrupt level bit 1 mask. */
TC2_LCMPDINTLVL0_bm = (1<<6)  # Low Byte Compare D Interrupt Level bit 0 mask. */
TC2_LCMPDINTLVL1_bm = (1<<7)  # Low Byte Compare D Interrupt Level bit 1 mask. */
TC2_LCMPCINTLVL0_bm = (1<<4)  # Low Byte Compare C Interrupt Level bit 0 mask. */
TC2_LCMPCINTLVL1_bm = (1<<5)  # Low Byte Compare C Interrupt Level bit 1 mask. */
TC2_LCMPBINTLVL0_bm = (1<<2)  # Low Byte Compare B Interrupt Level bit 0 mask. */
TC2_LCMPBINTLVL1_bm = (1<<3)  # Low Byte Compare B Interrupt Level bit 1 mask. */
TC2_LCMPAINTLVL0_bm = (1<<0)  # Low Byte Compare A Interrupt Level bit 0 mask. */
TC2_LCMPAINTLVL1_bm = (1<<1)  # Low Byte Compare A Interrupt Level bit 1 mask. */
TC2_CMD0_bm = (1<<2)  # Command bit 0 mask. */
TC2_CMD1_bm = (1<<3)  # Command bit 1 mask. */
TC2_CMDEN0_bm = (1<<0)  # Command Enable bit 0 mask. */
TC2_CMDEN1_bm = (1<<1)  # Command Enable bit 1 mask. */
TC2_LCMPDIF_bm = 0x80  # Low Byte Compare D Interrupt Flag bit mask. */
TC2_LCMPCIF_bm = 0x40  # Low Byte Compare C Interrupt Flag bit mask. */
TC2_LCMPBIF_bm = 0x20  # Low Byte Compare B Interrupt Flag bit mask. */
TC2_LCMPAIF_bm = 0x10  # Low Byte Compare A Interrupt Flag bit mask. */
TC2_HUNFIF_bm = 0x02  # High Byte Underflow Interrupt Flag bit mask. */
TC2_LUNFIF_bm = 0x01  # Low Byte Underflow Interrupt Flag bit mask. */
AWEX_PGM_bm = 0x20  # Pattern Generation Mode bit mask. */
AWEX_CWCM_bm = 0x10  # Common Waveform Channel Mode bit mask. */
AWEX_DTICCDEN_bm = 0x08  # Dead Time Insertion Compare Channel D Enable bit mask. */
AWEX_DTICCCEN_bm = 0x04  # Dead Time Insertion Compare Channel C Enable bit mask. */
AWEX_DTICCBEN_bm = 0x02  # Dead Time Insertion Compare Channel B Enable bit mask. */
AWEX_DTICCAEN_bm = 0x01  # Dead Time Insertion Compare Channel A Enable bit mask. */
AWEX_FDDBD_bm = 0x10  # Fault Detect on Disable Break Disable bit mask. */
AWEX_FDMODE_bm = 0x04  # Fault Detect Mode bit mask. */
AWEX_FDACT0_bm = (1<<0)  # Fault Detect Action bit 0 mask. */
AWEX_FDACT1_bm = (1<<1)  # Fault Detect Action bit 1 mask. */
AWEX_FDF_bm = 0x04  # Fault Detect Flag bit mask. */
AWEX_DTHSBUFV_bm = 0x02  # Dead Time High Side Buffer Valid bit mask. */
AWEX_DTLSBUFV_bm = 0x01  # Dead Time Low Side Buffer Valid bit mask. */
HIRES_HREN0_bm = (1<<0)  # High Resolution Enable bit 0 mask. */
HIRES_HREN1_bm = (1<<1)  # High Resolution Enable bit 1 mask. */
USART_RXCIF_bm = 0x80  # Receive Interrupt Flag bit mask. */
USART_TXCIF_bm = 0x40  # Transmit Interrupt Flag bit mask. */
USART_DREIF_bm = 0x20  # Data Register Empty Flag bit mask. */
USART_FERR_bm = 0x10  # Frame Error bit mask. */
USART_BUFOVF_bm = 0x08  # Buffer Overflow bit mask. */
USART_PERR_bm = 0x04  # Parity Error bit mask. */
USART_RXB8_bm = 0x01  # Receive Bit 8 bit mask. */
USART_RXCINTLVL0_bm = (1<<4)  # Receive Interrupt Level bit 0 mask. */
USART_RXCINTLVL1_bm = (1<<5)  # Receive Interrupt Level bit 1 mask. */
USART_TXCINTLVL0_bm = (1<<2)  # Transmit Interrupt Level bit 0 mask. */
USART_TXCINTLVL1_bm = (1<<3)  # Transmit Interrupt Level bit 1 mask. */
USART_DREINTLVL0_bm = (1<<0)  # Data Register Empty Interrupt Level bit 0 mask. */
USART_DREINTLVL1_bm = (1<<1)  # Data Register Empty Interrupt Level bit 1 mask. */
USART_RXEN_bm = 0x10  # Receiver Enable bit mask. */
USART_TXEN_bm = 0x08  # Transmitter Enable bit mask. */
USART_CLK2X_bm = 0x04  # Double transmission speed bit mask. */
USART_MPCM_bm = 0x02  # Multi-processor Communication Mode bit mask. */
USART_TXB8_bm = 0x01  # Transmit bit 8 bit mask. */
USART_CMODE0_bm = (1<<6)  # Communication Mode bit 0 mask. */
USART_CMODE1_bm = (1<<7)  # Communication Mode bit 1 mask. */
USART_PMODE0_bm = (1<<4)  # Parity Mode bit 0 mask. */
USART_PMODE1_bm = (1<<5)  # Parity Mode bit 1 mask. */
USART_SBMODE_bm = 0x08  # Stop Bit Mode bit mask. */
USART_CHSIZE0_bm = (1<<0)  # Character Size bit 0 mask. */
USART_CHSIZE1_bm = (1<<1)  # Character Size bit 1 mask. */
USART_CHSIZE2_bm = (1<<2)  # Character Size bit 2 mask. */
USART_BSEL0_bm = (1<<0)  # Baud Rate Selection Bits [7:0] bit 0 mask. */
USART_BSEL1_bm = (1<<1)  # Baud Rate Selection Bits [7:0] bit 1 mask. */
USART_BSEL2_bm = (1<<2)  # Baud Rate Selection Bits [7:0] bit 2 mask. */
USART_BSEL3_bm = (1<<3)  # Baud Rate Selection Bits [7:0] bit 3 mask. */
USART_BSEL4_bm = (1<<4)  # Baud Rate Selection Bits [7:0] bit 4 mask. */
USART_BSEL5_bm = (1<<5)  # Baud Rate Selection Bits [7:0] bit 5 mask. */
USART_BSEL6_bm = (1<<6)  # Baud Rate Selection Bits [7:0] bit 6 mask. */
USART_BSEL7_bm = (1<<7)  # Baud Rate Selection Bits [7:0] bit 7 mask. */
USART_BSCALE0_bm = (1<<4)  # Baud Rate Scale bit 0 mask. */
USART_BSCALE1_bm = (1<<5)  # Baud Rate Scale bit 1 mask. */
USART_BSCALE2_bm = (1<<6)  # Baud Rate Scale bit 2 mask. */
USART_BSCALE3_bm = (1<<7)  # Baud Rate Scale bit 3 mask. */
SPI_CLK2X_bm = 0x80  # Enable Double Speed bit mask. */
SPI_ENABLE_bm = 0x40  # Enable Module bit mask. */
SPI_DORD_bm = 0x20  # Data Order Setting bit mask. */
SPI_MASTER_bm = 0x10  # Master Operation Enable bit mask. */
SPI_MODE0_bm = (1<<2)  # SPI Mode bit 0 mask. */
SPI_MODE1_bm = (1<<3)  # SPI Mode bit 1 mask. */
SPI_PRESCALER0_bm = (1<<0)  # Prescaler bit 0 mask. */
SPI_PRESCALER1_bm = (1<<1)  # Prescaler bit 1 mask. */
SPI_INTLVL0_bm = (1<<0)  # Interrupt level bit 0 mask. */
SPI_INTLVL1_bm = (1<<1)  # Interrupt level bit 1 mask. */
SPI_IF_bm = 0x80  # Interrupt Flag bit mask. */
SPI_WRCOL_bm = 0x40  # Write Collision bit mask. */
IRCOM_EVSEL0_bm = (1<<0)  # Event Channel Select bit 0 mask. */
IRCOM_EVSEL1_bm = (1<<1)  # Event Channel Select bit 1 mask. */
IRCOM_EVSEL2_bm = (1<<2)  # Event Channel Select bit 2 mask. */
IRCOM_EVSEL3_bm = (1<<3)  # Event Channel Select bit 3 mask. */
NVM_FUSES_WDWP0_bm = (1<<4)  # Watchdog Window Timeout Period bit 0 mask. */
NVM_FUSES_WDWP1_bm = (1<<5)  # Watchdog Window Timeout Period bit 1 mask. */
NVM_FUSES_WDWP2_bm = (1<<6)  # Watchdog Window Timeout Period bit 2 mask. */
NVM_FUSES_WDWP3_bm = (1<<7)  # Watchdog Window Timeout Period bit 3 mask. */
NVM_FUSES_WDP0_bm = (1<<0)  # Watchdog Timeout Period bit 0 mask. */
NVM_FUSES_WDP1_bm = (1<<1)  # Watchdog Timeout Period bit 1 mask. */
NVM_FUSES_WDP2_bm = (1<<2)  # Watchdog Timeout Period bit 2 mask. */
NVM_FUSES_WDP3_bm = (1<<3)  # Watchdog Timeout Period bit 3 mask. */
NVM_FUSES_BOOTRST_bm = 0x40  # Boot Loader Section Reset Vector bit mask. */
NVM_FUSES_TOSCSEL_bm = 0x20  # Timer Oscillator pin location bit mask. */
NVM_FUSES_BODPD0_bm = (1<<0)  # BOD Operation in Power-Down Mode bit 0 mask. */
NVM_FUSES_BODPD1_bm = (1<<1)  # BOD Operation in Power-Down Mode bit 1 mask. */
NVM_FUSES_RSTDISBL_bm = 0x10  # External Reset Disable bit mask. */
NVM_FUSES_SUT0_bm = (1<<2)  # Start-up Time bit 0 mask. */
NVM_FUSES_SUT1_bm = (1<<3)  # Start-up Time bit 1 mask. */
NVM_FUSES_WDLOCK_bm = 0x02  # Watchdog Timer Lock bit mask. */
NVM_FUSES_BODACT0_bm = (1<<4)  # BOD Operation in Active Mode bit 0 mask. */
NVM_FUSES_BODACT1_bm = (1<<5)  # BOD Operation in Active Mode bit 1 mask. */
NVM_FUSES_EESAVE_bm = 0x08  # Preserve EEPROM Through Chip Erase bit mask. */
NVM_FUSES_BODLVL0_bm = (1<<0)  # Brown Out Detection Voltage Level bit 0 mask. */
NVM_FUSES_BODLVL1_bm = (1<<1)  # Brown Out Detection Voltage Level bit 1 mask. */
NVM_FUSES_BODLVL2_bm = (1<<2)  # Brown Out Detection Voltage Level bit 2 mask. */
NVM_LOCKBITS_BLBB0_bm = (1<<6)  # Boot Lock Bits - Boot Section bit 0 mask. */
NVM_LOCKBITS_BLBB1_bm = (1<<7)  # Boot Lock Bits - Boot Section bit 1 mask. */
NVM_LOCKBITS_BLBA0_bm = (1<<4)  # Boot Lock Bits - Application Section bit 0 mask. */
NVM_LOCKBITS_BLBA1_bm = (1<<5)  # Boot Lock Bits - Application Section bit 1 mask. */
NVM_LOCKBITS_BLBAT0_bm = (1<<2)  # Boot Lock Bits - Application Table bit 0 mask. */
NVM_LOCKBITS_BLBAT1_bm = (1<<3)  # Boot Lock Bits - Application Table bit 1 mask. */
NVM_LOCKBITS_LB0_bm = (1<<0)  # Lock Bits bit 0 mask. */
NVM_LOCKBITS_LB1_bm = (1<<1)  # Lock Bits bit 1 mask. */
PIN0_bm =0x01
PIN1_bm =0x02
PIN2_bm =0x04
PIN3_bm =0x08
PIN4_bm =0x10
PIN5_bm =0x20
PIN6_bm =0x40
PIN7_bm =0x80
CCP_SPM_gc = (0x9D<<0)  # SPM Instruction Protection */
CCP_IOREG_gc = (0xD8<<0)  # IO Register Protection */
CLK_SCLKSEL_RC2M_gc = (0x00<<0)  # Internal 2 MHz RC Oscillator */
CLK_SCLKSEL_RC32M_gc = (0x01<<0)  # Internal 32 MHz RC Oscillator */
CLK_SCLKSEL_RC32K_gc = (0x02<<0)  # Internal 32.768 kHz RC Oscillator */
CLK_SCLKSEL_XOSC_gc = (0x03<<0)  # External Crystal Oscillator or Clock */
CLK_SCLKSEL_PLL_gc = (0x04<<0)  # Phase Locked Loop */
CLK_PSADIV_1_gc = (0x00<<2)  # Divide by 1 */
CLK_PSADIV_2_gc = (0x01<<2)  # Divide by 2 */
CLK_PSADIV_4_gc = (0x03<<2)  # Divide by 4 */
CLK_PSADIV_8_gc = (0x05<<2)  # Divide by 8 */
CLK_PSADIV_16_gc = (0x07<<2)  # Divide by 16 */
CLK_PSADIV_32_gc = (0x09<<2)  # Divide by 32 */
CLK_PSADIV_64_gc = (0x0B<<2)  # Divide by 64 */
CLK_PSADIV_128_gc = (0x0D<<2)  # Divide by 128 */
CLK_PSADIV_256_gc = (0x0F<<2)  # Divide by 256 */
CLK_PSADIV_512_gc = (0x11<<2)  # Divide by 512 */
CLK_PSBCDIV_1_1_gc = (0x00<<0)  # Divide B by 1 and C by 1 */
CLK_PSBCDIV_1_2_gc = (0x01<<0)  # Divide B by 1 and C by 2 */
CLK_PSBCDIV_4_1_gc = (0x02<<0)  # Divide B by 4 and C by 1 */
CLK_PSBCDIV_2_2_gc = (0x03<<0)  # Divide B by 2 and C by 2 */
CLK_RTCSRC_ULP_gc = (0x00<<1)  # 1.024 kHz from internal 32kHz ULP */
CLK_RTCSRC_TOSC_gc = (0x01<<1)  # 1.024 kHz from 32.768 kHz crystal oscillator on TOSC */
CLK_RTCSRC_RCOSC_gc = (0x02<<1)  # 1.024 kHz from internal 32.768 kHz RC oscillator */
CLK_RTCSRC_TOSC32_gc = (0x05<<1)  # 32.768 kHz from 32.768 kHz crystal oscillator on TOSC */
CLK_RTCSRC_RCOSC32_gc = (0x06<<1)  # 32.768 kHz from internal 32.768 kHz RC oscillator */
CLK_RTCSRC_EXTCLK_gc = (0x07<<1)  # External Clock from TOSC1 */
CLK_USBPSDIV_1_gc = (0x00<<3)  # Divide by 1 */
CLK_USBPSDIV_2_gc = (0x01<<3)  # Divide by 2 */
CLK_USBPSDIV_4_gc = (0x02<<3)  # Divide by 4 */
CLK_USBPSDIV_8_gc = (0x03<<3)  # Divide by 8 */
CLK_USBPSDIV_16_gc = (0x04<<3)  # Divide by 16 */
CLK_USBPSDIV_32_gc = (0x05<<3)  # Divide by 32 */
CLK_USBSRC_PLL_gc = (0x00<<1)  # PLL */
CLK_USBSRC_RC32M_gc = (0x01<<1)  # Internal 32 MHz RC Oscillator */
SLEEP_SMODE_IDLE_gc = (0x00<<1)  # Idle mode */
SLEEP_SMODE_PDOWN_gc = (0x02<<1)  # Power-down Mode */
SLEEP_SMODE_PSAVE_gc = (0x03<<1)  # Power-save Mode */
SLEEP_SMODE_STDBY_gc = (0x06<<1)  # Standby Mode */
SLEEP_SMODE_ESTDBY_gc = (0x07<<1)  # Extended Standby Mode */
OSC_FRQRANGE_04TO2_gc = (0x00<<6)  # 0.4 - 2 MHz */
OSC_FRQRANGE_2TO9_gc = (0x01<<6)  # 2 - 9 MHz */
OSC_FRQRANGE_9TO12_gc = (0x02<<6)  # 9 - 12 MHz */
OSC_FRQRANGE_12TO16_gc = (0x03<<6)  # 12 - 16 MHz */
OSC_XOSCSEL_EXTCLK_gc = (0x00<<0)  # External Clock - 6 CLK */
OSC_XOSCSEL_32KHz_gc = (0x02<<0)  # 32.768 kHz TOSC - 32K CLK */
OSC_XOSCSEL_XTAL_256CLK_gc = (0x03<<0)  # 0.4-16 MHz XTAL - 256 CLK */
OSC_XOSCSEL_XTAL_1KCLK_gc = (0x07<<0)  # 0.4-16 MHz XTAL - 1K CLK */
OSC_XOSCSEL_XTAL_16KCLK_gc = (0x0B<<0)  # 0.4-16 MHz XTAL - 16K CLK */
OSC_PLLSRC_RC2M_gc = (0x00<<6)  # Internal 2 MHz RC Oscillator */
OSC_PLLSRC_RC32M_gc = (0x02<<6)  # Internal 32 MHz RC Oscillator */
OSC_PLLSRC_XOSC_gc = (0x03<<6)  # External Oscillator */
OSC_RC2MCREF_RC32K_gc = (0x00<<0)  # Internal 32.768 kHz RC Oscillator */
OSC_RC2MCREF_XOSC32K_gc = (0x01<<0)  # External 32.768 kHz Crystal Oscillator */
OSC_RC32MCREF_RC32K_gc = (0x00<<1)  # Internal 32.768 kHz RC Oscillator */
OSC_RC32MCREF_XOSC32K_gc = (0x01<<1)  # External 32.768 kHz Crystal Oscillator */
OSC_RC32MCREF_USBSOF_gc = (0x02<<1)  # USB Start of Frame */
WDT_PER_8CLK_gc = (0x00<<2)  # 8 cycles (8ms @ 3.3V) */
WDT_PER_16CLK_gc = (0x01<<2)  # 16 cycles (16ms @ 3.3V) */
WDT_PER_32CLK_gc = (0x02<<2)  # 32 cycles (32ms @ 3.3V) */
WDT_PER_64CLK_gc = (0x03<<2)  # 64 cycles (64ms @ 3.3V) */
WDT_PER_125CLK_gc = (0x04<<2)  # 125 cycles (0.125s @ 3.3V) */
WDT_PER_250CLK_gc = (0x05<<2)  # 250 cycles (0.25s @ 3.3V) */
WDT_PER_500CLK_gc = (0x06<<2)  # 500 cycles (0.5s @ 3.3V) */
WDT_PER_1KCLK_gc = (0x07<<2)  # 1K cycles (1s @ 3.3V) */
WDT_PER_2KCLK_gc = (0x08<<2)  # 2K cycles (2s @ 3.3V) */
WDT_PER_4KCLK_gc = (0x09<<2)  # 4K cycles (4s @ 3.3V) */
WDT_PER_8KCLK_gc = (0x0A<<2)  # 8K cycles (8s @ 3.3V) */
WDT_WPER_8CLK_gc = (0x00<<2)  # 8 cycles (8ms @ 3.3V) */
WDT_WPER_16CLK_gc = (0x01<<2)  # 16 cycles (16ms @ 3.3V) */
WDT_WPER_32CLK_gc = (0x02<<2)  # 32 cycles (32ms @ 3.3V) */
WDT_WPER_64CLK_gc = (0x03<<2)  # 64 cycles (64ms @ 3.3V) */
WDT_WPER_125CLK_gc = (0x04<<2)  # 125 cycles (0.125s @ 3.3V) */
WDT_WPER_250CLK_gc = (0x05<<2)  # 250 cycles (0.25s @ 3.3V) */
WDT_WPER_500CLK_gc = (0x06<<2)  # 500 cycles (0.5s @ 3.3V) */
WDT_WPER_1KCLK_gc = (0x07<<2)  # 1K cycles (1s @ 3.3V) */
WDT_WPER_2KCLK_gc = (0x08<<2)  # 2K cycles (2s @ 3.3V) */
WDT_WPER_4KCLK_gc = (0x09<<2)  # 4K cycles (4s @ 3.3V) */
WDT_WPER_8KCLK_gc = (0x0A<<2)  # 8K cycles (8s @ 3.3V) */
PORTCFG_VP02MAP_PORTA_gc = (0x00<<0)  # Mapped To PORTA */
PORTCFG_VP02MAP_PORTB_gc = (0x01<<0)  # Mapped To PORTB */
PORTCFG_VP02MAP_PORTC_gc = (0x02<<0)  # Mapped To PORTC */
PORTCFG_VP02MAP_PORTD_gc = (0x03<<0)  # Mapped To PORTD */
PORTCFG_VP02MAP_PORTE_gc = (0x04<<0)  # Mapped To PORTE */
PORTCFG_VP02MAP_PORTF_gc = (0x05<<0)  # Mapped To PORTF */
PORTCFG_VP02MAP_PORTG_gc = (0x06<<0)  # Mapped To PORTG */
PORTCFG_VP02MAP_PORTH_gc = (0x07<<0)  # Mapped To PORTH */
PORTCFG_VP02MAP_PORTJ_gc = (0x08<<0)  # Mapped To PORTJ */
PORTCFG_VP02MAP_PORTK_gc = (0x09<<0)  # Mapped To PORTK */
PORTCFG_VP02MAP_PORTL_gc = (0x0A<<0)  # Mapped To PORTL */
PORTCFG_VP02MAP_PORTM_gc = (0x0B<<0)  # Mapped To PORTM */
PORTCFG_VP02MAP_PORTN_gc = (0x0C<<0)  # Mapped To PORTN */
PORTCFG_VP02MAP_PORTP_gc = (0x0D<<0)  # Mapped To PORTP */
PORTCFG_VP02MAP_PORTQ_gc = (0x0E<<0)  # Mapped To PORTQ */
PORTCFG_VP02MAP_PORTR_gc = (0x0F<<0)  # Mapped To PORTR */
PORTCFG_VP13MAP_PORTA_gc = (0x00<<4)  # Mapped To PORTA */
PORTCFG_VP13MAP_PORTB_gc = (0x01<<4)  # Mapped To PORTB */
PORTCFG_VP13MAP_PORTC_gc = (0x02<<4)  # Mapped To PORTC */
PORTCFG_VP13MAP_PORTD_gc = (0x03<<4)  # Mapped To PORTD */
PORTCFG_VP13MAP_PORTE_gc = (0x04<<4)  # Mapped To PORTE */
PORTCFG_VP13MAP_PORTF_gc = (0x05<<4)  # Mapped To PORTF */
PORTCFG_VP13MAP_PORTG_gc = (0x06<<4)  # Mapped To PORTG */
PORTCFG_VP13MAP_PORTH_gc = (0x07<<4)  # Mapped To PORTH */
PORTCFG_VP13MAP_PORTJ_gc = (0x08<<4)  # Mapped To PORTJ */
PORTCFG_VP13MAP_PORTK_gc = (0x09<<4)  # Mapped To PORTK */
PORTCFG_VP13MAP_PORTL_gc = (0x0A<<4)  # Mapped To PORTL */
PORTCFG_VP13MAP_PORTM_gc = (0x0B<<4)  # Mapped To PORTM */
PORTCFG_VP13MAP_PORTN_gc = (0x0C<<4)  # Mapped To PORTN */
PORTCFG_VP13MAP_PORTP_gc = (0x0D<<4)  # Mapped To PORTP */
PORTCFG_VP13MAP_PORTQ_gc = (0x0E<<4)  # Mapped To PORTQ */
PORTCFG_VP13MAP_PORTR_gc = (0x0F<<4)  # Mapped To PORTR */
PORTCFG_CLKOUT_OFF_gc = (0x00<<0)  # System Clock Output Disabled */
PORTCFG_CLKOUT_PC7_gc = (0x01<<0)  # System Clock Output on Port C pin 7 */
PORTCFG_CLKOUT_PD7_gc = (0x02<<0)  # System Clock Output on Port D pin 7 */
PORTCFG_CLKOUT_PE7_gc = (0x03<<0)  # System Clock Output on Port E pin 7 */
PORTCFG_CLKOUTSEL_CLK1X_gc = (0x00<<2)  # 1x Peripheral Clock Output to pin */
PORTCFG_CLKOUTSEL_CLK2X_gc = (0x01<<2)  # 2x Peripheral Clock Output to pin */
PORTCFG_CLKOUTSEL_CLK4X_gc = (0x02<<2)  # 4x Peripheral Clock Output to pin */
PORTCFG_EVOUT_OFF_gc = (0x00<<4)  # Event Output Disabled */
PORTCFG_EVOUT_PC7_gc = (0x01<<4)  # Event Channel 7 Output on Port C pin 7 */
PORTCFG_EVOUT_PD7_gc = (0x02<<4)  # Event Channel 7 Output on Port D pin 7 */
PORTCFG_EVOUT_PE7_gc = (0x03<<4)  # Event Channel 7 Output on Port E pin 7 */
PORTCFG_CLKEVPIN_PIN7_gc = (0x00<<7)  # Clock and Event Ouput on PIN 7 */
PORTCFG_CLKEVPIN_PIN4_gc = (0x01<<7)  # Clock and Event Ouput on PIN 4 */
PORTCFG_EVOUTSEL_0_gc = (0x00<<0)  # Event Channel 0 output to pin */
PORTCFG_EVOUTSEL_1_gc = (0x01<<0)  # Event Channel 1 output to pin */
PORTCFG_EVOUTSEL_2_gc = (0x02<<0)  # Event Channel 2 output to pin */
PORTCFG_EVOUTSEL_3_gc = (0x03<<0)  # Event Channel 3 output to pin */
PORTCFG_EVOUTSEL_4_gc = (0x04<<0)  # Event Channel 4 output to pin */
PORTCFG_EVOUTSEL_5_gc = (0x05<<0)  # Event Channel 5 output to pin */
PORTCFG_EVOUTSEL_6_gc = (0x06<<0)  # Event Channel 6 output to pin */
PORTCFG_EVOUTSEL_7_gc = (0x07<<0)  # Event Channel 7 output to pin */
AES_INTLVL_OFF_gc = (0x00<<0)  # Interrupt Disabled */
AES_INTLVL_LO_gc = (0x01<<0)  # Low Level */
AES_INTLVL_MED_gc = (0x02<<0)  # Medium Level */
AES_INTLVL_HI_gc = (0x03<<0)  # High Level */
CRC_RESET_NO_gc = (0x00<<6)  # No Reset */
CRC_RESET_RESET0_gc = (0x02<<6)  # Reset CRC with CHECKSUM to all zeros */
CRC_RESET_RESET1_gc = (0x03<<6)  # Reset CRC with CHECKSUM to all ones */
CRC_SOURCE_DISABLE_gc = (0x00<<0)  # Disabled */
CRC_SOURCE_IO_gc = (0x01<<0)  # I/O Interface */
CRC_SOURCE_FLASH_gc = (0x02<<0)  # Flash */
CRC_SOURCE_DMAC0_gc = (0x04<<0)  # DMAC Channel 0 */
CRC_SOURCE_DMAC1_gc = (0x05<<0)  # DMAC Channel 1 */
CRC_SOURCE_DMAC2_gc = (0x06<<0)  # DMAC Channel 2 */
CRC_SOURCE_DMAC3_gc = (0x07<<0)  # DMAC Channel 3 */
DMA_CH_BURSTLEN_1BYTE_gc = (0x00<<0)  # 1-byte burst mode */
DMA_CH_BURSTLEN_2BYTE_gc = (0x01<<0)  # 2-byte burst mode */
DMA_CH_BURSTLEN_4BYTE_gc = (0x02<<0)  # 4-byte burst mode */
DMA_CH_BURSTLEN_8BYTE_gc = (0x03<<0)  # 8-byte burst mode */
DMA_CH_SRCRELOAD_NONE_gc = (0x00<<6)  # No reload */
DMA_CH_SRCRELOAD_BLOCK_gc = (0x01<<6)  # Reload at end of block */
DMA_CH_SRCRELOAD_BURST_gc = (0x02<<6)  # Reload at end of burst */
DMA_CH_SRCRELOAD_TRANSACTION_gc = (0x03<<6)  # Reload at end of transaction */
DMA_CH_SRCDIR_FIXED_gc = (0x00<<4)  # Fixed */
DMA_CH_SRCDIR_INC_gc = (0x01<<4)  # Increment */
DMA_CH_SRCDIR_DEC_gc = (0x02<<4)  # Decrement */
DMA_CH_DESTRELOAD_NONE_gc = (0x00<<2)  # No reload */
DMA_CH_DESTRELOAD_BLOCK_gc = (0x01<<2)  # Reload at end of block */
DMA_CH_DESTRELOAD_BURST_gc = (0x02<<2)  # Reload at end of burst */
DMA_CH_DESTRELOAD_TRANSACTION_gc = (0x03<<2)  # Reload at end of transaction */
DMA_CH_DESTDIR_FIXED_gc = (0x00<<0)  # Fixed */
DMA_CH_DESTDIR_INC_gc = (0x01<<0)  # Increment */
DMA_CH_DESTDIR_DEC_gc = (0x02<<0)  # Decrement */
DMA_CH_TRIGSRC_OFF_gc = (0x00<<0)  # Off software triggers only */
DMA_CH_TRIGSRC_EVSYS_CH0_gc = (0x01<<0)  # Event System Channel 0 */
DMA_CH_TRIGSRC_EVSYS_CH1_gc = (0x02<<0)  # Event System Channel 1 */
DMA_CH_TRIGSRC_EVSYS_CH2_gc = (0x03<<0)  # Event System Channel 2 */
DMA_CH_TRIGSRC_ADCA_CH0_gc = (0x10<<0)  # ADCA Channel 0 */
DMA_CH_TRIGSRC_ADCA_CH1_gc = (0x11<<0)  # ADCA Channel 1 */
DMA_CH_TRIGSRC_ADCA_CH2_gc = (0x12<<0)  # ADCA Channel 2 */
DMA_CH_TRIGSRC_ADCA_CH3_gc = (0x13<<0)  # ADCA Channel 3 */
DMA_CH_TRIGSRC_ADCA_CH4_gc = (0x14<<0)  # ADCA Channel 0,1,2,3 combined */
DMA_CH_TRIGSRC_DACA_CH0_gc = (0x15<<0)  # DACA Channel 0 */
DMA_CH_TRIGSRC_DACA_CH1_gc = (0x16<<0)  # DACA Channel 1 */
DMA_CH_TRIGSRC_ADCB_CH0_gc = (0x20<<0)  # ADCB Channel 0 */
DMA_CH_TRIGSRC_ADCB_CH1_gc = (0x21<<0)  # ADCB Channel 1 */
DMA_CH_TRIGSRC_ADCB_CH2_gc = (0x22<<0)  # ADCB Channel 2 */
DMA_CH_TRIGSRC_ADCB_CH3_gc = (0x23<<0)  # ADCB Channel 3 */
DMA_CH_TRIGSRC_ADCB_CH4_gc = (0x24<<0)  # ADCB Channel 0,1,2,3 combined */
DMA_CH_TRIGSRC_DACB_CH0_gc = (0x25<<0)  # DACB Channel 0 */
DMA_CH_TRIGSRC_DACB_CH1_gc = (0x26<<0)  # DACB Channel 1 */
DMA_CH_TRIGSRC_TCC0_OVF_gc = (0x40<<0)  # Timer/Counter C0 Overflow */
DMA_CH_TRIGSRC_TCC0_ERR_gc = (0x41<<0)  # Timer/Counter C0 Error */
DMA_CH_TRIGSRC_TCC0_CCA_gc = (0x42<<0)  # Timer/Counter C0 Compare or Capture A */
DMA_CH_TRIGSRC_TCC0_CCB_gc = (0x43<<0)  # Timer/Counter C0 Compare or Capture B */
DMA_CH_TRIGSRC_TCC0_CCC_gc = (0x44<<0)  # Timer/Counter C0 Compare or Capture C */
DMA_CH_TRIGSRC_TCC0_CCD_gc = (0x45<<0)  # Timer/Counter C0 Compare or Capture D */
DMA_CH_TRIGSRC_TCC1_OVF_gc = (0x46<<0)  # Timer/Counter C1 Overflow */
DMA_CH_TRIGSRC_TCC1_ERR_gc = (0x47<<0)  # Timer/Counter C1 Error */
DMA_CH_TRIGSRC_TCC1_CCA_gc = (0x48<<0)  # Timer/Counter C1 Compare or Capture A */
DMA_CH_TRIGSRC_TCC1_CCB_gc = (0x49<<0)  # Timer/Counter C1 Compare or Capture B */
DMA_CH_TRIGSRC_SPIC_gc = (0x4A<<0)  # SPI C Transfer Complete */
DMA_CH_TRIGSRC_USARTC0_RXC_gc = (0x4B<<0)  # USART C0 Receive Complete */
DMA_CH_TRIGSRC_USARTC0_DRE_gc = (0x4C<<0)  # USART C0 Data Register Empty */
DMA_CH_TRIGSRC_USARTC1_RXC_gc = (0x4E<<0)  # USART C1 Receive Complete */
DMA_CH_TRIGSRC_USARTC1_DRE_gc = (0x4F<<0)  # USART C1 Data Register Empty */
DMA_CH_TRIGSRC_TCD0_OVF_gc = (0x60<<0)  # Timer/Counter D0 Overflow */
DMA_CH_TRIGSRC_TCD0_ERR_gc = (0x61<<0)  # Timer/Counter D0 Error */
DMA_CH_TRIGSRC_TCD0_CCA_gc = (0x62<<0)  # Timer/Counter D0 Compare or Capture A */
DMA_CH_TRIGSRC_TCD0_CCB_gc = (0x63<<0)  # Timer/Counter D0 Compare or Capture B */
DMA_CH_TRIGSRC_TCD0_CCC_gc = (0x64<<0)  # Timer/Counter D0 Compare or Capture C */
DMA_CH_TRIGSRC_TCD0_CCD_gc = (0x65<<0)  # Timer/Counter D0 Compare or Capture D */
DMA_CH_TRIGSRC_TCD1_OVF_gc = (0x66<<0)  # Timer/Counter D1 Overflow */
DMA_CH_TRIGSRC_TCD1_ERR_gc = (0x67<<0)  # Timer/Counter D1 Error */
DMA_CH_TRIGSRC_TCD1_CCA_gc = (0x68<<0)  # Timer/Counter D1 Compare or Capture A */
DMA_CH_TRIGSRC_TCD1_CCB_gc = (0x69<<0)  # Timer/Counter D1 Compare or Capture B */
DMA_CH_TRIGSRC_SPID_gc = (0x6A<<0)  # SPI D Transfer Complete */
DMA_CH_TRIGSRC_USARTD0_RXC_gc = (0x6B<<0)  # USART D0 Receive Complete */
DMA_CH_TRIGSRC_USARTD0_DRE_gc = (0x6C<<0)  # USART D0 Data Register Empty */
DMA_CH_TRIGSRC_USARTD1_RXC_gc = (0x6E<<0)  # USART D1 Receive Complete */
DMA_CH_TRIGSRC_USARTD1_DRE_gc = (0x6F<<0)  # USART D1 Data Register Empty */
DMA_CH_TRIGSRC_TCE0_OVF_gc = (0x80<<0)  # Timer/Counter E0 Overflow */
DMA_CH_TRIGSRC_TCE0_ERR_gc = (0x81<<0)  # Timer/Counter E0 Error */
DMA_CH_TRIGSRC_TCE0_CCA_gc = (0x82<<0)  # Timer/Counter E0 Compare or Capture A */
DMA_CH_TRIGSRC_TCE0_CCB_gc = (0x83<<0)  # Timer/Counter E0 Compare or Capture B */
DMA_CH_TRIGSRC_TCE0_CCC_gc = (0x84<<0)  # Timer/Counter E0 Compare or Capture C */
DMA_CH_TRIGSRC_TCE0_CCD_gc = (0x85<<0)  # Timer/Counter E0 Compare or Capture D */
DMA_CH_TRIGSRC_TCE1_OVF_gc = (0x86<<0)  # Timer/Counter E1 Overflow */
DMA_CH_TRIGSRC_TCE1_ERR_gc = (0x87<<0)  # Timer/Counter E1 Error */
DMA_CH_TRIGSRC_TCE1_CCA_gc = (0x88<<0)  # Timer/Counter E1 Compare or Capture A */
DMA_CH_TRIGSRC_TCE1_CCB_gc = (0x89<<0)  # Timer/Counter E1 Compare or Capture B */
DMA_CH_TRIGSRC_SPIE_gc = (0x8A<<0)  # SPI E Transfer Complete */
DMA_CH_TRIGSRC_USARTE0_RXC_gc = (0x8B<<0)  # USART E0 Receive Complete */
DMA_CH_TRIGSRC_USARTE0_DRE_gc = (0x8C<<0)  # USART E0 Data Register Empty */
DMA_CH_TRIGSRC_USARTE1_RXC_gc = (0x8E<<0)  # USART E1 Receive Complete */
DMA_CH_TRIGSRC_USARTE1_DRE_gc = (0x8F<<0)  # USART E1 Data Register Empty */
DMA_CH_TRIGSRC_TCF0_OVF_gc = (0xA0<<0)  # Timer/Counter F0 Overflow */
DMA_CH_TRIGSRC_TCF0_ERR_gc = (0xA1<<0)  # Timer/Counter F0 Error */
DMA_CH_TRIGSRC_TCF0_CCA_gc = (0xA2<<0)  # Timer/Counter F0 Compare or Capture A */
DMA_CH_TRIGSRC_TCF0_CCB_gc = (0xA3<<0)  # Timer/Counter F0 Compare or Capture B */
DMA_CH_TRIGSRC_TCF0_CCC_gc = (0xA4<<0)  # Timer/Counter F0 Compare or Capture C */
DMA_CH_TRIGSRC_TCF0_CCD_gc = (0xA5<<0)  # Timer/Counter F0 Compare or Capture D */
DMA_CH_TRIGSRC_TCF1_OVF_gc = (0xA6<<0)  # Timer/Counter F1 Overflow */
DMA_CH_TRIGSRC_TCF1_ERR_gc = (0xA7<<0)  # Timer/Counter F1 Error */
DMA_CH_TRIGSRC_TCF1_CCA_gc = (0xA8<<0)  # Timer/Counter F1 Compare or Capture A */
DMA_CH_TRIGSRC_TCF1_CCB_gc = (0xA9<<0)  # Timer/Counter F1 Compare or Capture B */
DMA_CH_TRIGSRC_SPIF_gc = (0xAA<<0)  # SPI F Transfer Complete */
DMA_CH_TRIGSRC_USARTF0_RXC_gc = (0xAB<<0)  # USART F0 Receive Complete */
DMA_CH_TRIGSRC_USARTF0_DRE_gc = (0xAC<<0)  # USART F0 Data Register Empty */
DMA_CH_TRIGSRC_USARTF1_RXC_gc = (0xAE<<0)  # USART F1 Receive Complete */
DMA_CH_TRIGSRC_USARTF1_DRE_gc = (0xAF<<0)  # USART F1 Data Register Empty */
DMA_DBUFMODE_DISABLED_gc = (0x00<<2)  # Double buffering disabled */
DMA_DBUFMODE_CH01_gc = (0x01<<2)  # Double buffering enabled on channel 0/1 */
DMA_DBUFMODE_CH23_gc = (0x02<<2)  # Double buffering enabled on channel 2/3 */
DMA_DBUFMODE_CH01CH23_gc = (0x03<<2)  # Double buffering enabled on ch. 0/1 and ch. 2/3 */
DMA_PRIMODE_RR0123_gc = (0x00<<0)  # Round Robin */
DMA_PRIMODE_CH0RR123_gc = (0x01<<0)  # Channel 0 > Round Robin on channel 1/2/3 */
DMA_PRIMODE_CH01RR23_gc = (0x02<<0)  # Channel 0 > channel 1 > Round Robin on channel 2/3 */
DMA_PRIMODE_CH0123_gc = (0x03<<0)  # Channel 0 > channel 1 > channel 2 > channel 3 */
DMA_CH_ERRINTLVL_OFF_gc = (0x00<<2)  # Interrupt disabled */
DMA_CH_ERRINTLVL_LO_gc = (0x01<<2)  # Low level */
DMA_CH_ERRINTLVL_MED_gc = (0x02<<2)  # Medium level */
DMA_CH_ERRINTLVL_HI_gc = (0x03<<2)  # High level */
DMA_CH_TRNINTLVL_OFF_gc = (0x00<<0)  # Interrupt disabled */
DMA_CH_TRNINTLVL_LO_gc = (0x01<<0)  # Low level */
DMA_CH_TRNINTLVL_MED_gc = (0x02<<0)  # Medium level */
DMA_CH_TRNINTLVL_HI_gc = (0x03<<0)  # High level */
EVSYS_QDIRM_00_gc = (0x00<<5)  # QDPH0 = 0, QDPH90 = 0 */
EVSYS_QDIRM_01_gc = (0x01<<5)  # QDPH0 = 0, QDPH90 = 1 */
EVSYS_QDIRM_10_gc = (0x02<<5)  # QDPH0 = 1, QDPH90 = 0 */
EVSYS_QDIRM_11_gc = (0x03<<5)  # QDPH0 = 1, QDPH90 = 1 */
EVSYS_DIGFILT_1SAMPLE_gc = (0x00<<0)  # 1 SAMPLE */
EVSYS_DIGFILT_2SAMPLES_gc = (0x01<<0)  # 2 SAMPLES */
EVSYS_DIGFILT_3SAMPLES_gc = (0x02<<0)  # 3 SAMPLES */
EVSYS_DIGFILT_4SAMPLES_gc = (0x03<<0)  # 4 SAMPLES */
EVSYS_DIGFILT_5SAMPLES_gc = (0x04<<0)  # 5 SAMPLES */
EVSYS_DIGFILT_6SAMPLES_gc = (0x05<<0)  # 6 SAMPLES */
EVSYS_DIGFILT_7SAMPLES_gc = (0x06<<0)  # 7 SAMPLES */
EVSYS_DIGFILT_8SAMPLES_gc = (0x07<<0)  # 8 SAMPLES */
EVSYS_CHMUX_OFF_gc = (0x00<<0)  # Off */
EVSYS_CHMUX_RTC_OVF_gc = (0x08<<0)  # RTC Overflow */
EVSYS_CHMUX_RTC_CMP_gc = (0x09<<0)  # RTC Compare Match */
EVSYS_CHMUX_USB_gc = (0x0A<<0)  # USB Setup, SOF, CRC error and UNF/OVF */
EVSYS_CHMUX_ACA_CH0_gc = (0x10<<0)  # Analog Comparator A Channel 0 */
EVSYS_CHMUX_ACA_CH1_gc = (0x11<<0)  # Analog Comparator A Channel 1 */
EVSYS_CHMUX_ACA_WIN_gc = (0x12<<0)  # Analog Comparator A Window */
EVSYS_CHMUX_ACB_CH0_gc = (0x13<<0)  # Analog Comparator B Channel 0 */
EVSYS_CHMUX_ACB_CH1_gc = (0x14<<0)  # Analog Comparator B Channel 1 */
EVSYS_CHMUX_ACB_WIN_gc = (0x15<<0)  # Analog Comparator B Window */
EVSYS_CHMUX_ADCA_CH0_gc = (0x20<<0)  # ADC A Channel 0 */
EVSYS_CHMUX_ADCA_CH1_gc = (0x21<<0)  # ADC A Channel 1 */
EVSYS_CHMUX_ADCA_CH2_gc = (0x22<<0)  # ADC A Channel 2 */
EVSYS_CHMUX_ADCA_CH3_gc = (0x23<<0)  # ADC A Channel 3 */
EVSYS_CHMUX_ADCB_CH0_gc = (0x24<<0)  # ADC B Channel 0 */
EVSYS_CHMUX_ADCB_CH1_gc = (0x25<<0)  # ADC B Channel 1 */
EVSYS_CHMUX_ADCB_CH2_gc = (0x26<<0)  # ADC B Channel 2 */
EVSYS_CHMUX_ADCB_CH3_gc = (0x27<<0)  # ADC B Channel 3 */
EVSYS_CHMUX_PORTA_PIN0_gc = (0x50<<0)  # Port A, Pin0 */
EVSYS_CHMUX_PORTA_PIN1_gc = (0x51<<0)  # Port A, Pin1 */
EVSYS_CHMUX_PORTA_PIN2_gc = (0x52<<0)  # Port A, Pin2 */
EVSYS_CHMUX_PORTA_PIN3_gc = (0x53<<0)  # Port A, Pin3 */
EVSYS_CHMUX_PORTA_PIN4_gc = (0x54<<0)  # Port A, Pin4 */
EVSYS_CHMUX_PORTA_PIN5_gc = (0x55<<0)  # Port A, Pin5 */
EVSYS_CHMUX_PORTA_PIN6_gc = (0x56<<0)  # Port A, Pin6 */
EVSYS_CHMUX_PORTA_PIN7_gc = (0x57<<0)  # Port A, Pin7 */
EVSYS_CHMUX_PORTB_PIN0_gc = (0x58<<0)  # Port B, Pin0 */
EVSYS_CHMUX_PORTB_PIN1_gc = (0x59<<0)  # Port B, Pin1 */
EVSYS_CHMUX_PORTB_PIN2_gc = (0x5A<<0)  # Port B, Pin2 */
EVSYS_CHMUX_PORTB_PIN3_gc = (0x5B<<0)  # Port B, Pin3 */
EVSYS_CHMUX_PORTB_PIN4_gc = (0x5C<<0)  # Port B, Pin4 */
EVSYS_CHMUX_PORTB_PIN5_gc = (0x5D<<0)  # Port B, Pin5 */
EVSYS_CHMUX_PORTB_PIN6_gc = (0x5E<<0)  # Port B, Pin6 */
EVSYS_CHMUX_PORTB_PIN7_gc = (0x5F<<0)  # Port B, Pin7 */
EVSYS_CHMUX_PORTC_PIN0_gc = (0x60<<0)  # Port C, Pin0 */
EVSYS_CHMUX_PORTC_PIN1_gc = (0x61<<0)  # Port C, Pin1 */
EVSYS_CHMUX_PORTC_PIN2_gc = (0x62<<0)  # Port C, Pin2 */
EVSYS_CHMUX_PORTC_PIN3_gc = (0x63<<0)  # Port C, Pin3 */
EVSYS_CHMUX_PORTC_PIN4_gc = (0x64<<0)  # Port C, Pin4 */
EVSYS_CHMUX_PORTC_PIN5_gc = (0x65<<0)  # Port C, Pin5 */
EVSYS_CHMUX_PORTC_PIN6_gc = (0x66<<0)  # Port C, Pin6 */
EVSYS_CHMUX_PORTC_PIN7_gc = (0x67<<0)  # Port C, Pin7 */
EVSYS_CHMUX_PORTD_PIN0_gc = (0x68<<0)  # Port D, Pin0 */
EVSYS_CHMUX_PORTD_PIN1_gc = (0x69<<0)  # Port D, Pin1 */
EVSYS_CHMUX_PORTD_PIN2_gc = (0x6A<<0)  # Port D, Pin2 */
EVSYS_CHMUX_PORTD_PIN3_gc = (0x6B<<0)  # Port D, Pin3 */
EVSYS_CHMUX_PORTD_PIN4_gc = (0x6C<<0)  # Port D, Pin4 */
EVSYS_CHMUX_PORTD_PIN5_gc = (0x6D<<0)  # Port D, Pin5 */
EVSYS_CHMUX_PORTD_PIN6_gc = (0x6E<<0)  # Port D, Pin6 */
EVSYS_CHMUX_PORTD_PIN7_gc = (0x6F<<0)  # Port D, Pin7 */
EVSYS_CHMUX_PORTE_PIN0_gc = (0x70<<0)  # Port E, Pin0 */
EVSYS_CHMUX_PORTE_PIN1_gc = (0x71<<0)  # Port E, Pin1 */
EVSYS_CHMUX_PORTE_PIN2_gc = (0x72<<0)  # Port E, Pin2 */
EVSYS_CHMUX_PORTE_PIN3_gc = (0x73<<0)  # Port E, Pin3 */
EVSYS_CHMUX_PORTE_PIN4_gc = (0x74<<0)  # Port E, Pin4 */
EVSYS_CHMUX_PORTE_PIN5_gc = (0x75<<0)  # Port E, Pin5 */
EVSYS_CHMUX_PORTE_PIN6_gc = (0x76<<0)  # Port E, Pin6 */
EVSYS_CHMUX_PORTE_PIN7_gc = (0x77<<0)  # Port E, Pin7 */
EVSYS_CHMUX_PORTF_PIN0_gc = (0x78<<0)  # Port F, Pin0 */
EVSYS_CHMUX_PORTF_PIN1_gc = (0x79<<0)  # Port F, Pin1 */
EVSYS_CHMUX_PORTF_PIN2_gc = (0x7A<<0)  # Port F, Pin2 */
EVSYS_CHMUX_PORTF_PIN3_gc = (0x7B<<0)  # Port F, Pin3 */
EVSYS_CHMUX_PORTF_PIN4_gc = (0x7C<<0)  # Port F, Pin4 */
EVSYS_CHMUX_PORTF_PIN5_gc = (0x7D<<0)  # Port F, Pin5 */
EVSYS_CHMUX_PORTF_PIN6_gc = (0x7E<<0)  # Port F, Pin6 */
EVSYS_CHMUX_PORTF_PIN7_gc = (0x7F<<0)  # Port F, Pin7 */
EVSYS_CHMUX_PRESCALER_1_gc = (0x80<<0)  # Prescaler, divide by 1 */
EVSYS_CHMUX_PRESCALER_2_gc = (0x81<<0)  # Prescaler, divide by 2 */
EVSYS_CHMUX_PRESCALER_4_gc = (0x82<<0)  # Prescaler, divide by 4 */
EVSYS_CHMUX_PRESCALER_8_gc = (0x83<<0)  # Prescaler, divide by 8 */
EVSYS_CHMUX_PRESCALER_16_gc = (0x84<<0)  # Prescaler, divide by 16 */
EVSYS_CHMUX_PRESCALER_32_gc = (0x85<<0)  # Prescaler, divide by 32 */
EVSYS_CHMUX_PRESCALER_64_gc = (0x86<<0)  # Prescaler, divide by 64 */
EVSYS_CHMUX_PRESCALER_128_gc = (0x87<<0)  # Prescaler, divide by 128 */
EVSYS_CHMUX_PRESCALER_256_gc = (0x88<<0)  # Prescaler, divide by 256 */
EVSYS_CHMUX_PRESCALER_512_gc = (0x89<<0)  # Prescaler, divide by 512 */
EVSYS_CHMUX_PRESCALER_1024_gc = (0x8A<<0)  # Prescaler, divide by 1024 */
EVSYS_CHMUX_PRESCALER_2048_gc = (0x8B<<0)  # Prescaler, divide by 2048 */
EVSYS_CHMUX_PRESCALER_4096_gc = (0x8C<<0)  # Prescaler, divide by 4096 */
EVSYS_CHMUX_PRESCALER_8192_gc = (0x8D<<0)  # Prescaler, divide by 8192 */
EVSYS_CHMUX_PRESCALER_16384_gc = (0x8E<<0)  # Prescaler, divide by 16384 */
EVSYS_CHMUX_PRESCALER_32768_gc = (0x8F<<0)  # Prescaler, divide by 32768 */
EVSYS_CHMUX_TCC0_OVF_gc = (0xC0<<0)  # Timer/Counter C0 Overflow */
EVSYS_CHMUX_TCC0_ERR_gc = (0xC1<<0)  # Timer/Counter C0 Error */
EVSYS_CHMUX_TCC0_CCA_gc = (0xC4<<0)  # Timer/Counter C0 Compare or Capture A */
EVSYS_CHMUX_TCC0_CCB_gc = (0xC5<<0)  # Timer/Counter C0 Compare or Capture B */
EVSYS_CHMUX_TCC0_CCC_gc = (0xC6<<0)  # Timer/Counter C0 Compare or Capture C */
EVSYS_CHMUX_TCC0_CCD_gc = (0xC7<<0)  # Timer/Counter C0 Compare or Capture D */
EVSYS_CHMUX_TCC1_OVF_gc = (0xC8<<0)  # Timer/Counter C1 Overflow */
EVSYS_CHMUX_TCC1_ERR_gc = (0xC9<<0)  # Timer/Counter C1 Error */
EVSYS_CHMUX_TCC1_CCA_gc = (0xCC<<0)  # Timer/Counter C1 Compare or Capture A */
EVSYS_CHMUX_TCC1_CCB_gc = (0xCD<<0)  # Timer/Counter C1 Compare or Capture B */
EVSYS_CHMUX_TCD0_OVF_gc = (0xD0<<0)  # Timer/Counter D0 Overflow */
EVSYS_CHMUX_TCD0_ERR_gc = (0xD1<<0)  # Timer/Counter D0 Error */
EVSYS_CHMUX_TCD0_CCA_gc = (0xD4<<0)  # Timer/Counter D0 Compare or Capture A */
EVSYS_CHMUX_TCD0_CCB_gc = (0xD5<<0)  # Timer/Counter D0 Compare or Capture B */
EVSYS_CHMUX_TCD0_CCC_gc = (0xD6<<0)  # Timer/Counter D0 Compare or Capture C */
EVSYS_CHMUX_TCD0_CCD_gc = (0xD7<<0)  # Timer/Counter D0 Compare or Capture D */
EVSYS_CHMUX_TCD1_OVF_gc = (0xD8<<0)  # Timer/Counter D1 Overflow */
EVSYS_CHMUX_TCD1_ERR_gc = (0xD9<<0)  # Timer/Counter D1 Error */
EVSYS_CHMUX_TCD1_CCA_gc = (0xDC<<0)  # Timer/Counter D1 Compare or Capture A */
EVSYS_CHMUX_TCD1_CCB_gc = (0xDD<<0)  # Timer/Counter D1 Compare or Capture B */
EVSYS_CHMUX_TCE0_OVF_gc = (0xE0<<0)  # Timer/Counter E0 Overflow */
EVSYS_CHMUX_TCE0_ERR_gc = (0xE1<<0)  # Timer/Counter E0 Error */
EVSYS_CHMUX_TCE0_CCA_gc = (0xE4<<0)  # Timer/Counter E0 Compare or Capture A */
EVSYS_CHMUX_TCE0_CCB_gc = (0xE5<<0)  # Timer/Counter E0 Compare or Capture B */
EVSYS_CHMUX_TCE0_CCC_gc = (0xE6<<0)  # Timer/Counter E0 Compare or Capture C */
EVSYS_CHMUX_TCE0_CCD_gc = (0xE7<<0)  # Timer/Counter E0 Compare or Capture D */
EVSYS_CHMUX_TCE1_OVF_gc = (0xE8<<0)  # Timer/Counter E1 Overflow */
EVSYS_CHMUX_TCE1_ERR_gc = (0xE9<<0)  # Timer/Counter E1 Error */
EVSYS_CHMUX_TCE1_CCA_gc = (0xEC<<0)  # Timer/Counter E1 Compare or Capture A */
EVSYS_CHMUX_TCE1_CCB_gc = (0xED<<0)  # Timer/Counter E1 Compare or Capture B */
EVSYS_CHMUX_TCF0_OVF_gc = (0xF0<<0)  # Timer/Counter F0 Overflow */
EVSYS_CHMUX_TCF0_ERR_gc = (0xF1<<0)  # Timer/Counter F0 Error */
EVSYS_CHMUX_TCF0_CCA_gc = (0xF4<<0)  # Timer/Counter F0 Compare or Capture A */
EVSYS_CHMUX_TCF0_CCB_gc = (0xF5<<0)  # Timer/Counter F0 Compare or Capture B */
EVSYS_CHMUX_TCF0_CCC_gc = (0xF6<<0)  # Timer/Counter F0 Compare or Capture C */
EVSYS_CHMUX_TCF0_CCD_gc = (0xF7<<0)  # Timer/Counter F0 Compare or Capture D */
EVSYS_CHMUX_TCF1_OVF_gc = (0xF8<<0)  # Timer/Counter F1 Overflow */
EVSYS_CHMUX_TCF1_ERR_gc = (0xF9<<0)  # Timer/Counter F1 Error */
EVSYS_CHMUX_TCF1_CCA_gc = (0xFC<<0)  # Timer/Counter F1 Compare or Capture A */
EVSYS_CHMUX_TCF1_CCB_gc = (0xFD<<0)  # Timer/Counter F1 Compare or Capture B */
NVM_CMD_NO_OPERATION_gc = (0x00<<0)  # Noop/Ordinary LPM */
NVM_CMD_READ_USER_SIG_ROW_gc = (0x01<<0)  # Read user signature row */
NVM_CMD_READ_CALIB_ROW_gc = (0x02<<0)  # Read calibration row */
NVM_CMD_READ_EEPROM_gc = (0x06<<0)  # Read EEPROM */
NVM_CMD_READ_FUSES_gc = (0x07<<0)  # Read fuse byte */
NVM_CMD_WRITE_LOCK_BITS_gc = (0x08<<0)  # Write lock bits */
NVM_CMD_ERASE_USER_SIG_ROW_gc = (0x18<<0)  # Erase user signature row */
NVM_CMD_WRITE_USER_SIG_ROW_gc = (0x1A<<0)  # Write user signature row */
NVM_CMD_ERASE_APP_gc = (0x20<<0)  # Erase Application Section */
NVM_CMD_ERASE_APP_PAGE_gc = (0x22<<0)  # Erase Application Section page */
NVM_CMD_LOAD_FLASH_BUFFER_gc = (0x23<<0)  # Load Flash page buffer */
NVM_CMD_WRITE_APP_PAGE_gc = (0x24<<0)  # Write Application Section page */
NVM_CMD_ERASE_WRITE_APP_PAGE_gc = (0x25<<0)  # Erase-and-write Application Section page */
NVM_CMD_ERASE_FLASH_BUFFER_gc = (0x26<<0)  # Erase/flush Flash page buffer */
NVM_CMD_ERASE_BOOT_PAGE_gc = (0x2A<<0)  # Erase Boot Section page */
NVM_CMD_ERASE_FLASH_PAGE_gc = (0x2B<<0)  # Erase Flash Page */
NVM_CMD_WRITE_BOOT_PAGE_gc = (0x2C<<0)  # Write Boot Section page */
NVM_CMD_ERASE_WRITE_BOOT_PAGE_gc = (0x2D<<0)  # Erase-and-write Boot Section page */
NVM_CMD_WRITE_FLASH_PAGE_gc = (0x2E<<0)  # Write Flash Page */
NVM_CMD_ERASE_WRITE_FLASH_PAGE_gc = (0x2F<<0)  # Erase-and-write Flash Page */
NVM_CMD_ERASE_EEPROM_gc = (0x30<<0)  # Erase EEPROM */
NVM_CMD_ERASE_EEPROM_PAGE_gc = (0x32<<0)  # Erase EEPROM page */
NVM_CMD_LOAD_EEPROM_BUFFER_gc = (0x33<<0)  # Load EEPROM page buffer */
NVM_CMD_WRITE_EEPROM_PAGE_gc = (0x34<<0)  # Write EEPROM page */
NVM_CMD_ERASE_WRITE_EEPROM_PAGE_gc = (0x35<<0)  # Erase-and-write EEPROM page */
NVM_CMD_ERASE_EEPROM_BUFFER_gc = (0x36<<0)  # Erase/flush EEPROM page buffer */
NVM_CMD_APP_CRC_gc = (0x38<<0)  # Application section CRC */
NVM_CMD_BOOT_CRC_gc = (0x39<<0)  #  Boot Section CRC */
NVM_CMD_FLASH_RANGE_CRC_gc = (0x3A<<0)  # Flash Range CRC */
NVM_CMD_CHIP_ERASE_gc = (0x40<<0)  # Erase Chip */
NVM_CMD_READ_NVM_gc = (0x43<<0)  # Read NVM */
NVM_CMD_WRITE_FUSE_gc = (0x4C<<0)  # Write Fuse byte */
NVM_CMD_ERASE_BOOT_gc = (0x68<<0)  # Erase Boot Section */
NVM_CMD_FLASH_CRC_gc = (0x78<<0)  # Flash CRC */
NVM_SPMLVL_OFF_gc = (0x00<<2)  # Interrupt disabled */
NVM_SPMLVL_LO_gc = (0x01<<2)  # Low level */
NVM_SPMLVL_MED_gc = (0x02<<2)  # Medium level */
NVM_SPMLVL_HI_gc = (0x03<<2)  # High level */
NVM_EELVL_OFF_gc = (0x00<<0)  # Interrupt disabled */
NVM_EELVL_LO_gc = (0x01<<0)  # Low level */
NVM_EELVL_MED_gc = (0x02<<0)  # Medium level */
NVM_EELVL_HI_gc = (0x03<<0)  # High level */
NVM_BLBB_RWLOCK_gc = (0x00<<6)  # Read and write not allowed */
NVM_BLBB_RLOCK_gc = (0x01<<6)  # Read not allowed */
NVM_BLBB_WLOCK_gc = (0x02<<6)  # Write not allowed */
NVM_BLBB_NOLOCK_gc = (0x03<<6)  # No locks */
NVM_BLBA_RWLOCK_gc = (0x00<<4)  # Read and write not allowed */
NVM_BLBA_RLOCK_gc = (0x01<<4)  # Read not allowed */
NVM_BLBA_WLOCK_gc = (0x02<<4)  # Write not allowed */
NVM_BLBA_NOLOCK_gc = (0x03<<4)  # No locks */
NVM_BLBAT_RWLOCK_gc = (0x00<<2)  # Read and write not allowed */
NVM_BLBAT_RLOCK_gc = (0x01<<2)  # Read not allowed */
NVM_BLBAT_WLOCK_gc = (0x02<<2)  # Write not allowed */
NVM_BLBAT_NOLOCK_gc = (0x03<<2)  # No locks */
NVM_LB_RWLOCK_gc = (0x00<<0)  # Read and write not allowed */
NVM_LB_WLOCK_gc = (0x02<<0)  # Write not allowed */
NVM_LB_NOLOCK_gc = (0x03<<0)  # No locks */
ADC_CH_MUXPOS_PIN0_gc = (0x00<<3)  # Input pin 0 */
ADC_CH_MUXPOS_PIN1_gc = (0x01<<3)  # Input pin 1 */
ADC_CH_MUXPOS_PIN2_gc = (0x02<<3)  # Input pin 2 */
ADC_CH_MUXPOS_PIN3_gc = (0x03<<3)  # Input pin 3 */
ADC_CH_MUXPOS_PIN4_gc = (0x04<<3)  # Input pin 4 */
ADC_CH_MUXPOS_PIN5_gc = (0x05<<3)  # Input pin 5 */
ADC_CH_MUXPOS_PIN6_gc = (0x06<<3)  # Input pin 6 */
ADC_CH_MUXPOS_PIN7_gc = (0x07<<3)  # Input pin 7 */
ADC_CH_MUXPOS_PIN8_gc = (0x08<<3)  # Input pin 8 */
ADC_CH_MUXPOS_PIN9_gc = (0x09<<3)  # Input pin 9 */
ADC_CH_MUXPOS_PIN10_gc = (0x0A<<3)  # Input pin 10 */
ADC_CH_MUXPOS_PIN11_gc = (0x0B<<3)  # Input pin 11 */
ADC_CH_MUXPOS_PIN12_gc = (0x0C<<3)  # Input pin 12 */
ADC_CH_MUXPOS_PIN13_gc = (0x0D<<3)  # Input pin 13 */
ADC_CH_MUXPOS_PIN14_gc = (0x0E<<3)  # Input pin 14 */
ADC_CH_MUXPOS_PIN15_gc = (0x0F<<3)  # Input pin 15 */
ADC_CH_MUXINT_TEMP_gc = (0x00<<3)  # Temperature Reference */
ADC_CH_MUXINT_BANDGAP_gc = (0x01<<3)  # Bandgap Reference */
ADC_CH_MUXINT_SCALEDVCC_gc = (0x02<<3)  # 1/10 scaled VCC */
ADC_CH_MUXINT_DAC_gc = (0x03<<3)  # DAC output */
ADC_CH_MUXNEG_PIN0_gc = (0x00<<0)  # Input pin 0 */
ADC_CH_MUXNEG_PIN1_gc = (0x01<<0)  # Input pin 1 */
ADC_CH_MUXNEG_PIN2_gc = (0x02<<0)  # Input pin 2 */
ADC_CH_MUXNEG_PIN3_gc = (0x03<<0)  # Input pin 3 */
ADC_CH_MUXNEG_PIN4_gc = (0x00<<0)  # Input pin 4 */
ADC_CH_MUXNEG_PIN5_gc = (0x01<<0)  # Input pin 5 */
ADC_CH_MUXNEG_PIN6_gc = (0x02<<0)  # Input pin 6 */
ADC_CH_MUXNEG_PIN7_gc = (0x03<<0)  # Input pin 7 */
ADC_CH_INPUTMODE_INTERNAL_gc = (0x00<<0)  # Internal inputs, no gain */
ADC_CH_INPUTMODE_SINGLEENDED_gc = (0x01<<0)  # Single-ended input, no gain */
ADC_CH_INPUTMODE_DIFF_gc = (0x02<<0)  # Differential input, no gain */
ADC_CH_INPUTMODE_DIFFWGAIN_gc = (0x03<<0)  # Differential input, with gain */
ADC_CH_GAIN_1X_gc = (0x00<<2)  # 1x gain */
ADC_CH_GAIN_2X_gc = (0x01<<2)  # 2x gain */
ADC_CH_GAIN_4X_gc = (0x02<<2)  # 4x gain */
ADC_CH_GAIN_8X_gc = (0x03<<2)  # 8x gain */
ADC_CH_GAIN_16X_gc = (0x04<<2)  # 16x gain */
ADC_CH_GAIN_32X_gc = (0x05<<2)  # 32x gain */
ADC_CH_GAIN_64X_gc = (0x06<<2)  # 64x gain */
ADC_CH_GAIN_DIV2_gc = (0x07<<2)  # x/2 gain */
ADC_RESOLUTION_12BIT_gc = (0x00<<1)  # 12-bit right-adjusted result */
ADC_RESOLUTION_8BIT_gc = (0x02<<1)  # 8-bit right-adjusted result */
ADC_RESOLUTION_LEFT12BIT_gc = (0x03<<1)  # 12-bit left-adjusted result */
ADC_CURRLIMIT_NO_gc = (0x00<<5)  # No Current Reduction */
ADC_CURRLIMIT_SMALL_gc = (0x01<<5)  # 10% current reduction */
ADC_CURRLIMIT_MEDIUM_gc = (0x02<<5)  # 20% current reduction */
ADC_CURRLIMIT_LARGE_gc = (0x03<<5)  # 30% current reduction */
ADC_REFSEL_INT1V_gc = (0x00<<4)  # Internal 1V */
ADC_REFSEL_VCC_gc = (0x01<<4)  # Internal VCC / 1.6 */
ADC_REFSEL_AREFA_gc = (0x02<<4)  # External reference on PORT A */
ADC_REFSEL_AREFB_gc = (0x03<<4)  # External reference on PORT B */
ADC_REFSEL_VCCDIV2_gc = (0x04<<4)  # Internal VCC / 2 */
ADC_SWEEP_0_gc = (0x00<<6)  # ADC Channel 0 */
ADC_SWEEP_01_gc = (0x01<<6)  # ADC Channel 0,1 */
ADC_SWEEP_012_gc = (0x02<<6)  # ADC Channel 0,1,2 */
ADC_SWEEP_0123_gc = (0x03<<6)  # ADC Channel 0,1,2,3 */
ADC_EVSEL_0123_gc = (0x00<<3)  # Event Channel 0,1,2,3 */
ADC_EVSEL_1234_gc = (0x01<<3)  # Event Channel 1,2,3,4 */
ADC_EVSEL_2345_gc = (0x02<<3)  # Event Channel 2,3,4,5 */
ADC_EVSEL_3456_gc = (0x03<<3)  # Event Channel 3,4,5,6 */
ADC_EVSEL_4567_gc = (0x04<<3)  # Event Channel 4,5,6,7 */
ADC_EVSEL_567_gc = (0x05<<3)  # Event Channel 5,6,7 */
ADC_EVSEL_67_gc = (0x06<<3)  # Event Channel 6,7 */
ADC_EVSEL_7_gc = (0x07<<3)  # Event Channel 7 */
ADC_EVACT_NONE_gc = (0x00<<0)  # No event action */
ADC_EVACT_CH0_gc = (0x01<<0)  # First event triggers channel 0 */
ADC_EVACT_CH01_gc = (0x02<<0)  # First two events trigger channel 0,1 */
ADC_EVACT_CH012_gc = (0x03<<0)  # First three events trigger channel 0,1,2 */
ADC_EVACT_CH0123_gc = (0x04<<0)  # Events trigger channel 0,1,2,3 */
ADC_EVACT_SWEEP_gc = (0x05<<0)  # First event triggers sweep */
ADC_EVACT_SYNCHSWEEP_gc = (0x06<<0)  # First event triggers synchronized sweep */
ADC_CH_INTMODE_COMPLETE_gc = (0x00<<2)  # Interrupt on conversion complete */
ADC_CH_INTMODE_BELOW_gc = (0x01<<2)  # Interrupt on result below compare value */
ADC_CH_INTMODE_ABOVE_gc = (0x03<<2)  # Interrupt on result above compare value */
ADC_CH_INTLVL_OFF_gc = (0x00<<0)  # Interrupt disabled */
ADC_CH_INTLVL_LO_gc = (0x01<<0)  # Low level */
ADC_CH_INTLVL_MED_gc = (0x02<<0)  # Medium level */
ADC_CH_INTLVL_HI_gc = (0x03<<0)  # High level */
ADC_DMASEL_OFF_gc = (0x00<<6)  # Combined DMA request OFF */
ADC_DMASEL_CH01_gc = (0x01<<6)  # ADC Channel 0 or 1 */
ADC_DMASEL_CH012_gc = (0x02<<6)  # ADC Channel 0 or 1 or 2 */
ADC_DMASEL_CH0123_gc = (0x03<<6)  # ADC Channel 0 or 1 or 2 or 3 */
ADC_PRESCALER_DIV4_gc = (0x00<<0)  # Divide clock by 4 */
ADC_PRESCALER_DIV8_gc = (0x01<<0)  # Divide clock by 8 */
ADC_PRESCALER_DIV16_gc = (0x02<<0)  # Divide clock by 16 */
ADC_PRESCALER_DIV32_gc = (0x03<<0)  # Divide clock by 32 */
ADC_PRESCALER_DIV64_gc = (0x04<<0)  # Divide clock by 64 */
ADC_PRESCALER_DIV128_gc = (0x05<<0)  # Divide clock by 128 */
ADC_PRESCALER_DIV256_gc = (0x06<<0)  # Divide clock by 256 */
ADC_PRESCALER_DIV512_gc = (0x07<<0)  # Divide clock by 512 */
DAC_CHSEL_SINGLE_gc = (0x00<<5)  # Single channel operation (Channel 0 only) */
DAC_CHSEL_SINGLE1_gc = (0x01<<5)  # Single channel operation (Channel 1 only) */
DAC_CHSEL_DUAL_gc = (0x02<<5)  # Dual channel operation (Channel 0 and channel 1) */
DAC_REFSEL_INT1V_gc = (0x00<<3)  # Internal 1V  */
DAC_REFSEL_AVCC_gc = (0x01<<3)  # Analog supply voltage */
DAC_REFSEL_AREFA_gc = (0x02<<3)  # External reference on AREF on PORTA */
DAC_REFSEL_AREFB_gc = (0x03<<3)  # External reference on AREF on PORTB */
DAC_EVSEL_0_gc = (0x00<<0)  # Event Channel 0 */
DAC_EVSEL_1_gc = (0x01<<0)  # Event Channel 1 */
DAC_EVSEL_2_gc = (0x02<<0)  # Event Channel 2 */
DAC_EVSEL_3_gc = (0x03<<0)  # Event Channel 3 */
DAC_EVSEL_4_gc = (0x04<<0)  # Event Channel 4 */
DAC_EVSEL_5_gc = (0x05<<0)  # Event Channel 5 */
DAC_EVSEL_6_gc = (0x06<<0)  # Event Channel 6 */
DAC_EVSEL_7_gc = (0x07<<0)  # Event Channel 7 */
DAC_CONINTVAL_1CLK_gc = (0x00<<4)  # 1 CLK / 2 CLK in S/H mode */
DAC_CONINTVAL_2CLK_gc = (0x01<<4)  # 2 CLK / 3 CLK in S/H mode */
DAC_CONINTVAL_4CLK_gc = (0x02<<4)  # 4 CLK / 6 CLK in S/H mode */
DAC_CONINTVAL_8CLK_gc = (0x03<<4)  # 8 CLK / 12 CLK in S/H mode */
DAC_CONINTVAL_16CLK_gc = (0x04<<4)  # 16 CLK / 24 CLK in S/H mode */
DAC_CONINTVAL_32CLK_gc = (0x05<<4)  # 32 CLK / 48 CLK in S/H mode */
DAC_CONINTVAL_64CLK_gc = (0x06<<4)  # 64 CLK / 96 CLK in S/H mode */
DAC_CONINTVAL_128CLK_gc = (0x07<<4)  # 128 CLK / 192 CLK in S/H mode */
DAC_REFRESH_16CLK_gc = (0x00<<0)  # 16 CLK */
DAC_REFRESH_32CLK_gc = (0x01<<0)  # 32 CLK */
DAC_REFRESH_64CLK_gc = (0x02<<0)  # 64 CLK */
DAC_REFRESH_128CLK_gc = (0x03<<0)  # 128 CLK */
DAC_REFRESH_256CLK_gc = (0x04<<0)  # 256 CLK */
DAC_REFRESH_512CLK_gc = (0x05<<0)  # 512 CLK */
DAC_REFRESH_1024CLK_gc = (0x06<<0)  # 1024 CLK */
DAC_REFRESH_2048CLK_gc = (0x07<<0)  # 2048 CLK */
DAC_REFRESH_4096CLK_gc = (0x08<<0)  # 4096 CLK */
DAC_REFRESH_8192CLK_gc = (0x09<<0)  # 8192 CLK */
DAC_REFRESH_16384CLK_gc = (0x0A<<0)  # 16384 CLK */
DAC_REFRESH_32768CLK_gc = (0x0B<<0)  # 32768 CLK */
DAC_REFRESH_65536CLK_gc = (0x0C<<0)  # 65536 CLK */
DAC_REFRESH_OFF_gc = (0x0F<<0)  # Auto refresh OFF */
AC_INTMODE_BOTHEDGES_gc = (0x00<<6)  # Interrupt on both edges */
AC_INTMODE_FALLING_gc = (0x02<<6)  # Interrupt on falling edge */
AC_INTMODE_RISING_gc = (0x03<<6)  # Interrupt on rising edge */
AC_INTLVL_OFF_gc = (0x00<<4)  # Interrupt disabled */
AC_INTLVL_LO_gc = (0x01<<4)  # Low level */
AC_INTLVL_MED_gc = (0x02<<4)  # Medium level */
AC_INTLVL_HI_gc = (0x03<<4)  # High level */
AC_HYSMODE_NO_gc = (0x00<<1)  # No hysteresis */
AC_HYSMODE_SMALL_gc = (0x01<<1)  # Small hysteresis */
AC_HYSMODE_LARGE_gc = (0x02<<1)  # Large hysteresis */
AC_MUXPOS_PIN0_gc = (0x00<<3)  # Pin 0 */
AC_MUXPOS_PIN1_gc = (0x01<<3)  # Pin 1 */
AC_MUXPOS_PIN2_gc = (0x02<<3)  # Pin 2 */
AC_MUXPOS_PIN3_gc = (0x03<<3)  # Pin 3 */
AC_MUXPOS_PIN4_gc = (0x04<<3)  # Pin 4 */
AC_MUXPOS_PIN5_gc = (0x05<<3)  # Pin 5 */
AC_MUXPOS_PIN6_gc = (0x06<<3)  # Pin 6 */
AC_MUXPOS_DAC_gc = (0x07<<3)  # DAC output */
AC_MUXNEG_PIN0_gc = (0x00<<0)  # Pin 0 */
AC_MUXNEG_PIN1_gc = (0x01<<0)  # Pin 1 */
AC_MUXNEG_PIN3_gc = (0x02<<0)  # Pin 3 */
AC_MUXNEG_PIN5_gc = (0x03<<0)  # Pin 5 */
AC_MUXNEG_PIN7_gc = (0x04<<0)  # Pin 7 */
AC_MUXNEG_DAC_gc = (0x05<<0)  # DAC output */
AC_MUXNEG_BANDGAP_gc = (0x06<<0)  # Bandgap Reference */
AC_MUXNEG_SCALER_gc = (0x07<<0)  # Internal voltage scaler */
AC_WINTMODE_ABOVE_gc = (0x00<<2)  # Interrupt on above window */
AC_WINTMODE_INSIDE_gc = (0x01<<2)  # Interrupt on inside window */
AC_WINTMODE_BELOW_gc = (0x02<<2)  # Interrupt on below window */
AC_WINTMODE_OUTSIDE_gc = (0x03<<2)  # Interrupt on outside window */
AC_WINTLVL_OFF_gc = (0x00<<0)  # Interrupt disabled */
AC_WINTLVL_LO_gc = (0x01<<0)  # Low priority */
AC_WINTLVL_MED_gc = (0x02<<0)  # Medium priority */
AC_WINTLVL_HI_gc = (0x03<<0)  # High priority */
AC_WSTATE_ABOVE_gc = (0x00<<6)  # Signal above window */
AC_WSTATE_INSIDE_gc = (0x01<<6)  # Signal inside window */
AC_WSTATE_BELOW_gc = (0x02<<6)  # Signal below window */
RTC_PRESCALER_OFF_gc = (0x00<<0)  # RTC Off */
RTC_PRESCALER_DIV1_gc = (0x01<<0)  # RTC Clock */
RTC_PRESCALER_DIV2_gc = (0x02<<0)  # RTC Clock / 2 */
RTC_PRESCALER_DIV8_gc = (0x03<<0)  # RTC Clock / 8 */
RTC_PRESCALER_DIV16_gc = (0x04<<0)  # RTC Clock / 16 */
RTC_PRESCALER_DIV64_gc = (0x05<<0)  # RTC Clock / 64 */
RTC_PRESCALER_DIV256_gc = (0x06<<0)  # RTC Clock / 256 */
RTC_PRESCALER_DIV1024_gc = (0x07<<0)  # RTC Clock / 1024 */
RTC_COMPINTLVL_OFF_gc = (0x00<<2)  # Interrupt Disabled */
RTC_COMPINTLVL_LO_gc = (0x01<<2)  # Low Level */
RTC_COMPINTLVL_MED_gc = (0x02<<2)  # Medium Level */
RTC_COMPINTLVL_HI_gc = (0x03<<2)  # High Level */
RTC_OVFINTLVL_OFF_gc = (0x00<<0)  # Interrupt Disabled */
RTC_OVFINTLVL_LO_gc = (0x01<<0)  # Low Level */
RTC_OVFINTLVL_MED_gc = (0x02<<0)  # Medium Level */
RTC_OVFINTLVL_HI_gc = (0x03<<0)  # High Level */
TWI_SDAHOLD_OFF_gc = (0x00<<1)  # SDA Hold Time off */
TWI_SDAHOLD_50NS_gc = (0x01<<1)  # SDA Hold Time 50 ns */
TWI_SDAHOLD_300NS_gc = (0x02<<1)  # SDA Hold Time 300 ns */
TWI_SDAHOLD_400NS_gc = (0x03<<1)  # SDA Hold Time 400 ns */
TWI_MASTER_INTLVL_OFF_gc = (0x00<<6)  # Interrupt Disabled */
TWI_MASTER_INTLVL_LO_gc = (0x01<<6)  # Low Level */
TWI_MASTER_INTLVL_MED_gc = (0x02<<6)  # Medium Level */
TWI_MASTER_INTLVL_HI_gc = (0x03<<6)  # High Level */
TWI_MASTER_TIMEOUT_DISABLED_gc = (0x00<<2)  # Bus Timeout Disabled */
TWI_MASTER_TIMEOUT_50US_gc = (0x01<<2)  # 50 Microseconds */
TWI_MASTER_TIMEOUT_100US_gc = (0x02<<2)  # 100 Microseconds */
TWI_MASTER_TIMEOUT_200US_gc = (0x03<<2)  # 200 Microseconds */
TWI_MASTER_CMD_NOACT_gc = (0x00<<0)  # No Action */
TWI_MASTER_CMD_REPSTART_gc = (0x01<<0)  # Issue Repeated Start Condition */
TWI_MASTER_CMD_RECVTRANS_gc = (0x02<<0)  # Receive or Transmit Data */
TWI_MASTER_CMD_STOP_gc = (0x03<<0)  # Issue Stop Condition */
TWI_MASTER_BUSSTATE_UNKNOWN_gc = (0x00<<0)  # Unknown Bus State */
TWI_MASTER_BUSSTATE_IDLE_gc = (0x01<<0)  # Bus is Idle */
TWI_MASTER_BUSSTATE_OWNER_gc = (0x02<<0)  # This Module Controls The Bus */
TWI_MASTER_BUSSTATE_BUSY_gc = (0x03<<0)  # The Bus is Busy */
TWI_SLAVE_INTLVL_OFF_gc = (0x00<<6)  # Interrupt Disabled */
TWI_SLAVE_INTLVL_LO_gc = (0x01<<6)  # Low Level */
TWI_SLAVE_INTLVL_MED_gc = (0x02<<6)  # Medium Level */
TWI_SLAVE_INTLVL_HI_gc = (0x03<<6)  # High Level */
TWI_SLAVE_CMD_NOACT_gc = (0x00<<0)  # No Action */
TWI_SLAVE_CMD_COMPTRANS_gc = (0x02<<0)  # Used To Complete a Transaction */
TWI_SLAVE_CMD_RESPONSE_gc = (0x03<<0)  # Used in Response to Address/Data Interrupt */
USB_INTLVL_OFF_gc = (0x00<<0)  # Interrupt disabled */
USB_INTLVL_LO_gc = (0x01<<0)  # Low level */
USB_INTLVL_MED_gc = (0x02<<0)  # Medium level */
USB_INTLVL_HI_gc = (0x03<<0)  # High level */
USB_EP_TYPE_DISABLE_gc = (0x00<<6)  # Endpoint Disabled */
USB_EP_TYPE_CONTROL_gc = (0x01<<6)  # Control */
USB_EP_TYPE_BULK_gc = (0x02<<6)  # Bulk/Interrupt */
USB_EP_TYPE_ISOCHRONOUS_gc = (0x03<<6)  # Isochronous */
USB_EP_BUFSIZE_8_gc = (0x00<<0)  # 8 bytes buffer size */
USB_EP_BUFSIZE_16_gc = (0x01<<0)  # 16 bytes buffer size */
USB_EP_BUFSIZE_32_gc = (0x02<<0)  # 32 bytes buffer size */
USB_EP_BUFSIZE_64_gc = (0x03<<0)  # 64 bytes buffer size */
USB_EP_BUFSIZE_128_gc = (0x04<<0)  # 128 bytes buffer size */
USB_EP_BUFSIZE_256_gc = (0x05<<0)  # 256 bytes buffer size */
USB_EP_BUFSIZE_512_gc = (0x06<<0)  # 512 bytes buffer size */
USB_EP_BUFSIZE_1023_gc = (0x07<<0)  # 1023 bytes buffer size */
PORT_INT0LVL_OFF_gc = (0x00<<0)  # Interrupt Disabled */
PORT_INT0LVL_LO_gc = (0x01<<0)  # Low Level */
PORT_INT0LVL_MED_gc = (0x02<<0)  # Medium Level */
PORT_INT0LVL_HI_gc = (0x03<<0)  # High Level */
PORT_INT1LVL_OFF_gc = (0x00<<2)  # Interrupt Disabled */
PORT_INT1LVL_LO_gc = (0x01<<2)  # Low Level */
PORT_INT1LVL_MED_gc = (0x02<<2)  # Medium Level */
PORT_INT1LVL_HI_gc = (0x03<<2)  # High Level */
PORT_OPC_TOTEM_gc = (0x00<<3)  # Totempole */
PORT_OPC_BUSKEEPER_gc = (0x01<<3)  # Totempole w/ Bus keeper on Input and Output */
PORT_OPC_PULLDOWN_gc = (0x02<<3)  # Totempole w/ Pull-down on Input */
PORT_OPC_PULLUP_gc = (0x03<<3)  # Totempole w/ Pull-up on Input */
PORT_OPC_WIREDOR_gc = (0x04<<3)  # Wired OR */
PORT_OPC_WIREDAND_gc = (0x05<<3)  # Wired AND */
PORT_OPC_WIREDORPULL_gc = (0x06<<3)  # Wired OR w/ Pull-down */
PORT_OPC_WIREDANDPULL_gc = (0x07<<3)  # Wired AND w/ Pull-up */
PORT_ISC_BOTHEDGES_gc = (0x00<<0)  # Sense Both Edges */
PORT_ISC_RISING_gc = (0x01<<0)  # Sense Rising Edge */
PORT_ISC_FALLING_gc = (0x02<<0)  # Sense Falling Edge */
PORT_ISC_LEVEL_gc = (0x03<<0)  # Sense Level (Transparent For Events) */
PORT_ISC_INPUT_DISABLE_gc = (0x07<<0)  # Disable Digital Input Buffer */
TC_CLKSEL_OFF_gc = (0x00<<0)  # Timer Off */
TC_CLKSEL_DIV1_gc = (0x01<<0)  # System Clock */
TC_CLKSEL_DIV2_gc = (0x02<<0)  # System Clock / 2 */
TC_CLKSEL_DIV4_gc = (0x03<<0)  # System Clock / 4 */
TC_CLKSEL_DIV8_gc = (0x04<<0)  # System Clock / 8 */
TC_CLKSEL_DIV64_gc = (0x05<<0)  # System Clock / 64 */
TC_CLKSEL_DIV256_gc = (0x06<<0)  # System Clock / 256 */
TC_CLKSEL_DIV1024_gc = (0x07<<0)  # System Clock / 1024 */
TC_CLKSEL_EVCH0_gc = (0x08<<0)  # Event Channel 0 */
TC_CLKSEL_EVCH1_gc = (0x09<<0)  # Event Channel 1 */
TC_CLKSEL_EVCH2_gc = (0x0A<<0)  # Event Channel 2 */
TC_CLKSEL_EVCH3_gc = (0x0B<<0)  # Event Channel 3 */
TC_CLKSEL_EVCH4_gc = (0x0C<<0)  # Event Channel 4 */
TC_CLKSEL_EVCH5_gc = (0x0D<<0)  # Event Channel 5 */
TC_CLKSEL_EVCH6_gc = (0x0E<<0)  # Event Channel 6 */
TC_CLKSEL_EVCH7_gc = (0x0F<<0)  # Event Channel 7 */
TC_WGMODE_NORMAL_gc = (0x00<<0)  # Normal Mode */
TC_WGMODE_FRQ_gc = (0x01<<0)  # Frequency Generation Mode */
TC_WGMODE_SINGLESLOPE_gc = (0x03<<0)  # Single Slope */
TC_WGMODE_SS_gc = (0x03<<0)  # Single Slope */
TC_WGMODE_DSTOP_gc = (0x05<<0)  # Dual Slope, Update on TOP */
TC_WGMODE_DS_T_gc = (0x05<<0)  # Dual Slope, Update on TOP */
TC_WGMODE_DSBOTH_gc = (0x06<<0)  # Dual Slope, Update on both TOP and BOTTOM */
TC_WGMODE_DS_TB_gc = (0x06<<0)  # Dual Slope, Update on both TOP and BOTTOM */
TC_WGMODE_DSBOTTOM_gc = (0x07<<0)  # Dual Slope, Update on BOTTOM */
TC_WGMODE_DS_B_gc = (0x07<<0)  # Dual Slope, Update on BOTTOM */
TC_BYTEM_NORMAL_gc = (0x00<<0)  # 16-bit mode */
TC_BYTEM_BYTEMODE_gc = (0x01<<0)  # Timer/Counter operating in byte mode only */
TC_BYTEM_SPLITMODE_gc = (0x02<<0)  # Timer/Counter split into two 8-bit Counters (TC2) */
TC_EVACT_OFF_gc = (0x00<<5)  # No Event Action */
TC_EVACT_CAPT_gc = (0x01<<5)  # Input Capture */
TC_EVACT_UPDOWN_gc = (0x02<<5)  # Externally Controlled Up/Down Count */
TC_EVACT_QDEC_gc = (0x03<<5)  # Quadrature Decode */
TC_EVACT_RESTART_gc = (0x04<<5)  # Restart */
TC_EVACT_FRQ_gc = (0x05<<5)  # Frequency Capture */
TC_EVACT_PW_gc = (0x06<<5)  # Pulse-width Capture */
TC_EVSEL_OFF_gc = (0x00<<0)  # No Event Source */
TC_EVSEL_CH0_gc = (0x08<<0)  # Event Channel 0 */
TC_EVSEL_CH1_gc = (0x09<<0)  # Event Channel 1 */
TC_EVSEL_CH2_gc = (0x0A<<0)  # Event Channel 2 */
TC_EVSEL_CH3_gc = (0x0B<<0)  # Event Channel 3 */
TC_EVSEL_CH4_gc = (0x0C<<0)  # Event Channel 4 */
TC_EVSEL_CH5_gc = (0x0D<<0)  # Event Channel 5 */
TC_EVSEL_CH6_gc = (0x0E<<0)  # Event Channel 6 */
TC_EVSEL_CH7_gc = (0x0F<<0)  # Event Channel 7 */
TC_ERRINTLVL_OFF_gc = (0x00<<2)  # Interrupt Disabled */
TC_ERRINTLVL_LO_gc = (0x01<<2)  # Low Level */
TC_ERRINTLVL_MED_gc = (0x02<<2)  # Medium Level */
TC_ERRINTLVL_HI_gc = (0x03<<2)  # High Level */
TC_OVFINTLVL_OFF_gc = (0x00<<0)  # Interrupt Disabled */
TC_OVFINTLVL_LO_gc = (0x01<<0)  # Low Level */
TC_OVFINTLVL_MED_gc = (0x02<<0)  # Medium Level */
TC_OVFINTLVL_HI_gc = (0x03<<0)  # High Level */
TC_CCDINTLVL_OFF_gc = (0x00<<6)  # Interrupt Disabled */
TC_CCDINTLVL_LO_gc = (0x01<<6)  # Low Level */
TC_CCDINTLVL_MED_gc = (0x02<<6)  # Medium Level */
TC_CCDINTLVL_HI_gc = (0x03<<6)  # High Level */
TC_CCCINTLVL_OFF_gc = (0x00<<4)  # Interrupt Disabled */
TC_CCCINTLVL_LO_gc = (0x01<<4)  # Low Level */
TC_CCCINTLVL_MED_gc = (0x02<<4)  # Medium Level */
TC_CCCINTLVL_HI_gc = (0x03<<4)  # High Level */
TC_CCBINTLVL_OFF_gc = (0x00<<2)  # Interrupt Disabled */
TC_CCBINTLVL_LO_gc = (0x01<<2)  # Low Level */
TC_CCBINTLVL_MED_gc = (0x02<<2)  # Medium Level */
TC_CCBINTLVL_HI_gc = (0x03<<2)  # High Level */
TC_CCAINTLVL_OFF_gc = (0x00<<0)  # Interrupt Disabled */
TC_CCAINTLVL_LO_gc = (0x01<<0)  # Low Level */
TC_CCAINTLVL_MED_gc = (0x02<<0)  # Medium Level */
TC_CCAINTLVL_HI_gc = (0x03<<0)  # High Level */
TC_CMD_NONE_gc = (0x00<<2)  # No Command */
TC_CMD_UPDATE_gc = (0x01<<2)  # Force Update */
TC_CMD_RESTART_gc = (0x02<<2)  # Force Restart */
TC_CMD_RESET_gc = (0x03<<2)  # Force Hard Reset */
TC2_CLKSEL_OFF_gc = (0x00<<0)  # Timer Off */
TC2_CLKSEL_DIV1_gc = (0x01<<0)  # System Clock */
TC2_CLKSEL_DIV2_gc = (0x02<<0)  # System Clock / 2 */
TC2_CLKSEL_DIV4_gc = (0x03<<0)  # System Clock / 4 */
TC2_CLKSEL_DIV8_gc = (0x04<<0)  # System Clock / 8 */
TC2_CLKSEL_DIV64_gc = (0x05<<0)  # System Clock / 64 */
TC2_CLKSEL_DIV256_gc = (0x06<<0)  # System Clock / 256 */
TC2_CLKSEL_DIV1024_gc = (0x07<<0)  # System Clock / 1024 */
TC2_CLKSEL_EVCH0_gc = (0x08<<0)  # Event Channel 0 */
TC2_CLKSEL_EVCH1_gc = (0x09<<0)  # Event Channel 1 */
TC2_CLKSEL_EVCH2_gc = (0x0A<<0)  # Event Channel 2 */
TC2_CLKSEL_EVCH3_gc = (0x0B<<0)  # Event Channel 3 */
TC2_CLKSEL_EVCH4_gc = (0x0C<<0)  # Event Channel 4 */
TC2_CLKSEL_EVCH5_gc = (0x0D<<0)  # Event Channel 5 */
TC2_CLKSEL_EVCH6_gc = (0x0E<<0)  # Event Channel 6 */
TC2_CLKSEL_EVCH7_gc = (0x0F<<0)  # Event Channel 7 */
TC2_BYTEM_NORMAL_gc = (0x00<<0)  # 16-bit mode */
TC2_BYTEM_BYTEMODE_gc = (0x01<<0)  # Timer/Counter operating in byte mode only (TC2) */
TC2_BYTEM_SPLITMODE_gc = (0x02<<0)  # Timer/Counter split into two 8-bit Counters */
TC2_HUNFINTLVL_OFF_gc = (0x00<<2)  # Interrupt Disabled */
TC2_HUNFINTLVL_LO_gc = (0x01<<2)  # Low Level */
TC2_HUNFINTLVL_MED_gc = (0x02<<2)  # Medium Level */
TC2_HUNFINTLVL_HI_gc = (0x03<<2)  # High Level */
TC2_LUNFINTLVL_OFF_gc = (0x00<<0)  # Interrupt Disabled */
TC2_LUNFINTLVL_LO_gc = (0x01<<0)  # Low Level */
TC2_LUNFINTLVL_MED_gc = (0x02<<0)  # Medium Level */
TC2_LUNFINTLVL_HI_gc = (0x03<<0)  # High Level */
TC2_LCMPDINTLVL_OFF_gc = (0x00<<6)  # Interrupt Disabled */
TC2_LCMPDINTLVL_LO_gc = (0x01<<6)  # Low Level */
TC2_LCMPDINTLVL_MED_gc = (0x02<<6)  # Medium Level */
TC2_LCMPDINTLVL_HI_gc = (0x03<<6)  # High Level */
TC2_LCMPCINTLVL_OFF_gc = (0x00<<4)  # Interrupt Disabled */
TC2_LCMPCINTLVL_LO_gc = (0x01<<4)  # Low Level */
TC2_LCMPCINTLVL_MED_gc = (0x02<<4)  # Medium Level */
TC2_LCMPCINTLVL_HI_gc = (0x03<<4)  # High Level */
TC2_LCMPBINTLVL_OFF_gc = (0x00<<2)  # Interrupt Disabled */
TC2_LCMPBINTLVL_LO_gc = (0x01<<2)  # Low Level */
TC2_LCMPBINTLVL_MED_gc = (0x02<<2)  # Medium Level */
TC2_LCMPBINTLVL_HI_gc = (0x03<<2)  # High Level */
TC2_LCMPAINTLVL_OFF_gc = (0x00<<0)  # Interrupt Disabled */
TC2_LCMPAINTLVL_LO_gc = (0x01<<0)  # Low Level */
TC2_LCMPAINTLVL_MED_gc = (0x02<<0)  # Medium Level */
TC2_LCMPAINTLVL_HI_gc = (0x03<<0)  # High Level */
TC2_CMD_NONE_gc = (0x00<<2)  # No Command */
TC2_CMD_RESTART_gc = (0x02<<2)  # Force Restart */
TC2_CMD_RESET_gc = (0x03<<2)  # Force Hard Reset */
TC2_CMDEN_LOW_gc = (0x01<<0)  # Low Byte Timer/Counter */
TC2_CMDEN_HIGH_gc = (0x02<<0)  # High Byte Timer/Counter */
TC2_CMDEN_BOTH_gc = (0x03<<0)  # Both Low Byte and High Byte Timer/Counters */
AWEX_FDACT_NONE_gc = (0x00<<0)  # No Fault Protection */
AWEX_FDACT_CLEAROE_gc = (0x01<<0)  # Clear Output Enable Bits */
AWEX_FDACT_CLEARDIR_gc = (0x03<<0)  # Clear I/O Port Direction Bits */
HIRES_HREN_NONE_gc = (0x00<<0)  # No Fault Protection */
HIRES_HREN_TC0_gc = (0x01<<0)  # Enable High Resolution on Timer/Counter 0 */
HIRES_HREN_TC1_gc = (0x02<<0)  # Enable High Resolution on Timer/Counter 1 */
HIRES_HREN_BOTH_gc = (0x03<<0)  # Enable High Resolution both Timer/Counters */
USART_RXCINTLVL_OFF_gc = (0x00<<4)  # Interrupt Disabled */
USART_RXCINTLVL_LO_gc = (0x01<<4)  # Low Level */
USART_RXCINTLVL_MED_gc = (0x02<<4)  # Medium Level */
USART_RXCINTLVL_HI_gc = (0x03<<4)  # High Level */
USART_TXCINTLVL_OFF_gc = (0x00<<2)  # Interrupt Disabled */
USART_TXCINTLVL_LO_gc = (0x01<<2)  # Low Level */
USART_TXCINTLVL_MED_gc = (0x02<<2)  # Medium Level */
USART_TXCINTLVL_HI_gc = (0x03<<2)  # High Level */
USART_DREINTLVL_OFF_gc = (0x00<<0)  # Interrupt Disabled */
USART_DREINTLVL_LO_gc = (0x01<<0)  # Low Level */
USART_DREINTLVL_MED_gc = (0x02<<0)  # Medium Level */
USART_DREINTLVL_HI_gc = (0x03<<0)  # High Level */
USART_CHSIZE_5BIT_gc = (0x00<<0)  # Character size: 5 bit */
USART_CHSIZE_6BIT_gc = (0x01<<0)  # Character size: 6 bit */
USART_CHSIZE_7BIT_gc = (0x02<<0)  # Character size: 7 bit */
USART_CHSIZE_8BIT_gc = (0x03<<0)  # Character size: 8 bit */
USART_CHSIZE_9BIT_gc = (0x07<<0)  # Character size: 9 bit */
USART_CMODE_ASYNCHRONOUS_gc = (0x00<<6)  # Asynchronous Mode */
USART_CMODE_SYNCHRONOUS_gc = (0x01<<6)  # Synchronous Mode */
USART_CMODE_IRDA_gc = (0x02<<6)  # IrDA Mode */
USART_CMODE_MSPI_gc = (0x03<<6)  # Master SPI Mode */
USART_PMODE_DISABLED_gc = (0x00<<4)  # No Parity */
USART_PMODE_EVEN_gc = (0x02<<4)  # Even Parity */
USART_PMODE_ODD_gc = (0x03<<4)  # Odd Parity */
SPI_MODE_0_gc = (0x00<<2)  # SPI Mode 0 */
SPI_MODE_1_gc = (0x01<<2)  # SPI Mode 1 */
SPI_MODE_2_gc = (0x02<<2)  # SPI Mode 2 */
SPI_MODE_3_gc = (0x03<<2)  # SPI Mode 3 */
SPI_PRESCALER_DIV4_gc = (0x00<<0)  # System Clock / 4 */
SPI_PRESCALER_DIV16_gc = (0x01<<0)  # System Clock / 16 */
SPI_PRESCALER_DIV64_gc = (0x02<<0)  # System Clock / 64 */
SPI_PRESCALER_DIV128_gc = (0x03<<0)  # System Clock / 128 */
SPI_INTLVL_OFF_gc = (0x00<<0)  # Interrupt Disabled */
SPI_INTLVL_LO_gc = (0x01<<0)  # Low Level */
SPI_INTLVL_MED_gc = (0x02<<0)  # Medium Level */
SPI_INTLVL_HI_gc = (0x03<<0)  # High Level */
IRDA_EVSEL_OFF_gc = (0x00<<0)  # No Event Source */
IRDA_EVSEL_0_gc = (0x08<<0)  # Event Channel 0 */
IRDA_EVSEL_1_gc = (0x09<<0)  # Event Channel 1 */
IRDA_EVSEL_2_gc = (0x0A<<0)  # Event Channel 2 */
IRDA_EVSEL_3_gc = (0x0B<<0)  # Event Channel 3 */
IRDA_EVSEL_4_gc = (0x0C<<0)  # Event Channel 4 */
IRDA_EVSEL_5_gc = (0x0D<<0)  # Event Channel 5 */
IRDA_EVSEL_6_gc = (0x0E<<0)  # Event Channel 6 */
IRDA_EVSEL_7_gc = (0x0F<<0)  # Event Channel 7 */
BOOTRST_BOOTLDR_gc = (0x00<<6)  # Boot Loader Reset */
BOOTRST_APPLICATION_gc = (0x01<<6)  # Application Reset */
TOSCSEL_ALTERNATE_gc = (0x00<<5)  # TOSC1 / TOSC2 on separate pins */
TOSCSEL_XTAL_gc = (0x01<<5)  # TOSC1 / TOSC2 shared with XTAL1 / XTAL2 */
BOD_SAMPLED_gc = (0x01<<0)  # BOD enabled in sampled mode */
BOD_CONTINUOUS_gc = (0x02<<0)  # BOD enabled continuously */
BOD_DISABLED_gc = (0x03<<0)  # BOD Disabled */
BODACT_SAMPLED_gc = (0x01<<4)  # BOD enabled in sampled mode */
BODACT_CONTINUOUS_gc = (0x02<<4)  # BOD enabled continuously */
BODACT_DISABLED_gc = (0x03<<4)  # BOD Disabled */
WD_8CLK_gc = (0x00<<4)  # 8 cycles (8ms @ 3.3V) */
WD_16CLK_gc = (0x01<<4)  # 16 cycles (16ms @ 3.3V) */
WD_32CLK_gc = (0x02<<4)  # 32 cycles (32ms @ 3.3V) */
WD_64CLK_gc = (0x03<<4)  # 64 cycles (64ms @ 3.3V) */
WD_128CLK_gc = (0x04<<4)  # 128 cycles (0.125s @ 3.3V) */
WD_256CLK_gc = (0x05<<4)  # 256 cycles (0.25s @ 3.3V) */
WD_512CLK_gc = (0x06<<4)  # 512 cycles (0.5s @ 3.3V) */
WD_1KCLK_gc = (0x07<<4)  # 1K cycles (1s @ 3.3V) */
WD_2KCLK_gc = (0x08<<4)  # 2K cycles (2s @ 3.3V) */
WD_4KCLK_gc = (0x09<<4)  # 4K cycles (4s @ 3.3V) */
WD_8KCLK_gc = (0x0A<<4)  # 8K cycles (8s @ 3.3V) */
WDP_8CLK_gc = (0x00<<0)  # 8 cycles (8ms @ 3.3V) */
WDP_16CLK_gc = (0x01<<0)  # 16 cycles (16ms @ 3.3V) */
WDP_32CLK_gc = (0x02<<0)  # 32 cycles (32ms @ 3.3V) */
WDP_64CLK_gc = (0x03<<0)  # 64 cycles (64ms @ 3.3V) */
WDP_128CLK_gc = (0x04<<0)  # 128 cycles (0.125s @ 3.3V) */
WDP_256CLK_gc = (0x05<<0)  # 256 cycles (0.25s @ 3.3V) */
WDP_512CLK_gc = (0x06<<0)  # 512 cycles (0.5s @ 3.3V) */
WDP_1KCLK_gc = (0x07<<0)  # 1K cycles (1s @ 3.3V) */
WDP_2KCLK_gc = (0x08<<0)  # 2K cycles (2s @ 3.3V) */
WDP_4KCLK_gc = (0x09<<0)  # 4K cycles (4s @ 3.3V) */
WDP_8KCLK_gc = (0x0A<<0)  # 8K cycles (8s @ 3.3V) */
SUT_0MS_gc = (0x03<<2)  # 0 ms */
SUT_4MS_gc = (0x01<<2)  # 4 ms */
SUT_64MS_gc = (0x00<<2)  # 64 ms */
BODLVL_1V6_gc = (0x07<<0)  # 1.6 V */
BODLVL_1V8_gc = (0x06<<0)  # 1.8 V */
BODLVL_2V0_gc = (0x05<<0)  # 2.0 V */
BODLVL_2V2_gc = (0x04<<0)  # 2.2 V */
BODLVL_2V4_gc = (0x03<<0)  # 2.4 V */
BODLVL_2V6_gc = (0x02<<0)  # 2.6 V */
BODLVL_2V8_gc = (0x01<<0)  # 2.8 V */
BODLVL_3V0_gc = (0x00<<0)  # 3.0 V */
FUSE_BLBB_RWLOCK_gc = (0x00<<6)  # Read and write not allowed */
FUSE_BLBB_RLOCK_gc = (0x01<<6)  # Read not allowed */
FUSE_BLBB_WLOCK_gc = (0x02<<6)  # Write not allowed */
FUSE_BLBB_NOLOCK_gc = (0x03<<6)  # No locks */
FUSE_BLBA_RWLOCK_gc = (0x00<<4)  # Read and write not allowed */
FUSE_BLBA_RLOCK_gc = (0x01<<4)  # Read not allowed */
FUSE_BLBA_WLOCK_gc = (0x02<<4)  # Write not allowed */
FUSE_BLBA_NOLOCK_gc = (0x03<<4)  # No locks */
FUSE_BLBAT_RWLOCK_gc = (0x00<<2)  # Read and write not allowed */
FUSE_BLBAT_RLOCK_gc = (0x01<<2)  # Read not allowed */
FUSE_BLBAT_WLOCK_gc = (0x02<<2)  # Write not allowed */
FUSE_BLBAT_NOLOCK_gc = (0x03<<2)  # No locks */
FUSE_LB_RWLOCK_gc = (0x00<<0)  # Read and write not allowed */
FUSE_LB_WLOCK_gc = (0x02<<0)  # Write not allowed */
FUSE_LB_NOLOCK_gc = (0x03<<0)  # No locks */
